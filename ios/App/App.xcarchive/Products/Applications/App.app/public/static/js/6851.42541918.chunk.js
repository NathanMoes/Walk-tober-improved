/*! For license information please see 6851.42541918.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkwalktober=self.webpackChunkwalktober||[]).push([[6851],{6851:function(e,t,a){a.r(t),a.d(t,{Swiper:function(){return V}});var i=a(2963),n=a(7326),r=a(136),s=a(9388),o=a(4942),l=a(3144),d=a(5671);function c(e){return null!==e&&"object"===typeof e&&"constructor"in e&&e.constructor===Object}function u(e,t){void 0===e&&(e={}),void 0===t&&(t={}),Object.keys(t).forEach((function(a){"undefined"===typeof e[a]?e[a]=t[a]:c(t[a])&&c(e[a])&&Object.keys(t[a]).length>0&&u(e[a],t[a])}))}var p="undefined"!==typeof document?document:{},h={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};u(p,h);var v="undefined"!==typeof window?window:{};u(v,{document:h,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}}});var f=(0,l.Z)((function e(t){(0,d.Z)(this,e);for(var a=0;a<t.length;a+=1)this[a]=t[a];return this.length=t.length,this}));function m(e,t){var a=[],i=0;if(e&&!t&&e instanceof f)return e;if(e)if("string"===typeof e){var n,r,s=e.trim();if(s.indexOf("<")>=0&&s.indexOf(">")>=0){var o="div";for(0===s.indexOf("<li")&&(o="ul"),0===s.indexOf("<tr")&&(o="tbody"),0!==s.indexOf("<td")&&0!==s.indexOf("<th")||(o="tr"),0===s.indexOf("<tbody")&&(o="table"),0===s.indexOf("<option")&&(o="select"),(r=p.createElement(o)).innerHTML=s,i=0;i<r.childNodes.length;i+=1)a.push(r.childNodes[i])}else for(n=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||p).querySelectorAll(e.trim()):[p.getElementById(e.trim().split("#")[1])],i=0;i<n.length;i+=1)n[i]&&a.push(n[i])}else if(e.nodeType||e===v||e===p)a.push(e);else if(e.length>0&&e[0].nodeType)for(i=0;i<e.length;i+=1)a.push(e[i]);return new f(a)}function g(e){for(var t=[],a=0;a<e.length;a+=1)-1===t.indexOf(e[a])&&t.push(e[a]);return t}m.fn=f.prototype,m.Class=f,m.Dom7=f;var b={addClass:function(e){if("undefined"===typeof e)return this;for(var t=e.split(" "),a=0;a<t.length;a+=1)for(var i=0;i<this.length;i+=1)"undefined"!==typeof this[i]&&"undefined"!==typeof this[i].classList&&this[i].classList.add(t[a]);return this},removeClass:function(e){for(var t=e.split(" "),a=0;a<t.length;a+=1)for(var i=0;i<this.length;i+=1)"undefined"!==typeof this[i]&&"undefined"!==typeof this[i].classList&&this[i].classList.remove(t[a]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),a=0;a<t.length;a+=1)for(var i=0;i<this.length;i+=1)"undefined"!==typeof this[i]&&"undefined"!==typeof this[i].classList&&this[i].classList.toggle(t[a]);return this},attr:function(e,t){if(1===arguments.length&&"string"===typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var a=0;a<this.length;a+=1)if(2===arguments.length)this[a].setAttribute(e,t);else for(var i in e)this[a][i]=e[i],this[a].setAttribute(i,e[i]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var a;if("undefined"!==typeof t){for(var i=0;i<this.length;i+=1)(a=this[i]).dom7ElementDataStorage||(a.dom7ElementDataStorage={}),a.dom7ElementDataStorage[e]=t;return this}if(a=this[0]){if(a.dom7ElementDataStorage&&e in a.dom7ElementDataStorage)return a.dom7ElementDataStorage[e];var n=a.getAttribute("data-".concat(e));return n||void 0}},transform:function(e){for(var t=0;t<this.length;t+=1){var a=this[t].style;a.webkitTransform=e,a.transform=e}return this},transition:function(e){"string"!==typeof e&&(e="".concat(e,"ms"));for(var t=0;t<this.length;t+=1){var a=this[t].style;a.webkitTransitionDuration=e,a.transitionDuration=e}return this},on:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var i=t[0],n=t[1],r=t[2],s=t[3];function o(e){var t=e.target;if(t){var a=e.target.dom7EventData||[];if(a.indexOf(e)<0&&a.unshift(e),m(t).is(n))r.apply(t,a);else for(var i=m(t).parents(),s=0;s<i.length;s+=1)m(i[s]).is(n)&&r.apply(i[s],a)}}function l(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),r.apply(this,t)}"function"===typeof t[1]&&(i=t[0],r=t[1],s=t[2],n=void 0),s||(s=!1);for(var d,c=i.split(" "),u=0;u<this.length;u+=1){var p=this[u];if(n)for(d=0;d<c.length;d+=1){var h=c[d];p.dom7LiveListeners||(p.dom7LiveListeners={}),p.dom7LiveListeners[h]||(p.dom7LiveListeners[h]=[]),p.dom7LiveListeners[h].push({listener:r,proxyListener:o}),p.addEventListener(h,o,s)}else for(d=0;d<c.length;d+=1){var v=c[d];p.dom7Listeners||(p.dom7Listeners={}),p.dom7Listeners[v]||(p.dom7Listeners[v]=[]),p.dom7Listeners[v].push({listener:r,proxyListener:l}),p.addEventListener(v,l,s)}}return this},off:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var i=t[0],n=t[1],r=t[2],s=t[3];"function"===typeof t[1]&&(i=t[0],r=t[1],s=t[2],n=void 0),s||(s=!1);for(var o=i.split(" "),l=0;l<o.length;l+=1)for(var d=o[l],c=0;c<this.length;c+=1){var u=this[c],p=void 0;if(!n&&u.dom7Listeners?p=u.dom7Listeners[d]:n&&u.dom7LiveListeners&&(p=u.dom7LiveListeners[d]),p&&p.length)for(var h=p.length-1;h>=0;h-=1){var v=p[h];r&&v.listener===r||r&&v.listener&&v.listener.dom7proxy&&v.listener.dom7proxy===r?(u.removeEventListener(d,v.proxyListener,s),p.splice(h,1)):r||(u.removeEventListener(d,v.proxyListener,s),p.splice(h,1))}}return this},trigger:function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];for(var i=t[0].split(" "),n=t[1],r=0;r<i.length;r+=1)for(var s=i[r],o=0;o<this.length;o+=1){var l=this[o],d=void 0;try{d=new v.CustomEvent(s,{detail:n,bubbles:!0,cancelable:!0})}catch(c){(d=p.createEvent("Event")).initEvent(s,!0,!0),d.detail=n}l.dom7EventData=t.filter((function(e,t){return t>0})),l.dispatchEvent(d),l.dom7EventData=[],delete l.dom7EventData}return this},transitionEnd:function(e){var t,a=["webkitTransitionEnd","transitionend"],i=this;function n(r){if(r.target===this)for(e.call(this,r),t=0;t<a.length;t+=1)i.off(a[t],n)}if(e)for(t=0;t<a.length;t+=1)i.on(a[t],n);return this},outerWidth:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(this.length>0){var e=this[0],t=e.getBoundingClientRect(),a=p.body,i=e.clientTop||a.clientTop||0,n=e.clientLeft||a.clientLeft||0,r=e===v?v.scrollY:e.scrollTop,s=e===v?v.scrollX:e.scrollLeft;return{top:t.top+r-i,left:t.left+s-n}}return null},css:function(e,t){var a;if(1===arguments.length){if("string"!==typeof e){for(a=0;a<this.length;a+=1)for(var i in e)this[a].style[i]=e[i];return this}if(this[0])return v.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"===typeof e){for(a=0;a<this.length;a+=1)this[a].style[e]=t;return this}return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if("undefined"===typeof e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if("undefined"===typeof e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,a,i=this[0];if(!i||"undefined"===typeof e)return!1;if("string"===typeof e){if(i.matches)return i.matches(e);if(i.webkitMatchesSelector)return i.webkitMatchesSelector(e);if(i.msMatchesSelector)return i.msMatchesSelector(e);for(t=m(e),a=0;a<t.length;a+=1)if(t[a]===i)return!0;return!1}if(e===p)return i===p;if(e===v)return i===v;if(e.nodeType||e instanceof f){for(t=e.nodeType?[e]:e,a=0;a<t.length;a+=1)if(t[a]===i)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if("undefined"===typeof e)return this;var t,a=this.length;return new f(e>a-1?[]:e<0?(t=a+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=0;t<arguments.length;t+=1){e=t<0||arguments.length<=t?void 0:arguments[t];for(var a=0;a<this.length;a+=1)if("string"===typeof e){var i=p.createElement("div");for(i.innerHTML=e;i.firstChild;)this[a].appendChild(i.firstChild)}else if(e instanceof f)for(var n=0;n<e.length;n+=1)this[a].appendChild(e[n]);else this[a].appendChild(e)}return this},prepend:function(e){var t,a;for(t=0;t<this.length;t+=1)if("string"===typeof e){var i=p.createElement("div");for(i.innerHTML=e,a=i.childNodes.length-1;a>=0;a-=1)this[t].insertBefore(i.childNodes[a],this[t].childNodes[0])}else if(e instanceof f)for(a=0;a<e.length;a+=1)this[t].insertBefore(e[a],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this},next:function(e){return this.length>0?e?this[0].nextElementSibling&&m(this[0].nextElementSibling).is(e)?new f([this[0].nextElementSibling]):new f([]):this[0].nextElementSibling?new f([this[0].nextElementSibling]):new f([]):new f([])},nextAll:function(e){var t=[],a=this[0];if(!a)return new f([]);for(;a.nextElementSibling;){var i=a.nextElementSibling;e?m(i).is(e)&&t.push(i):t.push(i),a=i}return new f(t)},prev:function(e){if(this.length>0){var t=this[0];return e?t.previousElementSibling&&m(t.previousElementSibling).is(e)?new f([t.previousElementSibling]):new f([]):t.previousElementSibling?new f([t.previousElementSibling]):new f([])}return new f([])},prevAll:function(e){var t=[],a=this[0];if(!a)return new f([]);for(;a.previousElementSibling;){var i=a.previousElementSibling;e?m(i).is(e)&&t.push(i):t.push(i),a=i}return new f(t)},parent:function(e){for(var t=[],a=0;a<this.length;a+=1)null!==this[a].parentNode&&(e?m(this[a].parentNode).is(e)&&t.push(this[a].parentNode):t.push(this[a].parentNode));return m(g(t))},parents:function(e){for(var t=[],a=0;a<this.length;a+=1)for(var i=this[a].parentNode;i;)e?m(i).is(e)&&t.push(i):t.push(i),i=i.parentNode;return m(g(t))},closest:function(e){var t=this;return"undefined"===typeof e?new f([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],a=0;a<this.length;a+=1)for(var i=this[a].querySelectorAll(e),n=0;n<i.length;n+=1)t.push(i[n]);return new f(t)},children:function(e){for(var t=[],a=0;a<this.length;a+=1)for(var i=this[a].childNodes,n=0;n<i.length;n+=1)e?1===i[n].nodeType&&m(i[n]).is(e)&&t.push(i[n]):1===i[n].nodeType&&t.push(i[n]);return new f(g(t))},filter:function(e){for(var t=[],a=this,i=0;i<a.length;i+=1)e.call(a[i],i,a[i])&&t.push(a[i]);return new f(t)},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e,t,a=this,i=arguments.length,n=new Array(i),r=0;r<i;r++)n[r]=arguments[r];for(e=0;e<n.length;e+=1){var s=m(n[e]);for(t=0;t<s.length;t+=1)a[a.length]=s[t],a.length+=1}return a},styles:function(){return this[0]?v.getComputedStyle(this[0],null):{}}};Object.keys(b).forEach((function(e){m.fn[e]=m.fn[e]||b[e]}));var w={deleteProps:function(e){var t=e;Object.keys(t).forEach((function(e){try{t[e]=null}catch(a){}try{delete t[e]}catch(a){}}))},nextTick:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e){var t,a,i,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"x",r=v.getComputedStyle(e,null);return v.WebKitCSSMatrix?((a=r.transform||r.webkitTransform).split(",").length>6&&(a=a.split(", ").map((function(e){return e.replace(",",".")})).join(", ")),i=new v.WebKitCSSMatrix("none"===a?"":a)):t=(i=r.MozTransform||r.OTransform||r.MsTransform||r.msTransform||r.transform||r.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===n&&(a=v.WebKitCSSMatrix?i.m41:16===t.length?parseFloat(t[12]):parseFloat(t[4])),"y"===n&&(a=v.WebKitCSSMatrix?i.m42:16===t.length?parseFloat(t[13]):parseFloat(t[5])),a||0},parseUrlQuery:function(e){var t,a,i,n,r={},s=e||v.location.href;if("string"===typeof s&&s.length)for(n=(a=(s=s.indexOf("?")>-1?s.replace(/\S*\?/,""):"").split("&").filter((function(e){return""!==e}))).length,t=0;t<n;t+=1)i=a[t].replace(/#\S+/g,"").split("="),r[decodeURIComponent(i[0])]="undefined"===typeof i[1]?void 0:decodeURIComponent(i[1])||"";return r},isObject:function(e){return"object"===typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=Object(arguments.length<=0?void 0:arguments[0]),t=["__proto__","constructor","prototype"],a=1;a<arguments.length;a+=1){var i=a<0||arguments.length<=a?void 0:arguments[a];if(void 0!==i&&null!==i)for(var n=Object.keys(Object(i)).filter((function(e){return t.indexOf(e)<0})),r=0,s=n.length;r<s;r+=1){var o=n[r],l=Object.getOwnPropertyDescriptor(i,o);void 0!==l&&l.enumerable&&(w.isObject(e[o])&&w.isObject(i[o])?w.extend(e[o],i[o]):!w.isObject(e[o])&&w.isObject(i[o])?(e[o]={},w.extend(e[o],i[o])):e[o]=i[o])}}return e}},y={touch:!!("ontouchstart"in v||v.DocumentTouch&&p instanceof v.DocumentTouch),pointerEvents:!!v.PointerEvent&&"maxTouchPoints"in v.navigator&&v.navigator.maxTouchPoints>=0,observer:"MutationObserver"in v||"WebkitMutationObserver"in v,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});v.addEventListener("testPassiveListener",null,t)}catch(a){}return e}(),gestures:"ongesturestart"in v},T=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,d.Z)(this,e);var a=this;a.params=t,a.eventsListeners={},a.params&&a.params.on&&Object.keys(a.params.on).forEach((function(e){a.on(e,a.params.on[e])}))}return(0,l.Z)(e,[{key:"on",value:function(e,t,a){var i=this;if("function"!==typeof t)return i;var n=a?"unshift":"push";return e.split(" ").forEach((function(e){i.eventsListeners[e]||(i.eventsListeners[e]=[]),i.eventsListeners[e][n](t)})),i}},{key:"once",value:function(e,t,a){var i=this;if("function"!==typeof t)return i;function n(){i.off(e,n),n.f7proxy&&delete n.f7proxy;for(var a=arguments.length,r=new Array(a),s=0;s<a;s++)r[s]=arguments[s];t.apply(i,r)}return n.f7proxy=t,i.on(e,n,a)}},{key:"off",value:function(e,t){var a=this;return a.eventsListeners?(e.split(" ").forEach((function(e){"undefined"===typeof t?a.eventsListeners[e]=[]:a.eventsListeners[e]&&a.eventsListeners[e].length&&a.eventsListeners[e].forEach((function(i,n){(i===t||i.f7proxy&&i.f7proxy===t)&&a.eventsListeners[e].splice(n,1)}))})),a):a}},{key:"emit",value:function(){var e,t,a,i=this;if(!i.eventsListeners)return i;for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];"string"===typeof r[0]||Array.isArray(r[0])?(e=r[0],t=r.slice(1,r.length),a=i):(e=r[0].events,t=r[0].data,a=r[0].context||i);var o=Array.isArray(e)?e:e.split(" ");return o.forEach((function(e){if(i.eventsListeners&&i.eventsListeners[e]){var n=[];i.eventsListeners[e].forEach((function(e){n.push(e)})),n.forEach((function(e){e.apply(a,t)}))}})),i}},{key:"useModulesParams",value:function(e){var t=this;t.modules&&Object.keys(t.modules).forEach((function(a){var i=t.modules[a];i.params&&w.extend(e,i.params)}))}},{key:"useModules",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=this;t.modules&&Object.keys(t.modules).forEach((function(a){var i=t.modules[a],n=e[a]||{};i.instance&&Object.keys(i.instance).forEach((function(e){var a=i.instance[e];t[e]="function"===typeof a?a.bind(t):a})),i.on&&t.on&&Object.keys(i.on).forEach((function(e){t.on(e,i.on[e])})),i.create&&i.create.bind(t)(n)}))}}],[{key:"components",set:function(e){this.use&&this.use(e)}},{key:"installModule",value:function(e){var t=this;t.prototype.modules||(t.prototype.modules={});var a=e.name||"".concat(Object.keys(t.prototype.modules).length,"_").concat(w.now());if(t.prototype.modules[a]=e,e.proto&&Object.keys(e.proto).forEach((function(a){t.prototype[a]=e.proto[a]})),e.static&&Object.keys(e.static).forEach((function(a){t[a]=e.static[a]})),e.install){for(var i=arguments.length,n=new Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];e.install.apply(t,n)}return t}},{key:"use",value:function(e){var t=this;if(Array.isArray(e))return e.forEach((function(e){return t.installModule(e)})),t;for(var a=arguments.length,i=new Array(a>1?a-1:0),n=1;n<a;n++)i[n-1]=arguments[n];return t.installModule.apply(t,[e].concat(i))}}]),e}();var E={updateSize:function(){var e,t,a=this,i=a.$el;e="undefined"!==typeof a.params.width?a.params.width:i[0].clientWidth,t="undefined"!==typeof a.params.height?a.params.height:i[0].clientHeight,0===e&&a.isHorizontal()||0===t&&a.isVertical()||(e=e-parseInt(i.css("padding-left"),10)-parseInt(i.css("padding-right"),10),t=t-parseInt(i.css("padding-top"),10)-parseInt(i.css("padding-bottom"),10),w.extend(a,{width:e,height:t,size:a.isHorizontal()?e:t}))},updateSlides:function(){var e=this,t=e.params,a=e.$wrapperEl,i=e.size,n=e.rtlTranslate,r=e.wrongRTL,s=e.virtual&&t.virtual.enabled,o=s?e.virtual.slides.length:e.slides.length,l=a.children(".".concat(e.params.slideClass)),d=s?e.virtual.slides.length:l.length,c=[],u=[],p=[];function h(e){return!t.cssMode||e!==l.length-1}var f=t.slidesOffsetBefore;"function"===typeof f&&(f=t.slidesOffsetBefore.call(e));var m=t.slidesOffsetAfter;"function"===typeof m&&(m=t.slidesOffsetAfter.call(e));var g=e.snapGrid.length,b=e.snapGrid.length,y=t.spaceBetween,T=-f,E=0,S=0;if("undefined"!==typeof i){var x,C;"string"===typeof y&&y.indexOf("%")>=0&&(y=parseFloat(y.replace("%",""))/100*i),e.virtualSize=-y,n?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),t.slidesPerColumn>1&&(x=Math.floor(d/t.slidesPerColumn)===d/e.params.slidesPerColumn?d:Math.ceil(d/t.slidesPerColumn)*t.slidesPerColumn,"auto"!==t.slidesPerView&&"row"===t.slidesPerColumnFill&&(x=Math.max(x,t.slidesPerView*t.slidesPerColumn)));for(var M,k=t.slidesPerColumn,P=x/k,z=Math.floor(d/t.slidesPerColumn),L=0;L<d;L+=1){C=0;var $=l.eq(L);if(t.slidesPerColumn>1){var D=void 0,O=void 0,I=void 0;if("row"===t.slidesPerColumnFill&&t.slidesPerGroup>1){var A=Math.floor(L/(t.slidesPerGroup*t.slidesPerColumn)),G=L-t.slidesPerColumn*t.slidesPerGroup*A,B=0===A?t.slidesPerGroup:Math.min(Math.ceil((d-A*k*t.slidesPerGroup)/k),t.slidesPerGroup);D=(O=G-(I=Math.floor(G/B))*B+A*t.slidesPerGroup)+I*x/k,$.css({"-webkit-box-ordinal-group":D,"-moz-box-ordinal-group":D,"-ms-flex-order":D,"-webkit-order":D,order:D})}else"column"===t.slidesPerColumnFill?(I=L-(O=Math.floor(L/k))*k,(O>z||O===z&&I===k-1)&&(I+=1)>=k&&(I=0,O+=1)):O=L-(I=Math.floor(L/P))*P;$.css("margin-".concat(e.isHorizontal()?"top":"left"),0!==I&&t.spaceBetween&&"".concat(t.spaceBetween,"px"))}if("none"!==$.css("display")){if("auto"===t.slidesPerView){var X=v.getComputedStyle($[0],null),Y=$[0].style.transform,H=$[0].style.webkitTransform;if(Y&&($[0].style.transform="none"),H&&($[0].style.webkitTransform="none"),t.roundLengths)C=e.isHorizontal()?$.outerWidth(!0):$.outerHeight(!0);else if(e.isHorizontal()){var V=parseFloat(X.getPropertyValue("width")),W=parseFloat(X.getPropertyValue("padding-left")),N=parseFloat(X.getPropertyValue("padding-right")),F=parseFloat(X.getPropertyValue("margin-left")),R=parseFloat(X.getPropertyValue("margin-right")),j=X.getPropertyValue("box-sizing");C=j&&"border-box"===j?V+F+R:V+W+N+F+R}else{var q=parseFloat(X.getPropertyValue("height")),Z=parseFloat(X.getPropertyValue("padding-top")),U=parseFloat(X.getPropertyValue("padding-bottom")),_=parseFloat(X.getPropertyValue("margin-top")),K=parseFloat(X.getPropertyValue("margin-bottom")),Q=X.getPropertyValue("box-sizing");C=Q&&"border-box"===Q?q+_+K:q+Z+U+_+K}Y&&($[0].style.transform=Y),H&&($[0].style.webkitTransform=H),t.roundLengths&&(C=Math.floor(C))}else C=(i-(t.slidesPerView-1)*y)/t.slidesPerView,t.roundLengths&&(C=Math.floor(C)),l[L]&&(e.isHorizontal()?l[L].style.width="".concat(C,"px"):l[L].style.height="".concat(C,"px"));l[L]&&(l[L].swiperSlideSize=C),p.push(C),t.centeredSlides?(T=T+C/2+E/2+y,0===E&&0!==L&&(T=T-i/2-y),0===L&&(T=T-i/2-y),Math.abs(T)<.001&&(T=0),t.roundLengths&&(T=Math.floor(T)),S%t.slidesPerGroup===0&&c.push(T),u.push(T)):(t.roundLengths&&(T=Math.floor(T)),(S-Math.min(e.params.slidesPerGroupSkip,S))%e.params.slidesPerGroup===0&&c.push(T),u.push(T),T=T+C+y),e.virtualSize+=C+y,E=C,S+=1}}if(e.virtualSize=Math.max(e.virtualSize,i)+m,n&&r&&("slide"===t.effect||"coverflow"===t.effect)&&a.css({width:"".concat(e.virtualSize+t.spaceBetween,"px")}),t.setWrapperSize&&(e.isHorizontal()?a.css({width:"".concat(e.virtualSize+t.spaceBetween,"px")}):a.css({height:"".concat(e.virtualSize+t.spaceBetween,"px")})),t.slidesPerColumn>1&&(e.virtualSize=(C+t.spaceBetween)*x,e.virtualSize=Math.ceil(e.virtualSize/t.slidesPerColumn)-t.spaceBetween,e.isHorizontal()?a.css({width:"".concat(e.virtualSize+t.spaceBetween,"px")}):a.css({height:"".concat(e.virtualSize+t.spaceBetween,"px")}),t.centeredSlides)){M=[];for(var J=0;J<c.length;J+=1){var ee=c[J];t.roundLengths&&(ee=Math.floor(ee)),c[J]<e.virtualSize+c[0]&&M.push(ee)}c=M}if(!t.centeredSlides){M=[];for(var te=0;te<c.length;te+=1){var ae=c[te];t.roundLengths&&(ae=Math.floor(ae)),c[te]<=e.virtualSize-i&&M.push(ae)}c=M,Math.floor(e.virtualSize-i)-Math.floor(c[c.length-1])>1&&c.push(e.virtualSize-i)}if(0===c.length&&(c=[0]),0!==t.spaceBetween&&(e.isHorizontal()?n?l.filter(h).css({marginLeft:"".concat(y,"px")}):l.filter(h).css({marginRight:"".concat(y,"px")}):l.filter(h).css({marginBottom:"".concat(y,"px")})),t.centeredSlides&&t.centeredSlidesBounds){var ie=0;p.forEach((function(e){ie+=e+(t.spaceBetween?t.spaceBetween:0)}));var ne=(ie-=t.spaceBetween)-i;c=c.map((function(e){return e<0?-f:e>ne?ne+m:e}))}if(t.centerInsufficientSlides){var re=0;if(p.forEach((function(e){re+=e+(t.spaceBetween?t.spaceBetween:0)})),(re-=t.spaceBetween)<i){var se=(i-re)/2;c.forEach((function(e,t){c[t]=e-se})),u.forEach((function(e,t){u[t]=e+se}))}}w.extend(e,{slides:l,snapGrid:c,slidesGrid:u,slidesSizesGrid:p}),d!==o&&e.emit("slidesLengthChange"),c.length!==g&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),u.length!==b&&e.emit("slidesGridLengthChange"),(t.watchSlidesProgress||t.watchSlidesVisibility)&&e.updateSlidesOffset()}},updateAutoHeight:function(e){var t,a=this,i=[],n=0;if("number"===typeof e?a.setTransition(e):!0===e&&a.setTransition(a.params.speed),"auto"!==a.params.slidesPerView&&a.params.slidesPerView>1)if(a.params.centeredSlides)a.visibleSlides.each((function(e,t){i.push(t)}));else for(t=0;t<Math.ceil(a.params.slidesPerView);t+=1){var r=a.activeIndex+t;if(r>a.slides.length)break;i.push(a.slides.eq(r)[0])}else i.push(a.slides.eq(a.activeIndex)[0]);for(t=0;t<i.length;t+=1)if("undefined"!==typeof i[t]){var s=i[t].offsetHeight;n=s>n?s:n}n&&a.$wrapperEl.css("height","".concat(n,"px"))},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this&&this.translate||0,t=this,a=t.params,i=t.slides,n=t.rtlTranslate;if(0!==i.length){"undefined"===typeof i[0].swiperSlideOffset&&t.updateSlidesOffset();var r=-e;n&&(r=e),i.removeClass(a.slideVisibleClass),t.visibleSlidesIndexes=[],t.visibleSlides=[];for(var s=0;s<i.length;s+=1){var o=i[s],l=(r+(a.centeredSlides?t.minTranslate():0)-o.swiperSlideOffset)/(o.swiperSlideSize+a.spaceBetween);if(a.watchSlidesVisibility||a.centeredSlides&&a.autoHeight){var d=-(r-o.swiperSlideOffset),c=d+t.slidesSizesGrid[s],u=d>=0&&d<t.size-1||c>1&&c<=t.size||d<=0&&c>=t.size;u&&(t.visibleSlides.push(o),t.visibleSlidesIndexes.push(s),i.eq(s).addClass(a.slideVisibleClass))}o.progress=n?-l:l}t.visibleSlides=m(t.visibleSlides)}},updateProgress:function(e){var t=this;if("undefined"===typeof e){var a=t.rtlTranslate?-1:1;e=t&&t.translate&&t.translate*a||0}var i=t.params,n=t.maxTranslate()-t.minTranslate(),r=t.progress,s=t.isBeginning,o=t.isEnd,l=s,d=o;0===n?(r=0,s=!0,o=!0):(s=(r=(e-t.minTranslate())/n)<=0,o=r>=1),w.extend(t,{progress:r,isBeginning:s,isEnd:o}),(i.watchSlidesProgress||i.watchSlidesVisibility||i.centeredSlides&&i.autoHeight)&&t.updateSlidesProgress(e),s&&!l&&t.emit("reachBeginning toEdge"),o&&!d&&t.emit("reachEnd toEdge"),(l&&!s||d&&!o)&&t.emit("fromEdge"),t.emit("progress",r)},updateSlidesClasses:function(){var e,t=this,a=t.slides,i=t.params,n=t.$wrapperEl,r=t.activeIndex,s=t.realIndex,o=t.virtual&&i.virtual.enabled;a.removeClass("".concat(i.slideActiveClass," ").concat(i.slideNextClass," ").concat(i.slidePrevClass," ").concat(i.slideDuplicateActiveClass," ").concat(i.slideDuplicateNextClass," ").concat(i.slideDuplicatePrevClass)),(e=o?t.$wrapperEl.find(".".concat(i.slideClass,'[data-swiper-slide-index="').concat(r,'"]')):a.eq(r)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?n.children(".".concat(i.slideClass,":not(.").concat(i.slideDuplicateClass,')[data-swiper-slide-index="').concat(s,'"]')).addClass(i.slideDuplicateActiveClass):n.children(".".concat(i.slideClass,".").concat(i.slideDuplicateClass,'[data-swiper-slide-index="').concat(s,'"]')).addClass(i.slideDuplicateActiveClass));var l=e.nextAll(".".concat(i.slideClass)).eq(0).addClass(i.slideNextClass);i.loop&&0===l.length&&(l=a.eq(0)).addClass(i.slideNextClass);var d=e.prevAll(".".concat(i.slideClass)).eq(0).addClass(i.slidePrevClass);i.loop&&0===d.length&&(d=a.eq(-1)).addClass(i.slidePrevClass),i.loop&&(l.hasClass(i.slideDuplicateClass)?n.children(".".concat(i.slideClass,":not(.").concat(i.slideDuplicateClass,')[data-swiper-slide-index="').concat(l.attr("data-swiper-slide-index"),'"]')).addClass(i.slideDuplicateNextClass):n.children(".".concat(i.slideClass,".").concat(i.slideDuplicateClass,'[data-swiper-slide-index="').concat(l.attr("data-swiper-slide-index"),'"]')).addClass(i.slideDuplicateNextClass),d.hasClass(i.slideDuplicateClass)?n.children(".".concat(i.slideClass,":not(.").concat(i.slideDuplicateClass,')[data-swiper-slide-index="').concat(d.attr("data-swiper-slide-index"),'"]')).addClass(i.slideDuplicatePrevClass):n.children(".".concat(i.slideClass,".").concat(i.slideDuplicateClass,'[data-swiper-slide-index="').concat(d.attr("data-swiper-slide-index"),'"]')).addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,a=this,i=a.rtlTranslate?a.translate:-a.translate,n=a.slidesGrid,r=a.snapGrid,s=a.params,o=a.activeIndex,l=a.realIndex,d=a.snapIndex,c=e;if("undefined"===typeof c){for(var u=0;u<n.length;u+=1)"undefined"!==typeof n[u+1]?i>=n[u]&&i<n[u+1]-(n[u+1]-n[u])/2?c=u:i>=n[u]&&i<n[u+1]&&(c=u+1):i>=n[u]&&(c=u);s.normalizeSlideIndex&&(c<0||"undefined"===typeof c)&&(c=0)}if(r.indexOf(i)>=0)t=r.indexOf(i);else{var p=Math.min(s.slidesPerGroupSkip,c);t=p+Math.floor((c-p)/s.slidesPerGroup)}if(t>=r.length&&(t=r.length-1),c!==o){var h=parseInt(a.slides.eq(c).attr("data-swiper-slide-index")||c,10);w.extend(a,{snapIndex:t,realIndex:h,previousIndex:o,activeIndex:c}),a.emit("activeIndexChange"),a.emit("snapIndexChange"),l!==h&&a.emit("realIndexChange"),(a.initialized||a.params.runCallbacksOnInit)&&a.emit("slideChange")}else t!==d&&(a.snapIndex=t,a.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this,a=t.params,i=m(e.target).closest(".".concat(a.slideClass))[0],n=!1;if(i)for(var r=0;r<t.slides.length;r+=1)t.slides[r]===i&&(n=!0);if(!i||!n)return t.clickedSlide=void 0,void(t.clickedIndex=void 0);t.clickedSlide=i,t.virtual&&t.params.virtual.enabled?t.clickedIndex=parseInt(m(i).attr("data-swiper-slide-index"),10):t.clickedIndex=m(i).index(),a.slideToClickedSlide&&void 0!==t.clickedIndex&&t.clickedIndex!==t.activeIndex&&t.slideToClickedSlide()}};var S={getTranslate:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.isHorizontal()?"x":"y",t=this,a=t.params,i=t.rtlTranslate,n=t.translate,r=t.$wrapperEl;if(a.virtualTranslate)return i?-n:n;if(a.cssMode)return n;var s=w.getTranslate(r[0],e);return i&&(s=-s),s||0},setTranslate:function(e,t){var a=this,i=a.rtlTranslate,n=a.params,r=a.$wrapperEl,s=a.wrapperEl,o=a.progress,l=0,d=0;a.isHorizontal()?l=i?-e:e:d=e,n.roundLengths&&(l=Math.floor(l),d=Math.floor(d)),n.cssMode?s[a.isHorizontal()?"scrollLeft":"scrollTop"]=a.isHorizontal()?-l:-d:n.virtualTranslate||r.transform("translate3d(".concat(l,"px, ").concat(d,"px, ").concat(0,"px)")),a.previousTranslate=a.translate,a.translate=a.isHorizontal()?l:d;var c=a.maxTranslate()-a.minTranslate();(0===c?0:(e-a.minTranslate())/c)!==o&&a.updateProgress(e),a.emit("setTranslate",a.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.params.speed,a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],n=arguments.length>4?arguments[4]:void 0,r=this,s=r.params,l=r.wrapperEl;if(r.animating&&s.preventInteractionOnTransition)return!1;var d,c=r.minTranslate(),u=r.maxTranslate();if(d=i&&e>c?c:i&&e<u?u:e,r.updateProgress(d),s.cssMode){var p,h=r.isHorizontal();if(0===t)l[h?"scrollLeft":"scrollTop"]=-d;else if(l.scrollTo)l.scrollTo((p={},(0,o.Z)(p,h?"left":"top",-d),(0,o.Z)(p,"behavior","smooth"),p));else l[h?"scrollLeft":"scrollTop"]=-d;return!0}return 0===t?(r.setTransition(0),r.setTranslate(d),a&&(r.emit("beforeTransitionStart",t,n),r.emit("transitionEnd"))):(r.setTransition(t),r.setTranslate(d),a&&(r.emit("beforeTransitionStart",t,n),r.emit("transitionStart")),r.animating||(r.animating=!0,r.onTranslateToWrapperTransitionEnd||(r.onTranslateToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.$wrapperEl[0].removeEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].removeEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd),r.onTranslateToWrapperTransitionEnd=null,delete r.onTranslateToWrapperTransitionEnd,a&&r.emit("transitionEnd"))}),r.$wrapperEl[0].addEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.$wrapperEl[0].addEventListener("webkitTransitionEnd",r.onTranslateToWrapperTransitionEnd))),!0}};var x={setTransition:function(e,t){var a=this;a.params.cssMode||a.$wrapperEl.transition(e),a.emit("setTransition",e,t)},transitionStart:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,a=this,i=a.activeIndex,n=a.params,r=a.previousIndex;if(!n.cssMode){n.autoHeight&&a.updateAutoHeight();var s=t;if(s||(s=i>r?"next":i<r?"prev":"reset"),a.emit("transitionStart"),e&&i!==r){if("reset"===s)return void a.emit("slideResetTransitionStart");a.emit("slideChangeTransitionStart"),"next"===s?a.emit("slideNextTransitionStart"):a.emit("slidePrevTransitionStart")}}},transitionEnd:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,a=this,i=a.activeIndex,n=a.previousIndex,r=a.params;if(a.animating=!1,!r.cssMode){a.setTransition(0);var s=t;if(s||(s=i>n?"next":i<n?"prev":"reset"),a.emit("transitionEnd"),e&&i!==n){if("reset"===s)return void a.emit("slideResetTransitionEnd");a.emit("slideChangeTransitionEnd"),"next"===s?a.emit("slideNextTransitionEnd"):a.emit("slidePrevTransitionEnd")}}}};var C={slideTo:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.params.speed,a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=arguments.length>3?arguments[3]:void 0,n=this,r=e;r<0&&(r=0);var s=n.params,l=n.snapGrid,d=n.slidesGrid,c=n.previousIndex,u=n.activeIndex,p=n.rtlTranslate,h=n.wrapperEl;if(n.animating&&s.preventInteractionOnTransition)return!1;var v=Math.min(n.params.slidesPerGroupSkip,r),f=v+Math.floor((r-v)/n.params.slidesPerGroup);f>=l.length&&(f=l.length-1),(u||s.initialSlide||0)===(c||0)&&a&&n.emit("beforeSlideChangeStart");var m,g=-l[f];if(n.updateProgress(g),s.normalizeSlideIndex)for(var b=0;b<d.length;b+=1)-Math.floor(100*g)>=Math.floor(100*d[b])&&(r=b);if(n.initialized&&r!==u){if(!n.allowSlideNext&&g<n.translate&&g<n.minTranslate())return!1;if(!n.allowSlidePrev&&g>n.translate&&g>n.maxTranslate()&&(u||0)!==r)return!1}if(m=r>u?"next":r<u?"prev":"reset",p&&-g===n.translate||!p&&g===n.translate)return n.updateActiveIndex(r),s.autoHeight&&n.updateAutoHeight(),n.updateSlidesClasses(),"slide"!==s.effect&&n.setTranslate(g),"reset"!==m&&(n.transitionStart(a,m),n.transitionEnd(a,m)),!1;if(s.cssMode){var w,y=n.isHorizontal(),T=-g;if(p&&(T=h.scrollWidth-h.offsetWidth-T),0===t)h[y?"scrollLeft":"scrollTop"]=T;else if(h.scrollTo)h.scrollTo((w={},(0,o.Z)(w,y?"left":"top",T),(0,o.Z)(w,"behavior","smooth"),w));else h[y?"scrollLeft":"scrollTop"]=T;return!0}return 0===t?(n.setTransition(0),n.setTranslate(g),n.updateActiveIndex(r),n.updateSlidesClasses(),n.emit("beforeTransitionStart",t,i),n.transitionStart(a,m),n.transitionEnd(a,m)):(n.setTransition(t),n.setTranslate(g),n.updateActiveIndex(r),n.updateSlidesClasses(),n.emit("beforeTransitionStart",t,i),n.transitionStart(a,m),n.animating||(n.animating=!0,n.onSlideToWrapperTransitionEnd||(n.onSlideToWrapperTransitionEnd=function(e){n&&!n.destroyed&&e.target===this&&(n.$wrapperEl[0].removeEventListener("transitionend",n.onSlideToWrapperTransitionEnd),n.$wrapperEl[0].removeEventListener("webkitTransitionEnd",n.onSlideToWrapperTransitionEnd),n.onSlideToWrapperTransitionEnd=null,delete n.onSlideToWrapperTransitionEnd,n.transitionEnd(a,m))}),n.$wrapperEl[0].addEventListener("transitionend",n.onSlideToWrapperTransitionEnd),n.$wrapperEl[0].addEventListener("webkitTransitionEnd",n.onSlideToWrapperTransitionEnd))),!0},slideToLoop:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.params.speed,a=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=arguments.length>3?arguments[3]:void 0,n=this,r=e;return n.params.loop&&(r+=n.loopedSlides),n.slideTo(r,t,a,i)},slideNext:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.params.speed,t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a=arguments.length>2?arguments[2]:void 0,i=this,n=i.params,r=i.animating,s=i.activeIndex<n.slidesPerGroupSkip?1:n.slidesPerGroup;if(n.loop){if(r)return!1;i.loopFix(),i._clientLeft=i.$wrapperEl[0].clientLeft}return i.slideTo(i.activeIndex+s,e,t,a)},slidePrev:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.params.speed,t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a=arguments.length>2?arguments[2]:void 0,i=this,n=i.params,r=i.animating,s=i.snapGrid,o=i.slidesGrid,l=i.rtlTranslate;if(n.loop){if(r)return!1;i.loopFix(),i._clientLeft=i.$wrapperEl[0].clientLeft}var d=l?i.translate:-i.translate;function c(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var u=c(d),p=s.map((function(e){return c(e)}));o.map((function(e){return c(e)})),s[p.indexOf(u)];var h,v=s[p.indexOf(u)-1];return"undefined"===typeof v&&n.cssMode&&s.forEach((function(e){!v&&u>=e&&(v=e)})),"undefined"!==typeof v&&(h=o.indexOf(v))<0&&(h=i.activeIndex-1),i.slideTo(h,e,t,a)},slideReset:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.params.speed,t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a=arguments.length>2?arguments[2]:void 0,i=this;return i.slideTo(i.activeIndex,e,t,a)},slideToClosest:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.params.speed,t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a=arguments.length>2?arguments[2]:void 0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,n=this,r=n.activeIndex,s=Math.min(n.params.slidesPerGroupSkip,r),o=s+Math.floor((r-s)/n.params.slidesPerGroup),l=n.rtlTranslate?n.translate:-n.translate;if(l>=n.snapGrid[o]){var d=n.snapGrid[o],c=n.snapGrid[o+1];l-d>(c-d)*i&&(r+=n.params.slidesPerGroup)}else{var u=n.snapGrid[o-1],p=n.snapGrid[o];l-u<=(p-u)*i&&(r-=n.params.slidesPerGroup)}return r=Math.max(r,0),r=Math.min(r,n.slidesGrid.length-1),n.slideTo(r,e,t,a)},slideToClickedSlide:function(){var e,t=this,a=t.params,i=t.$wrapperEl,n="auto"===a.slidesPerView?t.slidesPerViewDynamic():a.slidesPerView,r=t.clickedIndex;if(a.loop){if(t.animating)return;e=parseInt(m(t.clickedSlide).attr("data-swiper-slide-index"),10),a.centeredSlides?r<t.loopedSlides-n/2||r>t.slides.length-t.loopedSlides+n/2?(t.loopFix(),r=i.children(".".concat(a.slideClass,'[data-swiper-slide-index="').concat(e,'"]:not(.').concat(a.slideDuplicateClass,")")).eq(0).index(),w.nextTick((function(){t.slideTo(r)}))):t.slideTo(r):r>t.slides.length-n?(t.loopFix(),r=i.children(".".concat(a.slideClass,'[data-swiper-slide-index="').concat(e,'"]:not(.').concat(a.slideDuplicateClass,")")).eq(0).index(),w.nextTick((function(){t.slideTo(r)}))):t.slideTo(r)}else t.slideTo(r)}};var M={loopCreate:function(){var e=this,t=e.params,a=e.$wrapperEl;a.children(".".concat(t.slideClass,".").concat(t.slideDuplicateClass)).remove();var i=a.children(".".concat(t.slideClass));if(t.loopFillGroupWithBlank){var n=t.slidesPerGroup-i.length%t.slidesPerGroup;if(n!==t.slidesPerGroup){for(var r=0;r<n;r+=1){var s=m(p.createElement("div")).addClass("".concat(t.slideClass," ").concat(t.slideBlankClass));a.append(s)}i=a.children(".".concat(t.slideClass))}}"auto"!==t.slidesPerView||t.loopedSlides||(t.loopedSlides=i.length),e.loopedSlides=Math.ceil(parseFloat(t.loopedSlides||t.slidesPerView,10)),e.loopedSlides+=t.loopAdditionalSlides,e.loopedSlides>i.length&&(e.loopedSlides=i.length);var o=[],l=[];i.each((function(t,a){var n=m(a);t<e.loopedSlides&&l.push(a),t<i.length&&t>=i.length-e.loopedSlides&&o.push(a),n.attr("data-swiper-slide-index",t)}));for(var d=0;d<l.length;d+=1)a.append(m(l[d].cloneNode(!0)).addClass(t.slideDuplicateClass));for(var c=o.length-1;c>=0;c-=1)a.prepend(m(o[c].cloneNode(!0)).addClass(t.slideDuplicateClass))},loopFix:function(){var e=this;e.emit("beforeLoopFix");var t,a=e.activeIndex,i=e.slides,n=e.loopedSlides,r=e.allowSlidePrev,s=e.allowSlideNext,o=e.snapGrid,l=e.rtlTranslate;e.allowSlidePrev=!0,e.allowSlideNext=!0;var d=-o[a]-e.getTranslate();if(a<n)t=i.length-3*n+a,t+=n,e.slideTo(t,0,!1,!0)&&0!==d&&e.setTranslate((l?-e.translate:e.translate)-d);else if(a>=i.length-n){t=-i.length+a+n,t+=n,e.slideTo(t,0,!1,!0)&&0!==d&&e.setTranslate((l?-e.translate:e.translate)-d)}e.allowSlidePrev=r,e.allowSlideNext=s,e.emit("loopFix")},loopDestroy:function(){var e=this,t=e.$wrapperEl,a=e.params,i=e.slides;t.children(".".concat(a.slideClass,".").concat(a.slideDuplicateClass,",.").concat(a.slideClass,".").concat(a.slideBlankClass)).remove(),i.removeAttr("data-swiper-slide-index")}};var k={setGrabCursor:function(e){var t=this;if(!(y.touch||!t.params.simulateTouch||t.params.watchOverflow&&t.isLocked||t.params.cssMode)){var a=t.el;a.style.cursor="move",a.style.cursor=e?"-webkit-grabbing":"-webkit-grab",a.style.cursor=e?"-moz-grabbin":"-moz-grab",a.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){var e=this;y.touch||e.params.watchOverflow&&e.isLocked||e.params.cssMode||(e.el.style.cursor="")}};var P={appendSlide:function(e){var t=this,a=t.$wrapperEl,i=t.params;if(i.loop&&t.loopDestroy(),"object"===typeof e&&"length"in e)for(var n=0;n<e.length;n+=1)e[n]&&a.append(e[n]);else a.append(e);i.loop&&t.loopCreate(),i.observer&&y.observer||t.update()},prependSlide:function(e){var t=this,a=t.params,i=t.$wrapperEl,n=t.activeIndex;a.loop&&t.loopDestroy();var r=n+1;if("object"===typeof e&&"length"in e){for(var s=0;s<e.length;s+=1)e[s]&&i.prepend(e[s]);r=n+e.length}else i.prepend(e);a.loop&&t.loopCreate(),a.observer&&y.observer||t.update(),t.slideTo(r,0,!1)},addSlide:function(e,t){var a=this,i=a.$wrapperEl,n=a.params,r=a.activeIndex;n.loop&&(r-=a.loopedSlides,a.loopDestroy(),a.slides=i.children(".".concat(n.slideClass)));var s=a.slides.length;if(e<=0)a.prependSlide(t);else if(e>=s)a.appendSlide(t);else{for(var o=r>e?r+1:r,l=[],d=s-1;d>=e;d-=1){var c=a.slides.eq(d);c.remove(),l.unshift(c)}if("object"===typeof t&&"length"in t){for(var u=0;u<t.length;u+=1)t[u]&&i.append(t[u]);o=r>e?r+t.length:r}else i.append(t);for(var p=0;p<l.length;p+=1)i.append(l[p]);n.loop&&a.loopCreate(),n.observer&&y.observer||a.update(),n.loop?a.slideTo(o+a.loopedSlides,0,!1):a.slideTo(o,0,!1)}},removeSlide:function(e){var t=this,a=t.params,i=t.$wrapperEl,n=t.activeIndex;a.loop&&(n-=t.loopedSlides,t.loopDestroy(),t.slides=i.children(".".concat(a.slideClass)));var r,s=n;if("object"===typeof e&&"length"in e){for(var o=0;o<e.length;o+=1)r=e[o],t.slides[r]&&t.slides.eq(r).remove(),r<s&&(s-=1);s=Math.max(s,0)}else r=e,t.slides[r]&&t.slides.eq(r).remove(),r<s&&(s-=1),s=Math.max(s,0);a.loop&&t.loopCreate(),a.observer&&y.observer||t.update(),a.loop?t.slideTo(s+t.loopedSlides,0,!1):t.slideTo(s,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},z=function(){var e=v.navigator.platform,t=v.navigator.userAgent,a={ios:!1,android:!1,androidChrome:!1,desktop:!1,iphone:!1,ipod:!1,ipad:!1,edge:!1,ie:!1,firefox:!1,macos:!1,windows:!1,cordova:!(!v.cordova&&!v.phonegap),phonegap:!(!v.cordova&&!v.phonegap),electron:!1},i=v.screen.width,n=v.screen.height,r=t.match(/(Android);?[\s\/]+([\d.]+)?/),s=t.match(/(iPad).*OS\s([\d_]+)/),o=t.match(/(iPod)(.*OS\s([\d_]+))?/),l=!s&&t.match(/(iPhone\sOS|iOS)\s([\d_]+)/),d=t.indexOf("MSIE ")>=0||t.indexOf("Trident/")>=0,c=t.indexOf("Edge/")>=0,u=t.indexOf("Gecko/")>=0&&t.indexOf("Firefox/")>=0,p="Win32"===e,h=t.toLowerCase().indexOf("electron")>=0,f="MacIntel"===e;return!s&&f&&y.touch&&(1024===i&&1366===n||834===i&&1194===n||834===i&&1112===n||768===i&&1024===n)&&(s=t.match(/(Version)\/([\d.]+)/),f=!1),a.ie=d,a.edge=c,a.firefox=u,r&&!p&&(a.os="android",a.osVersion=r[2],a.android=!0,a.androidChrome=t.toLowerCase().indexOf("chrome")>=0),(s||l||o)&&(a.os="ios",a.ios=!0),l&&!o&&(a.osVersion=l[2].replace(/_/g,"."),a.iphone=!0),s&&(a.osVersion=s[2].replace(/_/g,"."),a.ipad=!0),o&&(a.osVersion=o[3]?o[3].replace(/_/g,"."):null,a.ipod=!0),a.ios&&a.osVersion&&t.indexOf("Version/")>=0&&"10"===a.osVersion.split(".")[0]&&(a.osVersion=t.toLowerCase().split("version/")[1].split(" ")[0]),a.webView=!(!(l||s||o)||!t.match(/.*AppleWebKit(?!.*Safari)/i)&&!v.navigator.standalone)||v.matchMedia&&v.matchMedia("(display-mode: standalone)").matches,a.webview=a.webView,a.standalone=a.webView,a.desktop=!(a.ios||a.android)||h,a.desktop&&(a.electron=h,a.macos=f,a.windows=p,a.macos&&(a.os="macos"),a.windows&&(a.os="windows")),a.pixelRatio=v.devicePixelRatio||1,a}();function L(e){var t=this,a=t.touchEventsData,i=t.params,n=t.touches;if(!t.animating||!i.preventInteractionOnTransition){var r=e;r.originalEvent&&(r=r.originalEvent);var s=m(r.target);if(("wrapper"!==i.touchEventsTarget||s.closest(t.wrapperEl).length)&&(a.isTouchEvent="touchstart"===r.type,(a.isTouchEvent||!("which"in r)||3!==r.which)&&!(!a.isTouchEvent&&"button"in r&&r.button>0)&&(!a.isTouched||!a.isMoved)))if(i.noSwiping&&s.closest(i.noSwipingSelector?i.noSwipingSelector:".".concat(i.noSwipingClass))[0])t.allowClick=!0;else if(!i.swipeHandler||s.closest(i.swipeHandler)[0]){n.currentX="touchstart"===r.type?r.targetTouches[0].pageX:r.pageX,n.currentY="touchstart"===r.type?r.targetTouches[0].pageY:r.pageY;var o=n.currentX,l=n.currentY,d=i.edgeSwipeDetection||i.iOSEdgeSwipeDetection,c=i.edgeSwipeThreshold||i.iOSEdgeSwipeThreshold;if(!d||!(o<=c||o>=v.screen.width-c)){if(w.extend(a,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),n.startX=o,n.startY=l,a.touchStartTime=w.now(),t.allowClick=!0,t.updateSize(),t.swipeDirection=void 0,i.threshold>0&&(a.allowThresholdMove=!1),"touchstart"!==r.type){var u=!0;s.is(a.formElements)&&(u=!1),p.activeElement&&m(p.activeElement).is(a.formElements)&&p.activeElement!==s[0]&&p.activeElement.blur();var h=u&&t.allowTouchMove&&i.touchStartPreventDefault;(i.touchStartForcePreventDefault||h)&&r.preventDefault()}t.emit("touchStart",r)}}}}function $(e){var t=this,a=t.touchEventsData,i=t.params,n=t.touches,r=t.rtlTranslate,s=e;if(s.originalEvent&&(s=s.originalEvent),a.isTouched){if(!a.isTouchEvent||"touchmove"===s.type){var o="touchmove"===s.type&&s.targetTouches&&(s.targetTouches[0]||s.changedTouches[0]),l="touchmove"===s.type?o.pageX:s.pageX,d="touchmove"===s.type?o.pageY:s.pageY;if(s.preventedByNestedSwiper)return n.startX=l,void(n.startY=d);if(!t.allowTouchMove)return t.allowClick=!1,void(a.isTouched&&(w.extend(n,{startX:l,startY:d,currentX:l,currentY:d}),a.touchStartTime=w.now()));if(a.isTouchEvent&&i.touchReleaseOnEdges&&!i.loop)if(t.isVertical()){if(d<n.startY&&t.translate<=t.maxTranslate()||d>n.startY&&t.translate>=t.minTranslate())return a.isTouched=!1,void(a.isMoved=!1)}else if(l<n.startX&&t.translate<=t.maxTranslate()||l>n.startX&&t.translate>=t.minTranslate())return;if(a.isTouchEvent&&p.activeElement&&s.target===p.activeElement&&m(s.target).is(a.formElements))return a.isMoved=!0,void(t.allowClick=!1);if(a.allowTouchCallbacks&&t.emit("touchMove",s),!(s.targetTouches&&s.targetTouches.length>1)){n.currentX=l,n.currentY=d;var c=n.currentX-n.startX,u=n.currentY-n.startY;if(!(t.params.threshold&&Math.sqrt(Math.pow(c,2)+Math.pow(u,2))<t.params.threshold)){var h;if("undefined"===typeof a.isScrolling)t.isHorizontal()&&n.currentY===n.startY||t.isVertical()&&n.currentX===n.startX?a.isScrolling=!1:c*c+u*u>=25&&(h=180*Math.atan2(Math.abs(u),Math.abs(c))/Math.PI,a.isScrolling=t.isHorizontal()?h>i.touchAngle:90-h>i.touchAngle);if(a.isScrolling&&t.emit("touchMoveOpposite",s),"undefined"===typeof a.startMoving&&(n.currentX===n.startX&&n.currentY===n.startY||(a.startMoving=!0)),a.isScrolling)a.isTouched=!1;else if(a.startMoving){t.allowClick=!1,!i.cssMode&&s.cancelable&&s.preventDefault(),i.touchMoveStopPropagation&&!i.nested&&s.stopPropagation(),a.isMoved||(i.loop&&t.loopFix(),a.startTranslate=t.getTranslate(),t.setTransition(0),t.animating&&t.$wrapperEl.trigger("webkitTransitionEnd transitionend"),a.allowMomentumBounce=!1,!i.grabCursor||!0!==t.allowSlideNext&&!0!==t.allowSlidePrev||t.setGrabCursor(!0),t.emit("sliderFirstMove",s)),t.emit("sliderMove",s),a.isMoved=!0;var v=t.isHorizontal()?c:u;n.diff=v,v*=i.touchRatio,r&&(v=-v),t.swipeDirection=v>0?"prev":"next",a.currentTranslate=v+a.startTranslate;var f=!0,g=i.resistanceRatio;if(i.touchReleaseOnEdges&&(g=0),v>0&&a.currentTranslate>t.minTranslate()?(f=!1,i.resistance&&(a.currentTranslate=t.minTranslate()-1+Math.pow(-t.minTranslate()+a.startTranslate+v,g))):v<0&&a.currentTranslate<t.maxTranslate()&&(f=!1,i.resistance&&(a.currentTranslate=t.maxTranslate()+1-Math.pow(t.maxTranslate()-a.startTranslate-v,g))),f&&(s.preventedByNestedSwiper=!0),!t.allowSlideNext&&"next"===t.swipeDirection&&a.currentTranslate<a.startTranslate&&(a.currentTranslate=a.startTranslate),!t.allowSlidePrev&&"prev"===t.swipeDirection&&a.currentTranslate>a.startTranslate&&(a.currentTranslate=a.startTranslate),i.threshold>0){if(!(Math.abs(v)>i.threshold||a.allowThresholdMove))return void(a.currentTranslate=a.startTranslate);if(!a.allowThresholdMove)return a.allowThresholdMove=!0,n.startX=n.currentX,n.startY=n.currentY,a.currentTranslate=a.startTranslate,void(n.diff=t.isHorizontal()?n.currentX-n.startX:n.currentY-n.startY)}i.followFinger&&!i.cssMode&&((i.freeMode||i.watchSlidesProgress||i.watchSlidesVisibility)&&(t.updateActiveIndex(),t.updateSlidesClasses()),i.freeMode&&(0===a.velocities.length&&a.velocities.push({position:n[t.isHorizontal()?"startX":"startY"],time:a.touchStartTime}),a.velocities.push({position:n[t.isHorizontal()?"currentX":"currentY"],time:w.now()})),t.updateProgress(a.currentTranslate),t.setTranslate(a.currentTranslate))}}}}}else a.startMoving&&a.isScrolling&&t.emit("touchMoveOpposite",s)}function D(e){var t=this,a=t.touchEventsData,i=t.params,n=t.touches,r=t.rtlTranslate,s=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,d=e;if(d.originalEvent&&(d=d.originalEvent),a.allowTouchCallbacks&&t.emit("touchEnd",d),a.allowTouchCallbacks=!1,!a.isTouched)return a.isMoved&&i.grabCursor&&t.setGrabCursor(!1),a.isMoved=!1,void(a.startMoving=!1);i.grabCursor&&a.isMoved&&a.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var c,u=w.now(),p=u-a.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(d),t.emit("tap click",d),p<300&&u-a.lastClickTime<300&&t.emit("doubleTap doubleClick",d)),a.lastClickTime=w.now(),w.nextTick((function(){t.destroyed||(t.allowClick=!0)})),!a.isTouched||!a.isMoved||!t.swipeDirection||0===n.diff||a.currentTranslate===a.startTranslate)return a.isTouched=!1,a.isMoved=!1,void(a.startMoving=!1);if(a.isTouched=!1,a.isMoved=!1,a.startMoving=!1,c=i.followFinger?r?t.translate:-t.translate:-a.currentTranslate,!i.cssMode)if(i.freeMode){if(c<-t.minTranslate())return void t.slideTo(t.activeIndex);if(c>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(i.freeModeMomentum){if(a.velocities.length>1){var h=a.velocities.pop(),v=a.velocities.pop(),f=h.position-v.position,m=h.time-v.time;t.velocity=f/m,t.velocity/=2,Math.abs(t.velocity)<i.freeModeMinimumVelocity&&(t.velocity=0),(m>150||w.now()-h.time>300)&&(t.velocity=0)}else t.velocity=0;t.velocity*=i.freeModeMomentumVelocityRatio,a.velocities.length=0;var g=1e3*i.freeModeMomentumRatio,b=t.velocity*g,y=t.translate+b;r&&(y=-y);var T,E,S=!1,x=20*Math.abs(t.velocity)*i.freeModeMomentumBounceRatio;if(y<t.maxTranslate())i.freeModeMomentumBounce?(y+t.maxTranslate()<-x&&(y=t.maxTranslate()-x),T=t.maxTranslate(),S=!0,a.allowMomentumBounce=!0):y=t.maxTranslate(),i.loop&&i.centeredSlides&&(E=!0);else if(y>t.minTranslate())i.freeModeMomentumBounce?(y-t.minTranslate()>x&&(y=t.minTranslate()+x),T=t.minTranslate(),S=!0,a.allowMomentumBounce=!0):y=t.minTranslate(),i.loop&&i.centeredSlides&&(E=!0);else if(i.freeModeSticky){for(var C,M=0;M<l.length;M+=1)if(l[M]>-y){C=M;break}y=-(y=Math.abs(l[C]-y)<Math.abs(l[C-1]-y)||"next"===t.swipeDirection?l[C]:l[C-1])}if(E&&t.once("transitionEnd",(function(){t.loopFix()})),0!==t.velocity){if(g=r?Math.abs((-y-t.translate)/t.velocity):Math.abs((y-t.translate)/t.velocity),i.freeModeSticky){var k=Math.abs((r?-y:y)-t.translate),P=t.slidesSizesGrid[t.activeIndex];g=k<P?i.speed:k<2*P?1.5*i.speed:2.5*i.speed}}else if(i.freeModeSticky)return void t.slideToClosest();i.freeModeMomentumBounce&&S?(t.updateProgress(T),t.setTransition(g),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating=!0,s.transitionEnd((function(){t&&!t.destroyed&&a.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(i.speed),setTimeout((function(){t.setTranslate(T),s.transitionEnd((function(){t&&!t.destroyed&&t.transitionEnd()}))}),0))}))):t.velocity?(t.updateProgress(y),t.setTransition(g),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,s.transitionEnd((function(){t&&!t.destroyed&&t.transitionEnd()})))):t.updateProgress(y),t.updateActiveIndex(),t.updateSlidesClasses()}else if(i.freeModeSticky)return void t.slideToClosest();(!i.freeModeMomentum||p>=i.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var z=0,L=t.slidesSizesGrid[0],$=0;$<o.length;$+=$<i.slidesPerGroupSkip?1:i.slidesPerGroup){var D=$<i.slidesPerGroupSkip-1?1:i.slidesPerGroup;"undefined"!==typeof o[$+D]?c>=o[$]&&c<o[$+D]&&(z=$,L=o[$+D]-o[$]):c>=o[$]&&(z=$,L=o[o.length-1]-o[o.length-2])}var O=(c-o[z])/L,I=z<i.slidesPerGroupSkip-1?1:i.slidesPerGroup;if(p>i.longSwipesMs){if(!i.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(O>=i.longSwipesRatio?t.slideTo(z+I):t.slideTo(z)),"prev"===t.swipeDirection&&(O>1-i.longSwipesRatio?t.slideTo(z+I):t.slideTo(z))}else{if(!i.shortSwipes)return void t.slideTo(t.activeIndex);t.navigation&&(d.target===t.navigation.nextEl||d.target===t.navigation.prevEl)?d.target===t.navigation.nextEl?t.slideTo(z+I):t.slideTo(z):("next"===t.swipeDirection&&t.slideTo(z+I),"prev"===t.swipeDirection&&t.slideTo(z))}}}function O(){var e=this,t=e.params,a=e.el;if(!a||0!==a.offsetWidth){t.breakpoints&&e.setBreakpoint();var i=e.allowSlideNext,n=e.allowSlidePrev,r=e.snapGrid;e.allowSlideNext=!0,e.allowSlidePrev=!0,e.updateSize(),e.updateSlides(),e.updateSlidesClasses(),("auto"===t.slidesPerView||t.slidesPerView>1)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0),e.autoplay&&e.autoplay.running&&e.autoplay.paused&&e.autoplay.run(),e.allowSlidePrev=n,e.allowSlideNext=i,e.params.watchOverflow&&r!==e.snapGrid&&e.checkOverflow()}}function I(e){var t=this;t.allowClick||(t.params.preventClicks&&e.preventDefault(),t.params.preventClicksPropagation&&t.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}function A(){var e=this,t=e.wrapperEl,a=e.rtlTranslate;e.previousTranslate=e.translate,e.isHorizontal()?e.translate=a?t.scrollWidth-t.offsetWidth-t.scrollLeft:-t.scrollLeft:e.translate=-t.scrollTop,-0===e.translate&&(e.translate=0),e.updateActiveIndex(),e.updateSlidesClasses();var i=e.maxTranslate()-e.minTranslate();(0===i?0:(e.translate-e.minTranslate())/i)!==e.progress&&e.updateProgress(a?-e.translate:e.translate),e.emit("setTranslate",e.translate,!1)}var G=!1;function B(){}var X={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,slidesPerGroupSkip:0,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},Y={update:E,translate:S,transition:x,slide:C,loop:M,grabCursor:k,manipulation:P,events:{attachEvents:function(){var e=this,t=e.params,a=e.touchEvents,i=e.el,n=e.wrapperEl;e.onTouchStart=L.bind(e),e.onTouchMove=$.bind(e),e.onTouchEnd=D.bind(e),t.cssMode&&(e.onScroll=A.bind(e)),e.onClick=I.bind(e);var r=!!t.nested;if(!y.touch&&y.pointerEvents)i.addEventListener(a.start,e.onTouchStart,!1),p.addEventListener(a.move,e.onTouchMove,r),p.addEventListener(a.end,e.onTouchEnd,!1);else{if(y.touch){var s=!("touchstart"!==a.start||!y.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};i.addEventListener(a.start,e.onTouchStart,s),i.addEventListener(a.move,e.onTouchMove,y.passiveListener?{passive:!1,capture:r}:r),i.addEventListener(a.end,e.onTouchEnd,s),a.cancel&&i.addEventListener(a.cancel,e.onTouchEnd,s),G||(p.addEventListener("touchstart",B),G=!0)}(t.simulateTouch&&!z.ios&&!z.android||t.simulateTouch&&!y.touch&&z.ios)&&(i.addEventListener("mousedown",e.onTouchStart,!1),p.addEventListener("mousemove",e.onTouchMove,r),p.addEventListener("mouseup",e.onTouchEnd,!1))}(t.preventClicks||t.preventClicksPropagation)&&i.addEventListener("click",e.onClick,!0),t.cssMode&&n.addEventListener("scroll",e.onScroll),t.updateOnWindowResize?e.on(z.ios||z.android?"resize orientationchange observerUpdate":"resize observerUpdate",O,!0):e.on("observerUpdate",O,!0)},detachEvents:function(){var e=this,t=e.params,a=e.touchEvents,i=e.el,n=e.wrapperEl,r=!!t.nested;if(!y.touch&&y.pointerEvents)i.removeEventListener(a.start,e.onTouchStart,!1),p.removeEventListener(a.move,e.onTouchMove,r),p.removeEventListener(a.end,e.onTouchEnd,!1);else{if(y.touch){var s=!("onTouchStart"!==a.start||!y.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};i.removeEventListener(a.start,e.onTouchStart,s),i.removeEventListener(a.move,e.onTouchMove,r),i.removeEventListener(a.end,e.onTouchEnd,s),a.cancel&&i.removeEventListener(a.cancel,e.onTouchEnd,s)}(t.simulateTouch&&!z.ios&&!z.android||t.simulateTouch&&!y.touch&&z.ios)&&(i.removeEventListener("mousedown",e.onTouchStart,!1),p.removeEventListener("mousemove",e.onTouchMove,r),p.removeEventListener("mouseup",e.onTouchEnd,!1))}(t.preventClicks||t.preventClicksPropagation)&&i.removeEventListener("click",e.onClick,!0),t.cssMode&&n.removeEventListener("scroll",e.onScroll),e.off(z.ios||z.android?"resize orientationchange observerUpdate":"resize observerUpdate",O)}},breakpoints:{setBreakpoint:function(){var e=this,t=e.activeIndex,a=e.initialized,i=e.loopedSlides,n=void 0===i?0:i,r=e.params,s=e.$el,o=r.breakpoints;if(o&&(!o||0!==Object.keys(o).length)){var l=e.getBreakpoint(o);if(l&&e.currentBreakpoint!==l){var d=l in o?o[l]:void 0;d&&["slidesPerView","spaceBetween","slidesPerGroup","slidesPerGroupSkip","slidesPerColumn"].forEach((function(e){var t=d[e];"undefined"!==typeof t&&(d[e]="slidesPerView"!==e||"AUTO"!==t&&"auto"!==t?"slidesPerView"===e?parseFloat(t):parseInt(t,10):"auto")}));var c=d||e.originalParams,u=r.slidesPerColumn>1,p=c.slidesPerColumn>1;u&&!p?s.removeClass("".concat(r.containerModifierClass,"multirow ").concat(r.containerModifierClass,"multirow-column")):!u&&p&&(s.addClass("".concat(r.containerModifierClass,"multirow")),"column"===c.slidesPerColumnFill&&s.addClass("".concat(r.containerModifierClass,"multirow-column")));var h=c.direction&&c.direction!==r.direction,v=r.loop&&(c.slidesPerView!==r.slidesPerView||h);h&&a&&e.changeDirection(),w.extend(e.params,c),w.extend(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),e.currentBreakpoint=l,v&&a&&(e.loopDestroy(),e.loopCreate(),e.updateSlides(),e.slideTo(t-n+e.loopedSlides,0,!1)),e.emit("breakpoint",c)}}},getBreakpoint:function(e){if(e){var t=!1,a=Object.keys(e).map((function(e){if("string"===typeof e&&0===e.indexOf("@")){var t=parseFloat(e.substr(1));return{value:v.innerHeight*t,point:e}}return{value:e,point:e}}));a.sort((function(e,t){return parseInt(e.value,10)-parseInt(t.value,10)}));for(var i=0;i<a.length;i+=1){var n=a[i],r=n.point;n.value<=v.innerWidth&&(t=r)}return t||"max"}}},checkOverflow:{checkOverflow:function(){var e=this,t=e.params,a=e.isLocked,i=e.slides.length>0&&t.slidesOffsetBefore+t.spaceBetween*(e.slides.length-1)+e.slides[0].offsetWidth*e.slides.length;t.slidesOffsetBefore&&t.slidesOffsetAfter&&i?e.isLocked=i<=e.size:e.isLocked=1===e.snapGrid.length,e.allowSlideNext=!e.isLocked,e.allowSlidePrev=!e.isLocked,a!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock"),a&&a!==e.isLocked&&(e.isEnd=!1,e.navigation.update())}},classes:{addClasses:function(){var e=this,t=e.classNames,a=e.params,i=e.rtl,n=e.$el,r=[];r.push("initialized"),r.push(a.direction),a.freeMode&&r.push("free-mode"),a.autoHeight&&r.push("autoheight"),i&&r.push("rtl"),a.slidesPerColumn>1&&(r.push("multirow"),"column"===a.slidesPerColumnFill&&r.push("multirow-column")),z.android&&r.push("android"),z.ios&&r.push("ios"),a.cssMode&&r.push("css-mode"),r.forEach((function(e){t.push(a.containerModifierClass+e)})),n.addClass(t.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,a,i,n,r){var s;function o(){r&&r()}m(e).parent("picture")[0]||e.complete&&n?o():t?((s=new v.Image).onload=o,s.onerror=o,i&&(s.sizes=i),a&&(s.srcset=a),t&&(s.src=t)):o()},preloadImages:function(){var e=this;function t(){"undefined"!==typeof e&&null!==e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var a=0;a<e.imagesToLoad.length;a+=1){var i=e.imagesToLoad[a];e.loadImage(i,i.currentSrc||i.getAttribute("src"),i.srcset||i.getAttribute("srcset"),i.sizes||i.getAttribute("sizes"),!0,t)}}}},H={},V=function(e){(0,r.Z)(a,e);var t=(0,s.Z)(a);function a(){var e,r,s;(0,d.Z)(this,a);for(var o=arguments.length,l=new Array(o),c=0;c<o;c++)l[c]=arguments[c];1===l.length&&l[0].constructor&&l[0].constructor===Object?s=l[0]:(r=l[0],s=l[1]),s||(s={}),s=w.extend({},s),r&&!s.el&&(s.el=r),e=t.call(this,s),Object.keys(Y).forEach((function(e){Object.keys(Y[e]).forEach((function(t){a.prototype[t]||(a.prototype[t]=Y[e][t])}))}));var u=(0,n.Z)(e);"undefined"===typeof u.modules&&(u.modules={}),Object.keys(u.modules).forEach((function(e){var t=u.modules[e];if(t.params){var a=Object.keys(t.params)[0],i=t.params[a];if("object"!==typeof i||null===i)return;if(!(a in s)||!("enabled"in i))return;!0===s[a]&&(s[a]={enabled:!0}),"object"!==typeof s[a]||"enabled"in s[a]||(s[a].enabled=!0),s[a]||(s[a]={enabled:!1})}}));var p=w.extend({},X);u.useModulesParams(p),u.params=w.extend({},p,H,s),u.originalParams=w.extend({},u.params),u.passedParams=w.extend({},s),u.$=m;var h,v=m(u.params.el);if(!(r=v[0]))return(0,i.Z)(e,void 0);if(v.length>1){var f=[];return v.each((function(e,t){var i=w.extend({},s,{el:t});f.push(new a(i))})),(0,i.Z)(e,f)}return r.swiper=u,v.data("swiper",u),r&&r.shadowRoot&&r.shadowRoot.querySelector?(h=m(r.shadowRoot.querySelector(".".concat(u.params.wrapperClass)))).children=function(e){return v.children(e)}:h=v.children(".".concat(u.params.wrapperClass)),w.extend(u,{$el:v,el:r,$wrapperEl:h,wrapperEl:h[0],classNames:[],slides:m(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===u.params.direction},isVertical:function(){return"vertical"===u.params.direction},rtl:"rtl"===r.dir.toLowerCase()||"rtl"===v.css("direction"),rtlTranslate:"horizontal"===u.params.direction&&("rtl"===r.dir.toLowerCase()||"rtl"===v.css("direction")),wrongRTL:"-webkit-box"===h.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:u.params.allowSlideNext,allowSlidePrev:u.params.allowSlidePrev,touchEvents:function(){var e=["touchstart","touchmove","touchend","touchcancel"],t=["mousedown","mousemove","mouseup"];return y.pointerEvents&&(t=["pointerdown","pointermove","pointerup"]),u.touchEventsTouch={start:e[0],move:e[1],end:e[2],cancel:e[3]},u.touchEventsDesktop={start:t[0],move:t[1],end:t[2]},y.touch||!u.params.simulateTouch?u.touchEventsTouch:u.touchEventsDesktop}(),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video, label",lastClickTime:w.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:u.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),u.useModules(),u.params.init&&u.init(),(0,i.Z)(e,u)}return(0,l.Z)(a,[{key:"slidesPerViewDynamic",value:function(){var e=this,t=e.params,a=e.slides,i=e.slidesGrid,n=e.size,r=e.activeIndex,s=1;if(t.centeredSlides){for(var o,l=a[r].swiperSlideSize,d=r+1;d<a.length;d+=1)a[d]&&!o&&(s+=1,(l+=a[d].swiperSlideSize)>n&&(o=!0));for(var c=r-1;c>=0;c-=1)a[c]&&!o&&(s+=1,(l+=a[c].swiperSlideSize)>n&&(o=!0))}else for(var u=r+1;u<a.length;u+=1)i[u]-i[r]<n&&(s+=1);return s}},{key:"update",value:function(){var e=this;if(e&&!e.destroyed){var t=e.snapGrid,a=e.params;a.breakpoints&&e.setBreakpoint(),e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.params.freeMode?(i(),e.params.autoHeight&&e.updateAutoHeight()):(("auto"===e.params.slidesPerView||e.params.slidesPerView>1)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0))||i(),a.watchOverflow&&t!==e.snapGrid&&e.checkOverflow(),e.emit("update")}function i(){var t=e.rtlTranslate?-1*e.translate:e.translate,a=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(a),e.updateActiveIndex(),e.updateSlidesClasses()}}},{key:"changeDirection",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a=this,i=a.params.direction;return e||(e="horizontal"===i?"vertical":"horizontal"),e===i||"horizontal"!==e&&"vertical"!==e||(a.$el.removeClass("".concat(a.params.containerModifierClass).concat(i)).addClass("".concat(a.params.containerModifierClass).concat(e)),a.params.direction=e,a.slides.each((function(t,a){"vertical"===e?a.style.width="":a.style.height=""})),a.emit("changeDirection"),t&&a.update()),a}},{key:"init",value:function(){var e=this;e.initialized||(e.emit("beforeInit"),e.params.breakpoints&&e.setBreakpoint(),e.addClasses(),e.params.loop&&e.loopCreate(),e.updateSize(),e.updateSlides(),e.params.watchOverflow&&e.checkOverflow(),e.params.grabCursor&&e.setGrabCursor(),e.params.preloadImages&&e.preloadImages(),e.params.loop?e.slideTo(e.params.initialSlide+e.loopedSlides,0,e.params.runCallbacksOnInit):e.slideTo(e.params.initialSlide,0,e.params.runCallbacksOnInit),e.attachEvents(),e.initialized=!0,e.emit("init"))}},{key:"destroy",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a=this,i=a.params,n=a.$el,r=a.$wrapperEl,s=a.slides;return"undefined"===typeof a.params||a.destroyed||(a.emit("beforeDestroy"),a.initialized=!1,a.detachEvents(),i.loop&&a.loopDestroy(),t&&(a.removeClasses(),n.removeAttr("style"),r.removeAttr("style"),s&&s.length&&s.removeClass([i.slideVisibleClass,i.slideActiveClass,i.slideNextClass,i.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")),a.emit("destroy"),Object.keys(a.eventsListeners).forEach((function(e){a.off(e)})),!1!==e&&(a.$el[0].swiper=null,a.$el.data("swiper",null),w.deleteProps(a)),a.destroyed=!0),null}}],[{key:"extendDefaults",value:function(e){w.extend(H,e)}},{key:"extendedDefaults",get:function(){return H}},{key:"defaults",get:function(){return X}},{key:"Class",get:function(){return T}},{key:"$",get:function(){return m}}]),a}(T),W={name:"device",proto:{device:z},static:{device:z}},N={name:"support",proto:{support:y},static:{support:y}},F={isEdge:!!v.navigator.userAgent.match(/Edge/g),isSafari:function(){var e=v.navigator.userAgent.toLowerCase();return e.indexOf("safari")>=0&&e.indexOf("chrome")<0&&e.indexOf("android")<0}(),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(v.navigator.userAgent)},R={name:"browser",proto:{browser:F},static:{browser:F}},j={name:"resize",create:function(){var e=this;w.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){v.addEventListener("resize",this.resize.resizeHandler),v.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){v.removeEventListener("resize",this.resize.resizeHandler),v.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},q={func:v.MutationObserver||v.WebkitMutationObserver,attach:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=this,i=q.func,n=new i((function(e){if(1!==e.length){var t=function(){a.emit("observerUpdate",e[0])};v.requestAnimationFrame?v.requestAnimationFrame(t):v.setTimeout(t,0)}else a.emit("observerUpdate",e[0])}));n.observe(e,{attributes:"undefined"===typeof t.attributes||t.attributes,childList:"undefined"===typeof t.childList||t.childList,characterData:"undefined"===typeof t.characterData||t.characterData}),a.observer.observers.push(n)},init:function(){var e=this;if(y.observer&&e.params.observer){if(e.params.observeParents)for(var t=e.$el.parents(),a=0;a<t.length;a+=1)e.observer.attach(t[a]);e.observer.attach(e.$el[0],{childList:e.params.observeSlideChildren}),e.observer.attach(e.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach((function(e){e.disconnect()})),this.observer.observers=[]}},Z={name:"observer",params:{observer:!1,observeParents:!1,observeSlideChildren:!1},create:function(){var e=this;w.extend(e,{observer:{init:q.init.bind(e),attach:q.attach.bind(e),destroy:q.destroy.bind(e),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},U={handle:function(e){var t=this,a=t.rtlTranslate,i=e;i.originalEvent&&(i=i.originalEvent);var n=i.keyCode||i.charCode;if(!t.allowSlideNext&&(t.isHorizontal()&&39===n||t.isVertical()&&40===n||34===n))return!1;if(!t.allowSlidePrev&&(t.isHorizontal()&&37===n||t.isVertical()&&38===n||33===n))return!1;if(!(i.shiftKey||i.altKey||i.ctrlKey||i.metaKey)&&(!p.activeElement||!p.activeElement.nodeName||"input"!==p.activeElement.nodeName.toLowerCase()&&"textarea"!==p.activeElement.nodeName.toLowerCase())){if(t.params.keyboard.onlyInViewport&&(33===n||34===n||37===n||39===n||38===n||40===n)){var r=!1;if(t.$el.parents(".".concat(t.params.slideClass)).length>0&&0===t.$el.parents(".".concat(t.params.slideActiveClass)).length)return;var s=v.innerWidth,o=v.innerHeight,l=t.$el.offset();a&&(l.left-=t.$el[0].scrollLeft);for(var d=[[l.left,l.top],[l.left+t.width,l.top],[l.left,l.top+t.height],[l.left+t.width,l.top+t.height]],c=0;c<d.length;c+=1){var u=d[c];u[0]>=0&&u[0]<=s&&u[1]>=0&&u[1]<=o&&(r=!0)}if(!r)return}t.isHorizontal()?(33!==n&&34!==n&&37!==n&&39!==n||(i.preventDefault?i.preventDefault():i.returnValue=!1),(34!==n&&39!==n||a)&&(33!==n&&37!==n||!a)||t.slideNext(),(33!==n&&37!==n||a)&&(34!==n&&39!==n||!a)||t.slidePrev()):(33!==n&&34!==n&&38!==n&&40!==n||(i.preventDefault?i.preventDefault():i.returnValue=!1),34!==n&&40!==n||t.slideNext(),33!==n&&38!==n||t.slidePrev()),t.emit("keyPress",n)}},enable:function(){var e=this;e.keyboard.enabled||(m(p).on("keydown",e.keyboard.handle),e.keyboard.enabled=!0)},disable:function(){var e=this;e.keyboard.enabled&&(m(p).off("keydown",e.keyboard.handle),e.keyboard.enabled=!1)}},_={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){var e=this;w.extend(e,{keyboard:{enabled:!1,enable:U.enable.bind(e),disable:U.disable.bind(e),handle:U.handle.bind(e)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}};var K={lastScrollTime:w.now(),lastEventBeforeSnap:void 0,recentWheelEvents:[],event:function(){return v.navigator.userAgent.indexOf("firefox")>-1?"DOMMouseScroll":function(){var e="onwheel",t=e in p;if(!t){var a=p.createElement("div");a.setAttribute(e,"return;"),t="function"===typeof a[e]}return!t&&p.implementation&&p.implementation.hasFeature&&!0!==p.implementation.hasFeature("","")&&(t=p.implementation.hasFeature("Events.wheel","3.0")),t}()?"wheel":"mousewheel"},normalize:function(e){var t=0,a=0,i=0,n=0;return"detail"in e&&(a=e.detail),"wheelDelta"in e&&(a=-e.wheelDelta/120),"wheelDeltaY"in e&&(a=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=a,a=0),i=10*t,n=10*a,"deltaY"in e&&(n=e.deltaY),"deltaX"in e&&(i=e.deltaX),e.shiftKey&&!i&&(i=n,n=0),(i||n)&&e.deltaMode&&(1===e.deltaMode?(i*=40,n*=40):(i*=800,n*=800)),i&&!t&&(t=i<1?-1:1),n&&!a&&(a=n<1?-1:1),{spinX:t,spinY:a,pixelX:i,pixelY:n}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,a=this,i=a.params.mousewheel;a.params.cssMode&&t.preventDefault();var n=a.$el;if("container"!==a.params.mousewheel.eventsTarged&&(n=m(a.params.mousewheel.eventsTarged)),!a.mouseEntered&&!n[0].contains(t.target)&&!i.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var r=0,s=a.rtlTranslate?-1:1,o=K.normalize(t);if(i.forceToAxis)if(a.isHorizontal()){if(!(Math.abs(o.pixelX)>Math.abs(o.pixelY)))return!0;r=o.pixelX*s}else{if(!(Math.abs(o.pixelY)>Math.abs(o.pixelX)))return!0;r=o.pixelY}else r=Math.abs(o.pixelX)>Math.abs(o.pixelY)?-o.pixelX*s:-o.pixelY;if(0===r)return!0;if(i.invert&&(r=-r),a.params.freeMode){var l={time:w.now(),delta:Math.abs(r),direction:Math.sign(r)},d=a.mousewheel.lastEventBeforeSnap,c=d&&l.time<d.time+500&&l.delta<=d.delta&&l.direction===d.direction;if(!c){a.mousewheel.lastEventBeforeSnap=void 0,a.params.loop&&a.loopFix();var u=a.getTranslate()+r*i.sensitivity,p=a.isBeginning,h=a.isEnd;if(u>=a.minTranslate()&&(u=a.minTranslate()),u<=a.maxTranslate()&&(u=a.maxTranslate()),a.setTransition(0),a.setTranslate(u),a.updateProgress(),a.updateActiveIndex(),a.updateSlidesClasses(),(!p&&a.isBeginning||!h&&a.isEnd)&&a.updateSlidesClasses(),a.params.freeModeSticky){clearTimeout(a.mousewheel.timeout),a.mousewheel.timeout=void 0;var v=a.mousewheel.recentWheelEvents;v.length>=15&&v.shift();var f=v.length?v[v.length-1]:void 0,g=v[0];if(v.push(l),f&&(l.delta>f.delta||l.direction!==f.direction))v.splice(0);else if(v.length>=15&&l.time-g.time<500&&g.delta-l.delta>=1&&l.delta<=6){var b=r>0?.8:.2;a.mousewheel.lastEventBeforeSnap=l,v.splice(0),a.mousewheel.timeout=w.nextTick((function(){a.slideToClosest(a.params.speed,!0,void 0,b)}),0)}a.mousewheel.timeout||(a.mousewheel.timeout=w.nextTick((function(){a.mousewheel.lastEventBeforeSnap=l,v.splice(0),a.slideToClosest(a.params.speed,!0,void 0,.5)}),500))}if(c||a.emit("scroll",t),a.params.autoplay&&a.params.autoplayDisableOnInteraction&&a.autoplay.stop(),u===a.minTranslate()||u===a.maxTranslate())return!0}}else{var y={time:w.now(),delta:Math.abs(r),direction:Math.sign(r),raw:e},T=a.mousewheel.recentWheelEvents;T.length>=2&&T.shift();var E=T.length?T[T.length-1]:void 0;if(T.push(y),E?(y.direction!==E.direction||y.delta>E.delta||y.time>E.time+150)&&a.mousewheel.animateSlider(y):a.mousewheel.animateSlider(y),a.mousewheel.releaseScroll(y))return!0}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},animateSlider:function(e){var t=this;return e.delta>=6&&w.now()-t.mousewheel.lastScrollTime<60||(e.direction<0?t.isEnd&&!t.params.loop||t.animating||(t.slideNext(),t.emit("scroll",e.raw)):t.isBeginning&&!t.params.loop||t.animating||(t.slidePrev(),t.emit("scroll",e.raw)),t.mousewheel.lastScrollTime=(new v.Date).getTime(),!1)},releaseScroll:function(e){var t=this,a=t.params.mousewheel;if(e.direction<0){if(t.isEnd&&!t.params.loop&&a.releaseOnEdges)return!0}else if(t.isBeginning&&!t.params.loop&&a.releaseOnEdges)return!0;return!1},enable:function(){var e=this,t=K.event();if(e.params.cssMode)return e.wrapperEl.removeEventListener(t,e.mousewheel.handle),!0;if(!t)return!1;if(e.mousewheel.enabled)return!1;var a=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(a=m(e.params.mousewheel.eventsTarged)),a.on("mouseenter",e.mousewheel.handleMouseEnter),a.on("mouseleave",e.mousewheel.handleMouseLeave),a.on(t,e.mousewheel.handle),e.mousewheel.enabled=!0,!0},disable:function(){var e=this,t=K.event();if(e.params.cssMode)return e.wrapperEl.addEventListener(t,e.mousewheel.handle),!0;if(!t)return!1;if(!e.mousewheel.enabled)return!1;var a=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(a=m(e.params.mousewheel.eventsTarged)),a.off(t,e.mousewheel.handle),e.mousewheel.enabled=!1,!0}},Q={update:function(){var e=this,t=e.rtl,a=e.params.pagination;if(a.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var i,n=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,r=e.pagination.$el,s=e.params.loop?Math.ceil((n-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length;if(e.params.loop?((i=Math.ceil((e.activeIndex-e.loopedSlides)/e.params.slidesPerGroup))>n-1-2*e.loopedSlides&&(i-=n-2*e.loopedSlides),i>s-1&&(i-=s),i<0&&"bullets"!==e.params.paginationType&&(i=s+i)):i="undefined"!==typeof e.snapIndex?e.snapIndex:e.activeIndex||0,"bullets"===a.type&&e.pagination.bullets&&e.pagination.bullets.length>0){var o,l,d,c=e.pagination.bullets;if(a.dynamicBullets&&(e.pagination.bulletSize=c.eq(0)[e.isHorizontal()?"outerWidth":"outerHeight"](!0),r.css(e.isHorizontal()?"width":"height","".concat(e.pagination.bulletSize*(a.dynamicMainBullets+4),"px")),a.dynamicMainBullets>1&&void 0!==e.previousIndex&&(e.pagination.dynamicBulletIndex+=i-e.previousIndex,e.pagination.dynamicBulletIndex>a.dynamicMainBullets-1?e.pagination.dynamicBulletIndex=a.dynamicMainBullets-1:e.pagination.dynamicBulletIndex<0&&(e.pagination.dynamicBulletIndex=0)),o=i-e.pagination.dynamicBulletIndex,d=((l=o+(Math.min(c.length,a.dynamicMainBullets)-1))+o)/2),c.removeClass("".concat(a.bulletActiveClass," ").concat(a.bulletActiveClass,"-next ").concat(a.bulletActiveClass,"-next-next ").concat(a.bulletActiveClass,"-prev ").concat(a.bulletActiveClass,"-prev-prev ").concat(a.bulletActiveClass,"-main")),r.length>1)c.each((function(e,t){var n=m(t),r=n.index();r===i&&n.addClass(a.bulletActiveClass),a.dynamicBullets&&(r>=o&&r<=l&&n.addClass("".concat(a.bulletActiveClass,"-main")),r===o&&n.prev().addClass("".concat(a.bulletActiveClass,"-prev")).prev().addClass("".concat(a.bulletActiveClass,"-prev-prev")),r===l&&n.next().addClass("".concat(a.bulletActiveClass,"-next")).next().addClass("".concat(a.bulletActiveClass,"-next-next")))}));else{var u=c.eq(i),p=u.index();if(u.addClass(a.bulletActiveClass),a.dynamicBullets){for(var h=c.eq(o),v=c.eq(l),f=o;f<=l;f+=1)c.eq(f).addClass("".concat(a.bulletActiveClass,"-main"));if(e.params.loop)if(p>=c.length-a.dynamicMainBullets){for(var g=a.dynamicMainBullets;g>=0;g-=1)c.eq(c.length-g).addClass("".concat(a.bulletActiveClass,"-main"));c.eq(c.length-a.dynamicMainBullets-1).addClass("".concat(a.bulletActiveClass,"-prev"))}else h.prev().addClass("".concat(a.bulletActiveClass,"-prev")).prev().addClass("".concat(a.bulletActiveClass,"-prev-prev")),v.next().addClass("".concat(a.bulletActiveClass,"-next")).next().addClass("".concat(a.bulletActiveClass,"-next-next"));else h.prev().addClass("".concat(a.bulletActiveClass,"-prev")).prev().addClass("".concat(a.bulletActiveClass,"-prev-prev")),v.next().addClass("".concat(a.bulletActiveClass,"-next")).next().addClass("".concat(a.bulletActiveClass,"-next-next"))}}if(a.dynamicBullets){var b=Math.min(c.length,a.dynamicMainBullets+4),w=(e.pagination.bulletSize*b-e.pagination.bulletSize)/2-d*e.pagination.bulletSize,y=t?"right":"left";c.css(e.isHorizontal()?y:"top","".concat(w,"px"))}}if("fraction"===a.type&&(r.find(".".concat(a.currentClass)).text(a.formatFractionCurrent(i+1)),r.find(".".concat(a.totalClass)).text(a.formatFractionTotal(s))),"progressbar"===a.type){var T;T=a.progressbarOpposite?e.isHorizontal()?"vertical":"horizontal":e.isHorizontal()?"horizontal":"vertical";var E=(i+1)/s,S=1,x=1;"horizontal"===T?S=E:x=E,r.find(".".concat(a.progressbarFillClass)).transform("translate3d(0,0,0) scaleX(".concat(S,") scaleY(").concat(x,")")).transition(e.params.speed)}"custom"===a.type&&a.renderCustom?(r.html(a.renderCustom(e,i+1,s)),e.emit("paginationRender",e,r[0])):e.emit("paginationUpdate",e,r[0]),r[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](a.lockClass)}},render:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var a=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,i=e.pagination.$el,n="";if("bullets"===t.type){for(var r=e.params.loop?Math.ceil((a-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length,s=0;s<r;s+=1)t.renderBullet?n+=t.renderBullet.call(e,s,t.bulletClass):n+="<".concat(t.bulletElement,' class="').concat(t.bulletClass,'"></').concat(t.bulletElement,">");i.html(n),e.pagination.bullets=i.find(".".concat(t.bulletClass))}"fraction"===t.type&&(n=t.renderFraction?t.renderFraction.call(e,t.currentClass,t.totalClass):'<span class="'.concat(t.currentClass,'"></span>')+" / "+'<span class="'.concat(t.totalClass,'"></span>'),i.html(n)),"progressbar"===t.type&&(n=t.renderProgressbar?t.renderProgressbar.call(e,t.progressbarFillClass):'<span class="'.concat(t.progressbarFillClass,'"></span>'),i.html(n)),"custom"!==t.type&&e.emit("paginationRender",e.pagination.$el[0])}},init:function(){var e=this,t=e.params.pagination;if(t.el){var a=m(t.el);0!==a.length&&(e.params.uniqueNavElements&&"string"===typeof t.el&&a.length>1&&1===e.$el.find(t.el).length&&(a=e.$el.find(t.el)),"bullets"===t.type&&t.clickable&&a.addClass(t.clickableClass),a.addClass(t.modifierClass+t.type),"bullets"===t.type&&t.dynamicBullets&&(a.addClass("".concat(t.modifierClass).concat(t.type,"-dynamic")),e.pagination.dynamicBulletIndex=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),"progressbar"===t.type&&t.progressbarOpposite&&a.addClass(t.progressbarOppositeClass),t.clickable&&a.on("click",".".concat(t.bulletClass),(function(t){t.preventDefault();var a=m(this).index()*e.params.slidesPerGroup;e.params.loop&&(a+=e.loopedSlides),e.slideTo(a)})),w.extend(e.pagination,{$el:a,el:a[0]}))}},destroy:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var a=e.pagination.$el;a.removeClass(t.hiddenClass),a.removeClass(t.modifierClass+t.type),e.pagination.bullets&&e.pagination.bullets.removeClass(t.bulletActiveClass),t.clickable&&a.off("click",".".concat(t.bulletClass))}}},J={name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){var e=this;w.extend(e,{pagination:{init:Q.init.bind(e),render:Q.render.bind(e),update:Q.update.bind(e),destroy:Q.destroy.bind(e),dynamicBulletIndex:0}})},on:{init:function(){var e=this;e.pagination.init(),e.pagination.render(),e.pagination.update()},activeIndexChange:function(){var e=this;(e.params.loop||"undefined"===typeof e.snapIndex)&&e.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){var e=this;e.params.loop&&(e.pagination.render(),e.pagination.update())},snapGridLengthChange:function(){var e=this;e.params.loop||(e.pagination.render(),e.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){var t=this;t.params.pagination.el&&t.params.pagination.hideOnClick&&t.pagination.$el.length>0&&!m(e.target).hasClass(t.params.pagination.bulletClass)&&(!0===t.pagination.$el.hasClass(t.params.pagination.hiddenClass)?t.emit("paginationShow",t):t.emit("paginationHide",t),t.pagination.$el.toggleClass(t.params.pagination.hiddenClass))}}},ee={setTranslate:function(){var e=this;if(e.params.scrollbar.el&&e.scrollbar.el){var t=e.scrollbar,a=e.rtlTranslate,i=e.progress,n=t.dragSize,r=t.trackSize,s=t.$dragEl,o=t.$el,l=e.params.scrollbar,d=n,c=(r-n)*i;a?(c=-c)>0?(d=n-c,c=0):-c+n>r&&(d=r+c):c<0?(d=n+c,c=0):c+n>r&&(d=r-c),e.isHorizontal()?(s.transform("translate3d(".concat(c,"px, 0, 0)")),s[0].style.width="".concat(d,"px")):(s.transform("translate3d(0px, ".concat(c,"px, 0)")),s[0].style.height="".concat(d,"px")),l.hide&&(clearTimeout(e.scrollbar.timeout),o[0].style.opacity=1,e.scrollbar.timeout=setTimeout((function(){o[0].style.opacity=0,o.transition(400)}),1e3))}},setTransition:function(e){var t=this;t.params.scrollbar.el&&t.scrollbar.el&&t.scrollbar.$dragEl.transition(e)},updateSize:function(){var e=this;if(e.params.scrollbar.el&&e.scrollbar.el){var t=e.scrollbar,a=t.$dragEl,i=t.$el;a[0].style.width="",a[0].style.height="";var n,r=e.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,s=e.size/e.virtualSize,o=s*(r/e.size);n="auto"===e.params.scrollbar.dragSize?r*s:parseInt(e.params.scrollbar.dragSize,10),e.isHorizontal()?a[0].style.width="".concat(n,"px"):a[0].style.height="".concat(n,"px"),i[0].style.display=s>=1?"none":"",e.params.scrollbar.hide&&(i[0].style.opacity=0),w.extend(t,{trackSize:r,divider:s,moveDivider:o,dragSize:n}),t.$el[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](e.params.scrollbar.lockClass)}},getPointerPosition:function(e){return this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientX:e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].clientY:e.clientY},setDragPosition:function(e){var t,a=this,i=a.scrollbar,n=a.rtlTranslate,r=i.$el,s=i.dragSize,o=i.trackSize,l=i.dragStartPos;t=(i.getPointerPosition(e)-r.offset()[a.isHorizontal()?"left":"top"]-(null!==l?l:s/2))/(o-s),t=Math.max(Math.min(t,1),0),n&&(t=1-t);var d=a.minTranslate()+(a.maxTranslate()-a.minTranslate())*t;a.updateProgress(d),a.setTranslate(d),a.updateActiveIndex(),a.updateSlidesClasses()},onDragStart:function(e){var t=this,a=t.params.scrollbar,i=t.scrollbar,n=t.$wrapperEl,r=i.$el,s=i.$dragEl;t.scrollbar.isTouched=!0,t.scrollbar.dragStartPos=e.target===s[0]||e.target===s?i.getPointerPosition(e)-e.target.getBoundingClientRect()[t.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),n.transition(100),s.transition(100),i.setDragPosition(e),clearTimeout(t.scrollbar.dragTimeout),r.transition(0),a.hide&&r.css("opacity",1),t.params.cssMode&&t.$wrapperEl.css("scroll-snap-type","none"),t.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this,a=t.scrollbar,i=t.$wrapperEl,n=a.$el,r=a.$dragEl;t.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,a.setDragPosition(e),i.transition(0),n.transition(0),r.transition(0),t.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this,a=t.params.scrollbar,i=t.scrollbar,n=t.$wrapperEl,r=i.$el;t.scrollbar.isTouched&&(t.scrollbar.isTouched=!1,t.params.cssMode&&(t.$wrapperEl.css("scroll-snap-type",""),n.transition("")),a.hide&&(clearTimeout(t.scrollbar.dragTimeout),t.scrollbar.dragTimeout=w.nextTick((function(){r.css("opacity",0),r.transition(400)}),1e3)),t.emit("scrollbarDragEnd",e),a.snapOnRelease&&t.slideToClosest())},enableDraggable:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,a=e.touchEventsTouch,i=e.touchEventsDesktop,n=e.params,r=t.$el[0],s=!(!y.passiveListener||!n.passiveListeners)&&{passive:!1,capture:!1},o=!(!y.passiveListener||!n.passiveListeners)&&{passive:!0,capture:!1};y.touch?(r.addEventListener(a.start,e.scrollbar.onDragStart,s),r.addEventListener(a.move,e.scrollbar.onDragMove,s),r.addEventListener(a.end,e.scrollbar.onDragEnd,o)):(r.addEventListener(i.start,e.scrollbar.onDragStart,s),p.addEventListener(i.move,e.scrollbar.onDragMove,s),p.addEventListener(i.end,e.scrollbar.onDragEnd,o))}},disableDraggable:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,a=e.touchEventsTouch,i=e.touchEventsDesktop,n=e.params,r=t.$el[0],s=!(!y.passiveListener||!n.passiveListeners)&&{passive:!1,capture:!1},o=!(!y.passiveListener||!n.passiveListeners)&&{passive:!0,capture:!1};y.touch?(r.removeEventListener(a.start,e.scrollbar.onDragStart,s),r.removeEventListener(a.move,e.scrollbar.onDragMove,s),r.removeEventListener(a.end,e.scrollbar.onDragEnd,o)):(r.removeEventListener(i.start,e.scrollbar.onDragStart,s),p.removeEventListener(i.move,e.scrollbar.onDragMove,s),p.removeEventListener(i.end,e.scrollbar.onDragEnd,o))}},init:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,a=e.$el,i=e.params.scrollbar,n=m(i.el);e.params.uniqueNavElements&&"string"===typeof i.el&&n.length>1&&1===a.find(i.el).length&&(n=a.find(i.el));var r=n.find(".".concat(e.params.scrollbar.dragClass));0===r.length&&(r=m('<div class="'.concat(e.params.scrollbar.dragClass,'"></div>')),n.append(r)),w.extend(t,{$el:n,el:n[0],$dragEl:r,dragEl:r[0]}),i.draggable&&t.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},te={name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){var e=this;w.extend(e,{scrollbar:{init:ee.init.bind(e),destroy:ee.destroy.bind(e),updateSize:ee.updateSize.bind(e),setTranslate:ee.setTranslate.bind(e),setTransition:ee.setTransition.bind(e),enableDraggable:ee.enableDraggable.bind(e),disableDraggable:ee.disableDraggable.bind(e),setDragPosition:ee.setDragPosition.bind(e),getPointerPosition:ee.getPointerPosition.bind(e),onDragStart:ee.onDragStart.bind(e),onDragMove:ee.onDragMove.bind(e),onDragEnd:ee.onDragEnd.bind(e),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){var e=this;e.scrollbar.init(),e.scrollbar.updateSize(),e.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},ae={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,a=e.targetTouches[0].pageY,i=e.targetTouches[1].pageX,n=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(i-t,2)+Math.pow(n-a,2))},onGestureStart:function(e){var t=this,a=t.params.zoom,i=t.zoom,n=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!y.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,n.scaleStart=ae.getDistanceBetweenTouches(e)}n.$slideEl&&n.$slideEl.length||(n.$slideEl=m(e.target).closest(".".concat(t.params.slideClass)),0===n.$slideEl.length&&(n.$slideEl=t.slides.eq(t.activeIndex)),n.$imageEl=n.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),n.$imageWrapEl=n.$imageEl.parent(".".concat(a.containerClass)),n.maxRatio=n.$imageWrapEl.attr("data-swiper-zoom")||a.maxRatio,0!==n.$imageWrapEl.length)?(n.$imageEl&&n.$imageEl.transition(0),t.zoom.isScaling=!0):n.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,a=this.zoom,i=a.gesture;if(!y.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;a.fakeGestureMoved=!0,i.scaleMove=ae.getDistanceBetweenTouches(e)}i.$imageEl&&0!==i.$imageEl.length&&(a.scale=y.gestures?e.scale*a.currentScale:i.scaleMove/i.scaleStart*a.currentScale,a.scale>i.maxRatio&&(a.scale=i.maxRatio-1+Math.pow(a.scale-i.maxRatio+1,.5)),a.scale<t.minRatio&&(a.scale=t.minRatio+1-Math.pow(t.minRatio-a.scale+1,.5)),i.$imageEl.transform("translate3d(0,0,0) scale(".concat(a.scale,")")))},onGestureEnd:function(e){var t=this,a=t.params.zoom,i=t.zoom,n=i.gesture;if(!y.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!z.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}n.$imageEl&&0!==n.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,n.maxRatio),a.minRatio),n.$imageEl.transition(t.params.speed).transform("translate3d(0,0,0) scale(".concat(i.scale,")")),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(n.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,a=t.gesture,i=t.image;a.$imageEl&&0!==a.$imageEl.length&&(i.isTouched||(z.android&&e.cancelable&&e.preventDefault(),i.isTouched=!0,i.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,i.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this,a=t.zoom,i=a.gesture,n=a.image,r=a.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(t.allowClick=!1,n.isTouched&&i.$slideEl)){n.isMoved||(n.width=i.$imageEl[0].offsetWidth,n.height=i.$imageEl[0].offsetHeight,n.startX=w.getTranslate(i.$imageWrapEl[0],"x")||0,n.startY=w.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),t.rtl&&(n.startX=-n.startX,n.startY=-n.startY));var s=n.width*a.scale,o=n.height*a.scale;if(!(s<i.slideWidth&&o<i.slideHeight)){if(n.minX=Math.min(i.slideWidth/2-s/2,0),n.maxX=-n.minX,n.minY=Math.min(i.slideHeight/2-o/2,0),n.maxY=-n.minY,n.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,n.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!n.isMoved&&!a.isScaling){if(t.isHorizontal()&&(Math.floor(n.minX)===Math.floor(n.startX)&&n.touchesCurrent.x<n.touchesStart.x||Math.floor(n.maxX)===Math.floor(n.startX)&&n.touchesCurrent.x>n.touchesStart.x))return void(n.isTouched=!1);if(!t.isHorizontal()&&(Math.floor(n.minY)===Math.floor(n.startY)&&n.touchesCurrent.y<n.touchesStart.y||Math.floor(n.maxY)===Math.floor(n.startY)&&n.touchesCurrent.y>n.touchesStart.y))return void(n.isTouched=!1)}e.cancelable&&e.preventDefault(),e.stopPropagation(),n.isMoved=!0,n.currentX=n.touchesCurrent.x-n.touchesStart.x+n.startX,n.currentY=n.touchesCurrent.y-n.touchesStart.y+n.startY,n.currentX<n.minX&&(n.currentX=n.minX+1-Math.pow(n.minX-n.currentX+1,.8)),n.currentX>n.maxX&&(n.currentX=n.maxX-1+Math.pow(n.currentX-n.maxX+1,.8)),n.currentY<n.minY&&(n.currentY=n.minY+1-Math.pow(n.minY-n.currentY+1,.8)),n.currentY>n.maxY&&(n.currentY=n.maxY-1+Math.pow(n.currentY-n.maxY+1,.8)),r.prevPositionX||(r.prevPositionX=n.touchesCurrent.x),r.prevPositionY||(r.prevPositionY=n.touchesCurrent.y),r.prevTime||(r.prevTime=Date.now()),r.x=(n.touchesCurrent.x-r.prevPositionX)/(Date.now()-r.prevTime)/2,r.y=(n.touchesCurrent.y-r.prevPositionY)/(Date.now()-r.prevTime)/2,Math.abs(n.touchesCurrent.x-r.prevPositionX)<2&&(r.x=0),Math.abs(n.touchesCurrent.y-r.prevPositionY)<2&&(r.y=0),r.prevPositionX=n.touchesCurrent.x,r.prevPositionY=n.touchesCurrent.y,r.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d(".concat(n.currentX,"px, ").concat(n.currentY,"px,0)"))}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,a=e.image,i=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!a.isTouched||!a.isMoved)return a.isTouched=!1,void(a.isMoved=!1);a.isTouched=!1,a.isMoved=!1;var n=300,r=300,s=i.x*n,o=a.currentX+s,l=i.y*r,d=a.currentY+l;0!==i.x&&(n=Math.abs((o-a.currentX)/i.x)),0!==i.y&&(r=Math.abs((d-a.currentY)/i.y));var c=Math.max(n,r);a.currentX=o,a.currentY=d;var u=a.width*e.scale,p=a.height*e.scale;a.minX=Math.min(t.slideWidth/2-u/2,0),a.maxX=-a.minX,a.minY=Math.min(t.slideHeight/2-p/2,0),a.maxY=-a.minY,a.currentX=Math.max(Math.min(a.currentX,a.maxX),a.minX),a.currentY=Math.max(Math.min(a.currentY,a.maxY),a.minY),t.$imageWrapEl.transition(c).transform("translate3d(".concat(a.currentX,"px, ").concat(a.currentY,"px,0)"))}},onTransitionEnd:function(){var e=this,t=e.zoom,a=t.gesture;a.$slideEl&&e.previousIndex!==e.activeIndex&&(a.$imageEl&&a.$imageEl.transform("translate3d(0,0,0) scale(1)"),a.$imageWrapEl&&a.$imageWrapEl.transform("translate3d(0,0,0)"),t.scale=1,t.currentScale=1,a.$slideEl=void 0,a.$imageEl=void 0,a.$imageWrapEl=void 0)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,a,i,n,r,s,o,l,d,c,u,p,h,v,f,m,g=this,b=g.zoom,w=g.params.zoom,y=b.gesture,T=b.image;(y.$slideEl||(g.params.virtual&&g.params.virtual.enabled&&g.virtual?y.$slideEl=g.$wrapperEl.children(".".concat(g.params.slideActiveClass)):y.$slideEl=g.slides.eq(g.activeIndex),y.$imageEl=y.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),y.$imageWrapEl=y.$imageEl.parent(".".concat(w.containerClass))),y.$imageEl&&0!==y.$imageEl.length)&&(y.$slideEl.addClass("".concat(w.zoomedSlideClass)),"undefined"===typeof T.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,a="touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=T.touchesStart.x,a=T.touchesStart.y),b.scale=y.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,b.currentScale=y.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,e?(f=y.$slideEl[0].offsetWidth,m=y.$slideEl[0].offsetHeight,i=y.$slideEl.offset().left+f/2-t,n=y.$slideEl.offset().top+m/2-a,o=y.$imageEl[0].offsetWidth,l=y.$imageEl[0].offsetHeight,d=o*b.scale,c=l*b.scale,h=-(u=Math.min(f/2-d/2,0)),v=-(p=Math.min(m/2-c/2,0)),(r=i*b.scale)<u&&(r=u),r>h&&(r=h),(s=n*b.scale)<p&&(s=p),s>v&&(s=v)):(r=0,s=0),y.$imageWrapEl.transition(300).transform("translate3d(".concat(r,"px, ").concat(s,"px,0)")),y.$imageEl.transition(300).transform("translate3d(0,0,0) scale(".concat(b.scale,")")))},out:function(){var e=this,t=e.zoom,a=e.params.zoom,i=t.gesture;i.$slideEl||(e.params.virtual&&e.params.virtual.enabled&&e.virtual?i.$slideEl=e.$wrapperEl.children(".".concat(e.params.slideActiveClass)):i.$slideEl=e.slides.eq(e.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"),i.$imageWrapEl=i.$imageEl.parent(".".concat(a.containerClass))),i.$imageEl&&0!==i.$imageEl.length&&(t.scale=1,t.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass("".concat(a.zoomedSlideClass)),i.$slideEl=void 0)},enable:function(){var e=this,t=e.zoom;if(!t.enabled){t.enabled=!0;var a=!("touchstart"!==e.touchEvents.start||!y.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1},i=!y.passiveListener||{passive:!1,capture:!0},n=".".concat(e.params.slideClass);y.gestures?(e.$wrapperEl.on("gesturestart",n,t.onGestureStart,a),e.$wrapperEl.on("gesturechange",n,t.onGestureChange,a),e.$wrapperEl.on("gestureend",n,t.onGestureEnd,a)):"touchstart"===e.touchEvents.start&&(e.$wrapperEl.on(e.touchEvents.start,n,t.onGestureStart,a),e.$wrapperEl.on(e.touchEvents.move,n,t.onGestureChange,i),e.$wrapperEl.on(e.touchEvents.end,n,t.onGestureEnd,a),e.touchEvents.cancel&&e.$wrapperEl.on(e.touchEvents.cancel,n,t.onGestureEnd,a)),e.$wrapperEl.on(e.touchEvents.move,".".concat(e.params.zoom.containerClass),t.onTouchMove,i)}},disable:function(){var e=this,t=e.zoom;if(t.enabled){e.zoom.enabled=!1;var a=!("touchstart"!==e.touchEvents.start||!y.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1},i=!y.passiveListener||{passive:!1,capture:!0},n=".".concat(e.params.slideClass);y.gestures?(e.$wrapperEl.off("gesturestart",n,t.onGestureStart,a),e.$wrapperEl.off("gesturechange",n,t.onGestureChange,a),e.$wrapperEl.off("gestureend",n,t.onGestureEnd,a)):"touchstart"===e.touchEvents.start&&(e.$wrapperEl.off(e.touchEvents.start,n,t.onGestureStart,a),e.$wrapperEl.off(e.touchEvents.move,n,t.onGestureChange,i),e.$wrapperEl.off(e.touchEvents.end,n,t.onGestureEnd,a),e.touchEvents.cancel&&e.$wrapperEl.off(e.touchEvents.cancel,n,t.onGestureEnd,a)),e.$wrapperEl.off(e.touchEvents.move,".".concat(e.params.zoom.containerClass),t.onTouchMove,i)}}},ie={name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var e=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach((function(a){t[a]=ae[a].bind(e)})),w.extend(e,{zoom:t});var a=1;Object.defineProperty(e.zoom,"scale",{get:function(){return a},set:function(t){if(a!==t){var i=e.zoom.gesture.$imageEl?e.zoom.gesture.$imageEl[0]:void 0,n=e.zoom.gesture.$slideEl?e.zoom.gesture.$slideEl[0]:void 0;e.emit("zoomChange",t,i,n)}a=t}})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){var t=this;t.params.zoom.enabled&&t.zoom.enabled&&t.params.zoom.toggle&&t.zoom.toggle(e)},transitionEnd:function(){var e=this;e.zoom.enabled&&e.params.zoom.enabled&&e.zoom.onTransitionEnd()},slideChange:function(){var e=this;e.zoom.enabled&&e.params.zoom.enabled&&e.params.cssMode&&e.zoom.onTransitionEnd()}}},ne={run:function(){var e=this,t=e.slides.eq(e.activeIndex),a=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(a=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),clearTimeout(e.autoplay.timeout),e.autoplay.timeout=w.nextTick((function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")),e.params.cssMode&&e.autoplay.running&&e.autoplay.run()}),a)},start:function(){var e=this;return"undefined"===typeof e.autoplay.timeout&&(!e.autoplay.running&&(e.autoplay.running=!0,e.emit("autoplayStart"),e.autoplay.run(),!0))},stop:function(){var e=this;return!!e.autoplay.running&&("undefined"!==typeof e.autoplay.timeout&&(e.autoplay.timeout&&(clearTimeout(e.autoplay.timeout),e.autoplay.timeout=void 0),e.autoplay.running=!1,e.emit("autoplayStop"),!0))},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?(t.$wrapperEl[0].addEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].addEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd)):(t.autoplay.paused=!1,t.autoplay.run())))}},re={name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var e=this;w.extend(e,{autoplay:{running:!1,paused:!1,run:ne.run.bind(e),start:ne.start.bind(e),stop:ne.stop.bind(e),pause:ne.pause.bind(e),onVisibilityChange:function(){"hidden"===document.visibilityState&&e.autoplay.running&&e.autoplay.pause(),"visible"===document.visibilityState&&e.autoplay.paused&&(e.autoplay.run(),e.autoplay.paused=!1)},onTransitionEnd:function(t){e&&!e.destroyed&&e.$wrapperEl&&t.target===this&&(e.$wrapperEl[0].removeEventListener("transitionend",e.autoplay.onTransitionEnd),e.$wrapperEl[0].removeEventListener("webkitTransitionEnd",e.autoplay.onTransitionEnd),e.autoplay.paused=!1,e.autoplay.running?e.autoplay.run():e.autoplay.stop())}}})},on:{init:function(){var e=this;e.params.autoplay.enabled&&(e.autoplay.start(),document.addEventListener("visibilitychange",e.autoplay.onVisibilityChange))},beforeTransitionStart:function(e,t){var a=this;a.autoplay.running&&(t||!a.params.autoplay.disableOnInteraction?a.autoplay.pause(e):a.autoplay.stop())},sliderFirstMove:function(){var e=this;e.autoplay.running&&(e.params.autoplay.disableOnInteraction?e.autoplay.stop():e.autoplay.pause())},touchEnd:function(){var e=this;e.params.cssMode&&e.autoplay.paused&&!e.params.autoplay.disableOnInteraction&&e.autoplay.run()},destroy:function(){var e=this;e.autoplay.running&&e.autoplay.stop(),document.removeEventListener("visibilitychange",e.autoplay.onVisibilityChange)}}},se=[W,N,R,j,Z];"undefined"===typeof V.use&&(V.use=V.Class.use,V.installModule=V.Class.installModule),V.use(se),V.use([J,te,re,_,ie])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixNQUFNMk4sZUFHdEN5YixFQUFPL2IsSUFBSUQsSUFFWGdjLEVBQU8vYixJQUFJLENBQUNna0IsRUFBWXNELEdBQVc5UCxHQUFVNEksRUFBVXNKIiwic291cmNlcyI6WyIuLi9ub2RlX21vZHVsZXMvQGlvbmljL2NvcmUvY29tcG9uZW50cy9zd2lwZXIuYnVuZGxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogKEMpIElvbmljIGh0dHA6Ly9pb25pY2ZyYW1ld29yay5jb20gLSBNSVQgTGljZW5zZVxuICovXG4vKipcbiAqIFNTUiBXaW5kb3cgMi4wLjBcbiAqIEJldHRlciBoYW5kbGluZyBmb3Igd2luZG93IG9iamVjdCBpbiBTU1IgZW52aXJvbm1lbnRcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2xpbWl0czR3ZWIvc3NyLXdpbmRvd1xuICpcbiAqIENvcHlyaWdodCAyMDIwLCBWbGFkaW1pciBLaGFybGFtcGlkaVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIE1JVFxuICpcbiAqIFJlbGVhc2VkIG9uOiBNYXkgMTIsIDIwMjBcbiAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KG9iaikge1xuICAgIHJldHVybiAob2JqICE9PSBudWxsICYmXG4gICAgICAgIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmXG4gICAgICAgICdjb25zdHJ1Y3RvcicgaW4gb2JqICYmXG4gICAgICAgIG9iai5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0KTtcbn1cbmZ1bmN0aW9uIGV4dGVuZCh0YXJnZXQsIHNyYykge1xuICAgIGlmICh0YXJnZXQgPT09IHZvaWQgMCkgeyB0YXJnZXQgPSB7fTsgfVxuICAgIGlmIChzcmMgPT09IHZvaWQgMCkgeyBzcmMgPSB7fTsgfVxuICAgIE9iamVjdC5rZXlzKHNyYykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0W2tleV0gPT09ICd1bmRlZmluZWQnKVxuICAgICAgICAgICAgdGFyZ2V0W2tleV0gPSBzcmNba2V5XTtcbiAgICAgICAgZWxzZSBpZiAoaXNPYmplY3Qoc3JjW2tleV0pICYmXG4gICAgICAgICAgICBpc09iamVjdCh0YXJnZXRba2V5XSkgJiZcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKHNyY1trZXldKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBleHRlbmQodGFyZ2V0W2tleV0sIHNyY1trZXldKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG52YXIgZG9jID0gdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDoge307XG52YXIgc3NyRG9jdW1lbnQgPSB7XG4gICAgYm9keToge30sXG4gICAgYWRkRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gKCkgeyB9LFxuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICBhY3RpdmVFbGVtZW50OiB7XG4gICAgICAgIGJsdXI6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICAgICAgbm9kZU5hbWU6ICcnLFxuICAgIH0sXG4gICAgcXVlcnlTZWxlY3RvcjogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9LFxuICAgIHF1ZXJ5U2VsZWN0b3JBbGw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH0sXG4gICAgZ2V0RWxlbWVudEJ5SWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBjcmVhdGVFdmVudDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaW5pdEV2ZW50OiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBjcmVhdGVFbGVtZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjaGlsZHJlbjogW10sXG4gICAgICAgICAgICBjaGlsZE5vZGVzOiBbXSxcbiAgICAgICAgICAgIHN0eWxlOiB7fSxcbiAgICAgICAgICAgIHNldEF0dHJpYnV0ZTogZnVuY3Rpb24gKCkgeyB9LFxuICAgICAgICAgICAgZ2V0RWxlbWVudHNCeVRhZ05hbWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgY3JlYXRlRWxlbWVudE5TOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICB9LFxuICAgIGltcG9ydE5vZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICBsb2NhdGlvbjoge1xuICAgICAgICBoYXNoOiAnJyxcbiAgICAgICAgaG9zdDogJycsXG4gICAgICAgIGhvc3RuYW1lOiAnJyxcbiAgICAgICAgaHJlZjogJycsXG4gICAgICAgIG9yaWdpbjogJycsXG4gICAgICAgIHBhdGhuYW1lOiAnJyxcbiAgICAgICAgcHJvdG9jb2w6ICcnLFxuICAgICAgICBzZWFyY2g6ICcnLFxuICAgIH0sXG59O1xuZXh0ZW5kKGRvYywgc3NyRG9jdW1lbnQpO1xuXG52YXIgd2luID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiB7fTtcbnZhciBzc3JXaW5kb3cgPSB7XG4gICAgZG9jdW1lbnQ6IHNzckRvY3VtZW50LFxuICAgIG5hdmlnYXRvcjoge1xuICAgICAgICB1c2VyQWdlbnQ6ICcnLFxuICAgIH0sXG4gICAgbG9jYXRpb246IHtcbiAgICAgICAgaGFzaDogJycsXG4gICAgICAgIGhvc3Q6ICcnLFxuICAgICAgICBob3N0bmFtZTogJycsXG4gICAgICAgIGhyZWY6ICcnLFxuICAgICAgICBvcmlnaW46ICcnLFxuICAgICAgICBwYXRobmFtZTogJycsXG4gICAgICAgIHByb3RvY29sOiAnJyxcbiAgICAgICAgc2VhcmNoOiAnJyxcbiAgICB9LFxuICAgIGhpc3Rvcnk6IHtcbiAgICAgICAgcmVwbGFjZVN0YXRlOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgICAgIHB1c2hTdGF0ZTogZnVuY3Rpb24gKCkgeyB9LFxuICAgICAgICBnbzogZnVuY3Rpb24gKCkgeyB9LFxuICAgICAgICBiYWNrOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgfSxcbiAgICBDdXN0b21FdmVudDogZnVuY3Rpb24gQ3VzdG9tRXZlbnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgYWRkRXZlbnRMaXN0ZW5lcjogZnVuY3Rpb24gKCkgeyB9LFxuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uICgpIHsgfSxcbiAgICBnZXRDb21wdXRlZFN0eWxlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBnZXRQcm9wZXJ0eVZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIEltYWdlOiBmdW5jdGlvbiAoKSB7IH0sXG4gICAgRGF0ZTogZnVuY3Rpb24gKCkgeyB9LFxuICAgIHNjcmVlbjoge30sXG4gICAgc2V0VGltZW91dDogZnVuY3Rpb24gKCkgeyB9LFxuICAgIGNsZWFyVGltZW91dDogZnVuY3Rpb24gKCkgeyB9LFxuICAgIG1hdGNoTWVkaWE6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH0sXG59O1xuZXh0ZW5kKHdpbiwgc3NyV2luZG93KTtcblxuLyoqXG4gKiBEb203IDIuMS41XG4gKiBNaW5pbWFsaXN0aWMgSmF2YVNjcmlwdCBsaWJyYXJ5IGZvciBET00gbWFuaXB1bGF0aW9uLCB3aXRoIGEgalF1ZXJ5LWNvbXBhdGlibGUgQVBJXG4gKiBodHRwOi8vZnJhbWV3b3JrNy5pby9kb2NzL2RvbS5odG1sXG4gKlxuICogQ29weXJpZ2h0IDIwMjAsIFZsYWRpbWlyIEtoYXJsYW1waWRpXG4gKiBUaGUgaURhbmdlcm8udXNcbiAqIGh0dHA6Ly93d3cuaWRhbmdlcm8udXMvXG4gKlxuICogTGljZW5zZWQgdW5kZXIgTUlUXG4gKlxuICogUmVsZWFzZWQgb246IE1heSAxNSwgMjAyMFxuICovXG5cbmNsYXNzIERvbTcge1xuICBjb25zdHJ1Y3RvcihhcnIpIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAvLyBDcmVhdGUgYXJyYXktbGlrZSBvYmplY3RcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgc2VsZltpXSA9IGFycltpXTtcbiAgICB9XG4gICAgc2VsZi5sZW5ndGggPSBhcnIubGVuZ3RoO1xuICAgIC8vIFJldHVybiBjb2xsZWN0aW9uIHdpdGggbWV0aG9kc1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5cbmZ1bmN0aW9uICQoc2VsZWN0b3IsIGNvbnRleHQpIHtcbiAgY29uc3QgYXJyID0gW107XG4gIGxldCBpID0gMDtcbiAgaWYgKHNlbGVjdG9yICYmICFjb250ZXh0KSB7XG4gICAgaWYgKHNlbGVjdG9yIGluc3RhbmNlb2YgRG9tNykge1xuICAgICAgcmV0dXJuIHNlbGVjdG9yO1xuICAgIH1cbiAgfVxuICBpZiAoc2VsZWN0b3IpIHtcbiAgICAgIC8vIFN0cmluZ1xuICAgIGlmICh0eXBlb2Ygc2VsZWN0b3IgPT09ICdzdHJpbmcnKSB7XG4gICAgICBsZXQgZWxzO1xuICAgICAgbGV0IHRlbXBQYXJlbnQ7XG4gICAgICBjb25zdCBodG1sID0gc2VsZWN0b3IudHJpbSgpO1xuICAgICAgaWYgKGh0bWwuaW5kZXhPZignPCcpID49IDAgJiYgaHRtbC5pbmRleE9mKCc+JykgPj0gMCkge1xuICAgICAgICBsZXQgdG9DcmVhdGUgPSAnZGl2JztcbiAgICAgICAgaWYgKGh0bWwuaW5kZXhPZignPGxpJykgPT09IDApIHRvQ3JlYXRlID0gJ3VsJztcbiAgICAgICAgaWYgKGh0bWwuaW5kZXhPZignPHRyJykgPT09IDApIHRvQ3JlYXRlID0gJ3Rib2R5JztcbiAgICAgICAgaWYgKGh0bWwuaW5kZXhPZignPHRkJykgPT09IDAgfHwgaHRtbC5pbmRleE9mKCc8dGgnKSA9PT0gMCkgdG9DcmVhdGUgPSAndHInO1xuICAgICAgICBpZiAoaHRtbC5pbmRleE9mKCc8dGJvZHknKSA9PT0gMCkgdG9DcmVhdGUgPSAndGFibGUnO1xuICAgICAgICBpZiAoaHRtbC5pbmRleE9mKCc8b3B0aW9uJykgPT09IDApIHRvQ3JlYXRlID0gJ3NlbGVjdCc7XG4gICAgICAgIHRlbXBQYXJlbnQgPSBkb2MuY3JlYXRlRWxlbWVudCh0b0NyZWF0ZSk7XG4gICAgICAgIHRlbXBQYXJlbnQuaW5uZXJIVE1MID0gaHRtbDtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHRlbXBQYXJlbnQuY2hpbGROb2Rlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgIGFyci5wdXNoKHRlbXBQYXJlbnQuY2hpbGROb2Rlc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghY29udGV4dCAmJiBzZWxlY3RvclswXSA9PT0gJyMnICYmICFzZWxlY3Rvci5tYXRjaCgvWyAuPD46fl0vKSkge1xuICAgICAgICAgIC8vIFB1cmUgSUQgc2VsZWN0b3JcbiAgICAgICAgICBlbHMgPSBbZG9jLmdldEVsZW1lbnRCeUlkKHNlbGVjdG9yLnRyaW0oKS5zcGxpdCgnIycpWzFdKV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gT3RoZXIgc2VsZWN0b3JzXG4gICAgICAgICAgZWxzID0gKGNvbnRleHQgfHwgZG9jKS5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yLnRyaW0oKSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGVscy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgIGlmIChlbHNbaV0pIGFyci5wdXNoKGVsc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHNlbGVjdG9yLm5vZGVUeXBlIHx8IHNlbGVjdG9yID09PSB3aW4gfHwgc2VsZWN0b3IgPT09IGRvYykge1xuICAgICAgLy8gTm9kZS9lbGVtZW50XG4gICAgICBhcnIucHVzaChzZWxlY3Rvcik7XG4gICAgfSBlbHNlIGlmIChzZWxlY3Rvci5sZW5ndGggPiAwICYmIHNlbGVjdG9yWzBdLm5vZGVUeXBlKSB7XG4gICAgICAvLyBBcnJheSBvZiBlbGVtZW50cyBvciBpbnN0YW5jZSBvZiBEb21cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBzZWxlY3Rvci5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBhcnIucHVzaChzZWxlY3RvcltpXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBuZXcgRG9tNyhhcnIpO1xufVxuXG4kLmZuID0gRG9tNy5wcm90b3R5cGU7XG4kLkNsYXNzID0gRG9tNztcbiQuRG9tNyA9IERvbTc7XG5cbmZ1bmN0aW9uIHVuaXF1ZShhcnIpIHtcbiAgY29uc3QgdW5pcXVlQXJyYXkgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodW5pcXVlQXJyYXkuaW5kZXhPZihhcnJbaV0pID09PSAtMSkgdW5pcXVlQXJyYXkucHVzaChhcnJbaV0pO1xuICB9XG4gIHJldHVybiB1bmlxdWVBcnJheTtcbn1cblxuLy8gQ2xhc3NlcyBhbmQgYXR0cmlidXRlc1xuZnVuY3Rpb24gYWRkQ2xhc3MoY2xhc3NOYW1lKSB7XG4gIGlmICh0eXBlb2YgY2xhc3NOYW1lID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIGNvbnN0IGNsYXNzZXMgPSBjbGFzc05hbWUuc3BsaXQoJyAnKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjbGFzc2VzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICBpZiAodHlwZW9mIHRoaXNbal0gIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB0aGlzW2pdLmNsYXNzTGlzdCAhPT0gJ3VuZGVmaW5lZCcpIHRoaXNbal0uY2xhc3NMaXN0LmFkZChjbGFzc2VzW2ldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG5mdW5jdGlvbiByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZS5zcGxpdCgnICcpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGNsYXNzZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgIGlmICh0eXBlb2YgdGhpc1tqXSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHRoaXNbal0uY2xhc3NMaXN0ICE9PSAndW5kZWZpbmVkJykgdGhpc1tqXS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzZXNbaV0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbmZ1bmN0aW9uIGhhc0NsYXNzKGNsYXNzTmFtZSkge1xuICBpZiAoIXRoaXNbMF0pIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHRoaXNbMF0uY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7XG59XG5mdW5jdGlvbiB0b2dnbGVDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZS5zcGxpdCgnICcpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGNsYXNzZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgIGlmICh0eXBlb2YgdGhpc1tqXSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHRoaXNbal0uY2xhc3NMaXN0ICE9PSAndW5kZWZpbmVkJykgdGhpc1tqXS5jbGFzc0xpc3QudG9nZ2xlKGNsYXNzZXNbaV0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbmZ1bmN0aW9uIGF0dHIoYXR0cnMsIHZhbHVlKSB7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxICYmIHR5cGVvZiBhdHRycyA9PT0gJ3N0cmluZycpIHtcbiAgICAvLyBHZXQgYXR0clxuICAgIGlmICh0aGlzWzBdKSByZXR1cm4gdGhpc1swXS5nZXRBdHRyaWJ1dGUoYXR0cnMpO1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvLyBTZXQgYXR0cnNcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIHtcbiAgICAgIC8vIFN0cmluZ1xuICAgICAgdGhpc1tpXS5zZXRBdHRyaWJ1dGUoYXR0cnMsIHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gT2JqZWN0XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgIGZvciAoY29uc3QgYXR0ck5hbWUgaW4gYXR0cnMpIHtcbiAgICAgICAgdGhpc1tpXVthdHRyTmFtZV0gPSBhdHRyc1thdHRyTmFtZV07XG4gICAgICAgIHRoaXNbaV0uc2V0QXR0cmlidXRlKGF0dHJOYW1lLCBhdHRyc1thdHRyTmFtZV0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuZnVuY3Rpb24gcmVtb3ZlQXR0cihhdHRyKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHRoaXNbaV0ucmVtb3ZlQXR0cmlidXRlKGF0dHIpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuZnVuY3Rpb24gZGF0YShrZXksIHZhbHVlKSB7XG4gIGxldCBlbDtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbCA9IHRoaXNbMF07XG4gICAgLy8gR2V0IHZhbHVlXG4gICAgaWYgKGVsKSB7XG4gICAgICBpZiAoZWwuZG9tN0VsZW1lbnREYXRhU3RvcmFnZSAmJiAoa2V5IGluIGVsLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2UpKSB7XG4gICAgICAgIHJldHVybiBlbC5kb203RWxlbWVudERhdGFTdG9yYWdlW2tleV07XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRhdGFLZXkgPSBlbC5nZXRBdHRyaWJ1dGUoYGRhdGEtJHtrZXl9YCk7XG4gICAgICBpZiAoZGF0YUtleSkge1xuICAgICAgICByZXR1cm4gZGF0YUtleTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvLyBTZXQgdmFsdWVcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgZWwgPSB0aGlzW2ldO1xuICAgIGlmICghZWwuZG9tN0VsZW1lbnREYXRhU3RvcmFnZSkgZWwuZG9tN0VsZW1lbnREYXRhU3RvcmFnZSA9IHt9O1xuICAgIGVsLmRvbTdFbGVtZW50RGF0YVN0b3JhZ2Vba2V5XSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuLy8gVHJhbnNmb3Jtc1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5mdW5jdGlvbiB0cmFuc2Zvcm0odHJhbnNmb3JtKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGNvbnN0IGVsU3R5bGUgPSB0aGlzW2ldLnN0eWxlO1xuICAgIGVsU3R5bGUud2Via2l0VHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuICAgIGVsU3R5bGUudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuZnVuY3Rpb24gdHJhbnNpdGlvbihkdXJhdGlvbikge1xuICBpZiAodHlwZW9mIGR1cmF0aW9uICE9PSAnc3RyaW5nJykge1xuICAgIGR1cmF0aW9uID0gYCR7ZHVyYXRpb259bXNgOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgY29uc3QgZWxTdHlsZSA9IHRoaXNbaV0uc3R5bGU7XG4gICAgZWxTdHlsZS53ZWJraXRUcmFuc2l0aW9uRHVyYXRpb24gPSBkdXJhdGlvbjtcbiAgICBlbFN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IGR1cmF0aW9uO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuLy8gRXZlbnRzXG5mdW5jdGlvbiBvbiguLi5hcmdzKSB7XG4gIGxldCBbZXZlbnRUeXBlLCB0YXJnZXRTZWxlY3RvciwgbGlzdGVuZXIsIGNhcHR1cmVdID0gYXJncztcbiAgaWYgKHR5cGVvZiBhcmdzWzFdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgW2V2ZW50VHlwZSwgbGlzdGVuZXIsIGNhcHR1cmVdID0gYXJncztcbiAgICB0YXJnZXRTZWxlY3RvciA9IHVuZGVmaW5lZDtcbiAgfVxuICBpZiAoIWNhcHR1cmUpIGNhcHR1cmUgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBoYW5kbGVMaXZlRXZlbnQoZSkge1xuICAgIGNvbnN0IHRhcmdldCA9IGUudGFyZ2V0O1xuICAgIGlmICghdGFyZ2V0KSByZXR1cm47XG4gICAgY29uc3QgZXZlbnREYXRhID0gZS50YXJnZXQuZG9tN0V2ZW50RGF0YSB8fCBbXTtcbiAgICBpZiAoZXZlbnREYXRhLmluZGV4T2YoZSkgPCAwKSB7XG4gICAgICBldmVudERhdGEudW5zaGlmdChlKTtcbiAgICB9XG4gICAgaWYgKCQodGFyZ2V0KS5pcyh0YXJnZXRTZWxlY3RvcikpIGxpc3RlbmVyLmFwcGx5KHRhcmdldCwgZXZlbnREYXRhKTtcbiAgICBlbHNlIHtcbiAgICAgIGNvbnN0IHBhcmVudHMgPSAkKHRhcmdldCkucGFyZW50cygpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgICBmb3IgKGxldCBrID0gMDsgayA8IHBhcmVudHMubGVuZ3RoOyBrICs9IDEpIHtcbiAgICAgICAgaWYgKCQocGFyZW50c1trXSkuaXModGFyZ2V0U2VsZWN0b3IpKSBsaXN0ZW5lci5hcHBseShwYXJlbnRzW2tdLCBldmVudERhdGEpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBoYW5kbGVFdmVudChlKSB7XG4gICAgY29uc3QgZXZlbnREYXRhID0gZSAmJiBlLnRhcmdldCA/IGUudGFyZ2V0LmRvbTdFdmVudERhdGEgfHwgW10gOiBbXTtcbiAgICBpZiAoZXZlbnREYXRhLmluZGV4T2YoZSkgPCAwKSB7XG4gICAgICBldmVudERhdGEudW5zaGlmdChlKTtcbiAgICB9XG4gICAgbGlzdGVuZXIuYXBwbHkodGhpcywgZXZlbnREYXRhKTtcbiAgfVxuICBjb25zdCBldmVudHMgPSBldmVudFR5cGUuc3BsaXQoJyAnKTtcbiAgbGV0IGo7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGNvbnN0IGVsID0gdGhpc1tpXTtcbiAgICBpZiAoIXRhcmdldFNlbGVjdG9yKSB7XG4gICAgICBmb3IgKGogPSAwOyBqIDwgZXZlbnRzLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gZXZlbnRzW2pdO1xuICAgICAgICBpZiAoIWVsLmRvbTdMaXN0ZW5lcnMpIGVsLmRvbTdMaXN0ZW5lcnMgPSB7fTtcbiAgICAgICAgaWYgKCFlbC5kb203TGlzdGVuZXJzW2V2ZW50XSkgZWwuZG9tN0xpc3RlbmVyc1tldmVudF0gPSBbXTtcbiAgICAgICAgZWwuZG9tN0xpc3RlbmVyc1tldmVudF0ucHVzaCh7XG4gICAgICAgICAgbGlzdGVuZXIsXG4gICAgICAgICAgcHJveHlMaXN0ZW5lcjogaGFuZGxlRXZlbnQsXG4gICAgICAgIH0pO1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVFdmVudCwgY2FwdHVyZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIExpdmUgZXZlbnRzXG4gICAgICBmb3IgKGogPSAwOyBqIDwgZXZlbnRzLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gZXZlbnRzW2pdO1xuICAgICAgICBpZiAoIWVsLmRvbTdMaXZlTGlzdGVuZXJzKSBlbC5kb203TGl2ZUxpc3RlbmVycyA9IHt9O1xuICAgICAgICBpZiAoIWVsLmRvbTdMaXZlTGlzdGVuZXJzW2V2ZW50XSkgZWwuZG9tN0xpdmVMaXN0ZW5lcnNbZXZlbnRdID0gW107XG4gICAgICAgIGVsLmRvbTdMaXZlTGlzdGVuZXJzW2V2ZW50XS5wdXNoKHtcbiAgICAgICAgICBsaXN0ZW5lcixcbiAgICAgICAgICBwcm94eUxpc3RlbmVyOiBoYW5kbGVMaXZlRXZlbnQsXG4gICAgICAgIH0pO1xuICAgICAgICBlbC5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVMaXZlRXZlbnQsIGNhcHR1cmUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbmZ1bmN0aW9uIG9mZiguLi5hcmdzKSB7XG4gIGxldCBbZXZlbnRUeXBlLCB0YXJnZXRTZWxlY3RvciwgbGlzdGVuZXIsIGNhcHR1cmVdID0gYXJncztcbiAgaWYgKHR5cGVvZiBhcmdzWzFdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgW2V2ZW50VHlwZSwgbGlzdGVuZXIsIGNhcHR1cmVdID0gYXJncztcbiAgICB0YXJnZXRTZWxlY3RvciA9IHVuZGVmaW5lZDtcbiAgfVxuICBpZiAoIWNhcHR1cmUpIGNhcHR1cmUgPSBmYWxzZTtcblxuICBjb25zdCBldmVudHMgPSBldmVudFR5cGUuc3BsaXQoJyAnKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBldmVudHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBjb25zdCBldmVudCA9IGV2ZW50c1tpXTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgIGNvbnN0IGVsID0gdGhpc1tqXTtcbiAgICAgIGxldCBoYW5kbGVycztcbiAgICAgIGlmICghdGFyZ2V0U2VsZWN0b3IgJiYgZWwuZG9tN0xpc3RlbmVycykge1xuICAgICAgICBoYW5kbGVycyA9IGVsLmRvbTdMaXN0ZW5lcnNbZXZlbnRdO1xuICAgICAgfSBlbHNlIGlmICh0YXJnZXRTZWxlY3RvciAmJiBlbC5kb203TGl2ZUxpc3RlbmVycykge1xuICAgICAgICBoYW5kbGVycyA9IGVsLmRvbTdMaXZlTGlzdGVuZXJzW2V2ZW50XTtcbiAgICAgIH1cbiAgICAgIGlmIChoYW5kbGVycyAmJiBoYW5kbGVycy5sZW5ndGgpIHtcbiAgICAgICAgZm9yIChsZXQgayA9IGhhbmRsZXJzLmxlbmd0aCAtIDE7IGsgPj0gMDsgayAtPSAxKSB7XG4gICAgICAgICAgY29uc3QgaGFuZGxlciA9IGhhbmRsZXJzW2tdO1xuICAgICAgICAgIGlmIChsaXN0ZW5lciAmJiBoYW5kbGVyLmxpc3RlbmVyID09PSBsaXN0ZW5lcikge1xuICAgICAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgaGFuZGxlci5wcm94eUxpc3RlbmVyLCBjYXB0dXJlKTtcbiAgICAgICAgICAgIGhhbmRsZXJzLnNwbGljZShrLCAxKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGxpc3RlbmVyICYmIGhhbmRsZXIubGlzdGVuZXIgJiYgaGFuZGxlci5saXN0ZW5lci5kb203cHJveHkgJiYgaGFuZGxlci5saXN0ZW5lci5kb203cHJveHkgPT09IGxpc3RlbmVyKSB7XG4gICAgICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLnByb3h5TGlzdGVuZXIsIGNhcHR1cmUpO1xuICAgICAgICAgICAgaGFuZGxlcnMuc3BsaWNlKGssIDEpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoIWxpc3RlbmVyKSB7XG4gICAgICAgICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBoYW5kbGVyLnByb3h5TGlzdGVuZXIsIGNhcHR1cmUpO1xuICAgICAgICAgICAgaGFuZGxlcnMuc3BsaWNlKGssIDEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbmZ1bmN0aW9uIHRyaWdnZXIoLi4uYXJncykge1xuICBjb25zdCBldmVudHMgPSBhcmdzWzBdLnNwbGl0KCcgJyk7XG4gIGNvbnN0IGV2ZW50RGF0YSA9IGFyZ3NbMV07XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZXZlbnRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgY29uc3QgZXZlbnQgPSBldmVudHNbaV07XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICBjb25zdCBlbCA9IHRoaXNbal07XG4gICAgICBsZXQgZXZ0O1xuICAgICAgdHJ5IHtcbiAgICAgICAgZXZ0ID0gbmV3IHdpbi5DdXN0b21FdmVudChldmVudCwge1xuICAgICAgICAgIGRldGFpbDogZXZlbnREYXRhLFxuICAgICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGV2dCA9IGRvYy5jcmVhdGVFdmVudCgnRXZlbnQnKTtcbiAgICAgICAgZXZ0LmluaXRFdmVudChldmVudCwgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAgIGV2dC5kZXRhaWwgPSBldmVudERhdGE7XG4gICAgICB9XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgIGVsLmRvbTdFdmVudERhdGEgPSBhcmdzLmZpbHRlcigoZGF0YSwgZGF0YUluZGV4KSA9PiBkYXRhSW5kZXggPiAwKTtcbiAgICAgIGVsLmRpc3BhdGNoRXZlbnQoZXZ0KTtcbiAgICAgIGVsLmRvbTdFdmVudERhdGEgPSBbXTtcbiAgICAgIGRlbGV0ZSBlbC5kb203RXZlbnREYXRhO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbmZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoY2FsbGJhY2spIHtcbiAgY29uc3QgZXZlbnRzID0gWyd3ZWJraXRUcmFuc2l0aW9uRW5kJywgJ3RyYW5zaXRpb25lbmQnXTtcbiAgY29uc3QgZG9tID0gdGhpcztcbiAgbGV0IGk7XG4gIGZ1bmN0aW9uIGZpcmVDYWxsQmFjayhlKSB7XG4gICAgLyoganNoaW50IHZhbGlkdGhpczp0cnVlICovXG4gICAgaWYgKGUudGFyZ2V0ICE9PSB0aGlzKSByZXR1cm47XG4gICAgY2FsbGJhY2suY2FsbCh0aGlzLCBlKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgZXZlbnRzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBkb20ub2ZmKGV2ZW50c1tpXSwgZmlyZUNhbGxCYWNrKTtcbiAgICB9XG4gIH1cbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgZm9yIChpID0gMDsgaSA8IGV2ZW50cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgZG9tLm9uKGV2ZW50c1tpXSwgZmlyZUNhbGxCYWNrKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG5mdW5jdGlvbiBvdXRlcldpZHRoKGluY2x1ZGVNYXJnaW5zKSB7XG4gIGlmICh0aGlzLmxlbmd0aCA+IDApIHtcbiAgICBpZiAoaW5jbHVkZU1hcmdpbnMpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgY29uc3Qgc3R5bGVzID0gdGhpcy5zdHlsZXMoKTtcbiAgICAgIHJldHVybiB0aGlzWzBdLm9mZnNldFdpZHRoICsgcGFyc2VGbG9hdChzdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnbWFyZ2luLXJpZ2h0JykpICsgcGFyc2VGbG9hdChzdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnbWFyZ2luLWxlZnQnKSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzWzBdLm9mZnNldFdpZHRoO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuZnVuY3Rpb24gb3V0ZXJIZWlnaHQoaW5jbHVkZU1hcmdpbnMpIHtcbiAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgIGlmIChpbmNsdWRlTWFyZ2lucykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICBjb25zdCBzdHlsZXMgPSB0aGlzLnN0eWxlcygpO1xuICAgICAgcmV0dXJuIHRoaXNbMF0ub2Zmc2V0SGVpZ2h0ICsgcGFyc2VGbG9hdChzdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnbWFyZ2luLXRvcCcpKSArIHBhcnNlRmxvYXQoc3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi1ib3R0b20nKSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzWzBdLm9mZnNldEhlaWdodDtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIG9mZnNldCgpIHtcbiAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgIGNvbnN0IGVsID0gdGhpc1swXTtcbiAgICBjb25zdCBib3ggPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCBib2R5ID0gZG9jLmJvZHk7XG4gICAgY29uc3QgY2xpZW50VG9wID0gZWwuY2xpZW50VG9wIHx8IGJvZHkuY2xpZW50VG9wIHx8IDA7XG4gICAgY29uc3QgY2xpZW50TGVmdCA9IGVsLmNsaWVudExlZnQgfHwgYm9keS5jbGllbnRMZWZ0IHx8IDA7XG4gICAgY29uc3Qgc2Nyb2xsVG9wID0gZWwgPT09IHdpbiA/IHdpbi5zY3JvbGxZIDogZWwuc2Nyb2xsVG9wO1xuICAgIGNvbnN0IHNjcm9sbExlZnQgPSBlbCA9PT0gd2luID8gd2luLnNjcm9sbFggOiBlbC5zY3JvbGxMZWZ0O1xuICAgIHJldHVybiB7XG4gICAgICB0b3A6IChib3gudG9wICsgc2Nyb2xsVG9wKSAtIGNsaWVudFRvcCxcbiAgICAgIGxlZnQ6IChib3gubGVmdCArIHNjcm9sbExlZnQpIC0gY2xpZW50TGVmdCxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5mdW5jdGlvbiBzdHlsZXMoKSB7XG4gIGlmICh0aGlzWzBdKSByZXR1cm4gd2luLmdldENvbXB1dGVkU3R5bGUodGhpc1swXSwgbnVsbCk7XG4gIHJldHVybiB7fTtcbn1cbmZ1bmN0aW9uIGNzcyhwcm9wcywgdmFsdWUpIHtcbiAgbGV0IGk7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgaWYgKHR5cGVvZiBwcm9wcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGlmICh0aGlzWzBdKSByZXR1cm4gd2luLmdldENvbXB1dGVkU3R5bGUodGhpc1swXSwgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShwcm9wcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICBmb3IgKGxldCBwcm9wIGluIHByb3BzKSB7XG4gICAgICAgICAgdGhpc1tpXS5zdHlsZVtwcm9wXSA9IHByb3BzW3Byb3BdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIHByb3BzID09PSAnc3RyaW5nJykge1xuICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB0aGlzW2ldLnN0eWxlW3Byb3BzXSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbi8vIEl0ZXJhdGUgb3ZlciB0aGUgY29sbGVjdGlvbiBwYXNzaW5nIGVsZW1lbnRzIHRvIGBjYWxsYmFja2BcbmZ1bmN0aW9uIGVhY2goY2FsbGJhY2spIHtcbiAgLy8gRG9uJ3QgYm90aGVyIGNvbnRpbnVpbmcgd2l0aG91dCBhIGNhbGxiYWNrXG4gIGlmICghY2FsbGJhY2spIHJldHVybiB0aGlzO1xuICAvLyBJdGVyYXRlIG92ZXIgdGhlIGN1cnJlbnQgY29sbGVjdGlvblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAvLyBJZiB0aGUgY2FsbGJhY2sgcmV0dXJucyBmYWxzZVxuICAgIGlmIChjYWxsYmFjay5jYWxsKHRoaXNbaV0sIGksIHRoaXNbaV0pID09PSBmYWxzZSkge1xuICAgICAgLy8gRW5kIHRoZSBsb29wIGVhcmx5XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH1cbiAgLy8gUmV0dXJuIGB0aGlzYCB0byBhbGxvdyBjaGFpbmVkIERPTSBvcGVyYXRpb25zXG4gIHJldHVybiB0aGlzO1xufVxuZnVuY3Rpb24gZmlsdGVyKGNhbGxiYWNrKSB7XG4gIGNvbnN0IG1hdGNoZWRJdGVtcyA9IFtdO1xuICBjb25zdCBkb20gPSB0aGlzO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGRvbS5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGlmIChjYWxsYmFjay5jYWxsKGRvbVtpXSwgaSwgZG9tW2ldKSkgbWF0Y2hlZEl0ZW1zLnB1c2goZG9tW2ldKTtcbiAgfVxuICByZXR1cm4gbmV3IERvbTcobWF0Y2hlZEl0ZW1zKTtcbn1cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuZnVuY3Rpb24gaHRtbChodG1sKSB7XG4gIGlmICh0eXBlb2YgaHRtbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gdGhpc1swXSA/IHRoaXNbMF0uaW5uZXJIVE1MIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdGhpc1tpXS5pbm5lckhUTUwgPSBodG1sO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5mdW5jdGlvbiB0ZXh0KHRleHQpIHtcbiAgaWYgKHR5cGVvZiB0ZXh0ID09PSAndW5kZWZpbmVkJykge1xuICAgIGlmICh0aGlzWzBdKSB7XG4gICAgICByZXR1cm4gdGhpc1swXS50ZXh0Q29udGVudC50cmltKCk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgdGhpc1tpXS50ZXh0Q29udGVudCA9IHRleHQ7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG5mdW5jdGlvbiBpcyhzZWxlY3Rvcikge1xuICBjb25zdCBlbCA9IHRoaXNbMF07XG4gIGxldCBjb21wYXJlV2l0aDtcbiAgbGV0IGk7XG4gIGlmICghZWwgfHwgdHlwZW9mIHNlbGVjdG9yID09PSAndW5kZWZpbmVkJykgcmV0dXJuIGZhbHNlO1xuICBpZiAodHlwZW9mIHNlbGVjdG9yID09PSAnc3RyaW5nJykge1xuICAgIGlmIChlbC5tYXRjaGVzKSByZXR1cm4gZWwubWF0Y2hlcyhzZWxlY3Rvcik7XG4gICAgZWxzZSBpZiAoZWwud2Via2l0TWF0Y2hlc1NlbGVjdG9yKSByZXR1cm4gZWwud2Via2l0TWF0Y2hlc1NlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICBlbHNlIGlmIChlbC5tc01hdGNoZXNTZWxlY3RvcikgcmV0dXJuIGVsLm1zTWF0Y2hlc1NlbGVjdG9yKHNlbGVjdG9yKTtcblxuICAgIGNvbXBhcmVXaXRoID0gJChzZWxlY3Rvcik7XG4gICAgZm9yIChpID0gMDsgaSA8IGNvbXBhcmVXaXRoLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBpZiAoY29tcGFyZVdpdGhbaV0gPT09IGVsKSByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2UgaWYgKHNlbGVjdG9yID09PSBkb2MpIHJldHVybiBlbCA9PT0gZG9jO1xuICBlbHNlIGlmIChzZWxlY3RvciA9PT0gd2luKSByZXR1cm4gZWwgPT09IHdpbjtcblxuICBpZiAoc2VsZWN0b3Iubm9kZVR5cGUgfHwgc2VsZWN0b3IgaW5zdGFuY2VvZiBEb203KSB7XG4gICAgY29tcGFyZVdpdGggPSBzZWxlY3Rvci5ub2RlVHlwZSA/IFtzZWxlY3Rvcl0gOiBzZWxlY3RvcjtcbiAgICBmb3IgKGkgPSAwOyBpIDwgY29tcGFyZVdpdGgubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmIChjb21wYXJlV2l0aFtpXSA9PT0gZWwpIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gaW5kZXgoKSB7XG4gIGxldCBjaGlsZCA9IHRoaXNbMF07XG4gIGxldCBpO1xuICBpZiAoY2hpbGQpIHtcbiAgICBpID0gMDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICB3aGlsZSAoKGNoaWxkID0gY2hpbGQucHJldmlvdXNTaWJsaW5nKSAhPT0gbnVsbCkge1xuICAgICAgaWYgKGNoaWxkLm5vZGVUeXBlID09PSAxKSBpICs9IDE7XG4gICAgfVxuICAgIHJldHVybiBpO1xuICB9XG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbmZ1bmN0aW9uIGVxKGluZGV4KSB7XG4gIGlmICh0eXBlb2YgaW5kZXggPT09ICd1bmRlZmluZWQnKSByZXR1cm4gdGhpcztcbiAgY29uc3QgbGVuZ3RoID0gdGhpcy5sZW5ndGg7XG4gIGxldCByZXR1cm5JbmRleDtcbiAgaWYgKGluZGV4ID4gbGVuZ3RoIC0gMSkge1xuICAgIHJldHVybiBuZXcgRG9tNyhbXSk7XG4gIH1cbiAgaWYgKGluZGV4IDwgMCkge1xuICAgIHJldHVybkluZGV4ID0gbGVuZ3RoICsgaW5kZXg7XG4gICAgaWYgKHJldHVybkluZGV4IDwgMCkgcmV0dXJuIG5ldyBEb203KFtdKTtcbiAgICByZXR1cm4gbmV3IERvbTcoW3RoaXNbcmV0dXJuSW5kZXhdXSk7XG4gIH1cbiAgcmV0dXJuIG5ldyBEb203KFt0aGlzW2luZGV4XV0pO1xufVxuZnVuY3Rpb24gYXBwZW5kKC4uLmFyZ3MpIHtcbiAgbGV0IG5ld0NoaWxkO1xuXG4gIGZvciAobGV0IGsgPSAwOyBrIDwgYXJncy5sZW5ndGg7IGsgKz0gMSkge1xuICAgIG5ld0NoaWxkID0gYXJnc1trXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmICh0eXBlb2YgbmV3Q2hpbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IHRlbXBEaXYgPSBkb2MuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRlbXBEaXYuaW5uZXJIVE1MID0gbmV3Q2hpbGQ7XG4gICAgICAgIHdoaWxlICh0ZW1wRGl2LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICB0aGlzW2ldLmFwcGVuZENoaWxkKHRlbXBEaXYuZmlyc3RDaGlsZCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAobmV3Q2hpbGQgaW5zdGFuY2VvZiBEb203KSB7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgbmV3Q2hpbGQubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgICB0aGlzW2ldLmFwcGVuZENoaWxkKG5ld0NoaWxkW2pdKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpc1tpXS5hcHBlbmRDaGlsZChuZXdDaGlsZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG5mdW5jdGlvbiBwcmVwZW5kKG5ld0NoaWxkKSB7XG4gIGxldCBpO1xuICBsZXQgajtcbiAgZm9yIChpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodHlwZW9mIG5ld0NoaWxkID09PSAnc3RyaW5nJykge1xuICAgICAgY29uc3QgdGVtcERpdiA9IGRvYy5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHRlbXBEaXYuaW5uZXJIVE1MID0gbmV3Q2hpbGQ7XG4gICAgICBmb3IgKGogPSB0ZW1wRGl2LmNoaWxkTm9kZXMubGVuZ3RoIC0gMTsgaiA+PSAwOyBqIC09IDEpIHtcbiAgICAgICAgdGhpc1tpXS5pbnNlcnRCZWZvcmUodGVtcERpdi5jaGlsZE5vZGVzW2pdLCB0aGlzW2ldLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAobmV3Q2hpbGQgaW5zdGFuY2VvZiBEb203KSB7XG4gICAgICBmb3IgKGogPSAwOyBqIDwgbmV3Q2hpbGQubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgdGhpc1tpXS5pbnNlcnRCZWZvcmUobmV3Q2hpbGRbal0sIHRoaXNbaV0uY2hpbGROb2Rlc1swXSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXNbaV0uaW5zZXJ0QmVmb3JlKG5ld0NoaWxkLCB0aGlzW2ldLmNoaWxkTm9kZXNbMF0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbmZ1bmN0aW9uIG5leHQoc2VsZWN0b3IpIHtcbiAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgaWYgKHRoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nICYmICQodGhpc1swXS5uZXh0RWxlbWVudFNpYmxpbmcpLmlzKHNlbGVjdG9yKSkge1xuICAgICAgICByZXR1cm4gbmV3IERvbTcoW3RoaXNbMF0ubmV4dEVsZW1lbnRTaWJsaW5nXSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3IERvbTcoW10pO1xuICAgIH1cblxuICAgIGlmICh0aGlzWzBdLm5leHRFbGVtZW50U2libGluZykgcmV0dXJuIG5ldyBEb203KFt0aGlzWzBdLm5leHRFbGVtZW50U2libGluZ10pO1xuICAgIHJldHVybiBuZXcgRG9tNyhbXSk7XG4gIH1cbiAgcmV0dXJuIG5ldyBEb203KFtdKTtcbn1cbmZ1bmN0aW9uIG5leHRBbGwoc2VsZWN0b3IpIHtcbiAgY29uc3QgbmV4dEVscyA9IFtdO1xuICBsZXQgZWwgPSB0aGlzWzBdO1xuICBpZiAoIWVsKSByZXR1cm4gbmV3IERvbTcoW10pO1xuICB3aGlsZSAoZWwubmV4dEVsZW1lbnRTaWJsaW5nKSB7XG4gICAgY29uc3QgbmV4dCA9IGVsLm5leHRFbGVtZW50U2libGluZzsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgaWYgKCQobmV4dCkuaXMoc2VsZWN0b3IpKSBuZXh0RWxzLnB1c2gobmV4dCk7XG4gICAgfSBlbHNlIG5leHRFbHMucHVzaChuZXh0KTtcbiAgICBlbCA9IG5leHQ7XG4gIH1cbiAgcmV0dXJuIG5ldyBEb203KG5leHRFbHMpO1xufVxuZnVuY3Rpb24gcHJldihzZWxlY3Rvcikge1xuICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgY29uc3QgZWwgPSB0aGlzWzBdO1xuICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgaWYgKGVsLnByZXZpb3VzRWxlbWVudFNpYmxpbmcgJiYgJChlbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKS5pcyhzZWxlY3RvcikpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEb203KFtlbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nXSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3IERvbTcoW10pO1xuICAgIH1cblxuICAgIGlmIChlbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nKSByZXR1cm4gbmV3IERvbTcoW2VsLnByZXZpb3VzRWxlbWVudFNpYmxpbmddKTtcbiAgICByZXR1cm4gbmV3IERvbTcoW10pO1xuICB9XG4gIHJldHVybiBuZXcgRG9tNyhbXSk7XG59XG5mdW5jdGlvbiBwcmV2QWxsKHNlbGVjdG9yKSB7XG4gIGNvbnN0IHByZXZFbHMgPSBbXTtcbiAgbGV0IGVsID0gdGhpc1swXTtcbiAgaWYgKCFlbCkgcmV0dXJuIG5ldyBEb203KFtdKTtcbiAgd2hpbGUgKGVsLnByZXZpb3VzRWxlbWVudFNpYmxpbmcpIHtcbiAgICBjb25zdCBwcmV2ID0gZWwucHJldmlvdXNFbGVtZW50U2libGluZzsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGlmIChzZWxlY3Rvcikge1xuICAgICAgaWYgKCQocHJldikuaXMoc2VsZWN0b3IpKSBwcmV2RWxzLnB1c2gocHJldik7XG4gICAgfSBlbHNlIHByZXZFbHMucHVzaChwcmV2KTtcbiAgICBlbCA9IHByZXY7XG4gIH1cbiAgcmV0dXJuIG5ldyBEb203KHByZXZFbHMpO1xufVxuZnVuY3Rpb24gcGFyZW50KHNlbGVjdG9yKSB7XG4gIGNvbnN0IHBhcmVudHMgPSBbXTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodGhpc1tpXS5wYXJlbnROb2RlICE9PSBudWxsKSB7XG4gICAgICBpZiAoc2VsZWN0b3IpIHtcbiAgICAgICAgaWYgKCQodGhpc1tpXS5wYXJlbnROb2RlKS5pcyhzZWxlY3RvcikpIHBhcmVudHMucHVzaCh0aGlzW2ldLnBhcmVudE5vZGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyZW50cy5wdXNoKHRoaXNbaV0ucGFyZW50Tm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiAkKHVuaXF1ZShwYXJlbnRzKSk7XG59XG5mdW5jdGlvbiBwYXJlbnRzKHNlbGVjdG9yKSB7XG4gIGNvbnN0IHBhcmVudHMgPSBbXTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBsZXQgcGFyZW50ID0gdGhpc1tpXS5wYXJlbnROb2RlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgd2hpbGUgKHBhcmVudCkge1xuICAgICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICAgIGlmICgkKHBhcmVudCkuaXMoc2VsZWN0b3IpKSBwYXJlbnRzLnB1c2gocGFyZW50KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcmVudHMucHVzaChwYXJlbnQpO1xuICAgICAgfVxuICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudE5vZGU7XG4gICAgfVxuICB9XG4gIHJldHVybiAkKHVuaXF1ZShwYXJlbnRzKSk7XG59XG5mdW5jdGlvbiBjbG9zZXN0KHNlbGVjdG9yKSB7XG4gIGxldCBjbG9zZXN0ID0gdGhpczsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICBpZiAodHlwZW9mIHNlbGVjdG9yID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBuZXcgRG9tNyhbXSk7XG4gIH1cbiAgaWYgKCFjbG9zZXN0LmlzKHNlbGVjdG9yKSkge1xuICAgIGNsb3Nlc3QgPSBjbG9zZXN0LnBhcmVudHMoc2VsZWN0b3IpLmVxKDApO1xuICB9XG4gIHJldHVybiBjbG9zZXN0O1xufVxuZnVuY3Rpb24gZmluZChzZWxlY3Rvcikge1xuICBjb25zdCBmb3VuZEVsZW1lbnRzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGNvbnN0IGZvdW5kID0gdGhpc1tpXS5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGZvdW5kLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICBmb3VuZEVsZW1lbnRzLnB1c2goZm91bmRbal0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbmV3IERvbTcoZm91bmRFbGVtZW50cyk7XG59XG5mdW5jdGlvbiBjaGlsZHJlbihzZWxlY3Rvcikge1xuICBjb25zdCBjaGlsZHJlbiA9IFtdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGNvbnN0IGNoaWxkTm9kZXMgPSB0aGlzW2ldLmNoaWxkTm9kZXM7XG5cbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGNoaWxkTm9kZXMubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgICAgaWYgKGNoaWxkTm9kZXNbal0ubm9kZVR5cGUgPT09IDEpIGNoaWxkcmVuLnB1c2goY2hpbGROb2Rlc1tqXSk7XG4gICAgICB9IGVsc2UgaWYgKGNoaWxkTm9kZXNbal0ubm9kZVR5cGUgPT09IDEgJiYgJChjaGlsZE5vZGVzW2pdKS5pcyhzZWxlY3RvcikpIHtcbiAgICAgICAgY2hpbGRyZW4ucHVzaChjaGlsZE5vZGVzW2pdKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG5ldyBEb203KHVuaXF1ZShjaGlsZHJlbikpO1xufVxuZnVuY3Rpb24gcmVtb3ZlKCkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodGhpc1tpXS5wYXJlbnROb2RlKSB0aGlzW2ldLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpc1tpXSk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG5mdW5jdGlvbiBhZGQoLi4uYXJncykge1xuICBjb25zdCBkb20gPSB0aGlzO1xuICBsZXQgaTtcbiAgbGV0IGo7XG4gIGZvciAoaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgY29uc3QgdG9BZGQgPSAkKGFyZ3NbaV0pO1xuICAgIGZvciAoaiA9IDA7IGogPCB0b0FkZC5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgZG9tW2RvbS5sZW5ndGhdID0gdG9BZGRbal07XG4gICAgICBkb20ubGVuZ3RoICs9IDE7XG4gICAgfVxuICB9XG4gIHJldHVybiBkb207XG59XG5cbi8qKlxuICogU3dpcGVyIDUuNC4xXG4gKiBNb3N0IG1vZGVybiBtb2JpbGUgdG91Y2ggc2xpZGVyIGFuZCBmcmFtZXdvcmsgd2l0aCBoYXJkd2FyZSBhY2NlbGVyYXRlZCB0cmFuc2l0aW9uc1xuICogaHR0cDovL3N3aXBlcmpzLmNvbVxuICpcbiAqIENvcHlyaWdodCAyMDE0LTIwMjAgVmxhZGltaXIgS2hhcmxhbXBpZGlcbiAqXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2VcbiAqXG4gKiBSZWxlYXNlZCBvbjogTWF5IDIwLCAyMDIwXG4gKi9cblxuY29uc3QgTWV0aG9kcyA9IHtcbiAgYWRkQ2xhc3MsXG4gIHJlbW92ZUNsYXNzLFxuICBoYXNDbGFzcyxcbiAgdG9nZ2xlQ2xhc3MsXG4gIGF0dHIsXG4gIHJlbW92ZUF0dHIsXG4gIGRhdGEsXG4gIHRyYW5zZm9ybSxcbiAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbixcbiAgb24sXG4gIG9mZixcbiAgdHJpZ2dlcixcbiAgdHJhbnNpdGlvbkVuZDogdHJhbnNpdGlvbkVuZCxcbiAgb3V0ZXJXaWR0aCxcbiAgb3V0ZXJIZWlnaHQsXG4gIG9mZnNldCxcbiAgY3NzLFxuICBlYWNoLFxuICBodG1sLFxuICB0ZXh0LFxuICBpcyxcbiAgaW5kZXgsXG4gIGVxLFxuICBhcHBlbmQsXG4gIHByZXBlbmQsXG4gIG5leHQsXG4gIG5leHRBbGwsXG4gIHByZXYsXG4gIHByZXZBbGwsXG4gIHBhcmVudCxcbiAgcGFyZW50cyxcbiAgY2xvc2VzdCxcbiAgZmluZCxcbiAgY2hpbGRyZW4sXG4gIGZpbHRlcixcbiAgcmVtb3ZlLFxuICBhZGQsXG4gIHN0eWxlcyxcbn07XG5cbk9iamVjdC5rZXlzKE1ldGhvZHMpLmZvckVhY2goKG1ldGhvZE5hbWUpID0+IHtcbiAgJC5mblttZXRob2ROYW1lXSA9ICQuZm5bbWV0aG9kTmFtZV0gfHwgTWV0aG9kc1ttZXRob2ROYW1lXTtcbn0pO1xuXG5jb25zdCBVdGlscyA9IHtcbiAgZGVsZXRlUHJvcHMob2JqKSB7XG4gICAgY29uc3Qgb2JqZWN0ID0gb2JqO1xuICAgIE9iamVjdC5rZXlzKG9iamVjdCkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBvYmplY3Rba2V5XSA9IG51bGw7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIG5vIGdldHRlciBmb3Igb2JqZWN0XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICBkZWxldGUgb2JqZWN0W2tleV07XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIHNvbWV0aGluZyBnb3Qgd3JvbmdcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgbmV4dFRpY2soY2FsbGJhY2ssIGRlbGF5ID0gMCkge1xuICAgIHJldHVybiBzZXRUaW1lb3V0KGNhbGxiYWNrLCBkZWxheSk7XG4gIH0sXG4gIG5vdygpIHtcbiAgICByZXR1cm4gRGF0ZS5ub3coKTtcbiAgfSxcbiAgZ2V0VHJhbnNsYXRlKGVsLCBheGlzID0gJ3gnKSB7XG4gICAgbGV0IG1hdHJpeDtcbiAgICBsZXQgY3VyVHJhbnNmb3JtO1xuICAgIGxldCB0cmFuc2Zvcm1NYXRyaXg7XG5cbiAgICBjb25zdCBjdXJTdHlsZSA9IHdpbi5nZXRDb21wdXRlZFN0eWxlKGVsLCBudWxsKTtcblxuICAgIGlmICh3aW4uV2ViS2l0Q1NTTWF0cml4KSB7XG4gICAgICBjdXJUcmFuc2Zvcm0gPSBjdXJTdHlsZS50cmFuc2Zvcm0gfHwgY3VyU3R5bGUud2Via2l0VHJhbnNmb3JtO1xuICAgICAgaWYgKGN1clRyYW5zZm9ybS5zcGxpdCgnLCcpLmxlbmd0aCA+IDYpIHtcbiAgICAgICAgY3VyVHJhbnNmb3JtID0gY3VyVHJhbnNmb3JtLnNwbGl0KCcsICcpLm1hcCgoYSkgPT4gYS5yZXBsYWNlKCcsJywgJy4nKSkuam9pbignLCAnKTtcbiAgICAgIH1cbiAgICAgIC8vIFNvbWUgb2xkIHZlcnNpb25zIG9mIFdlYmtpdCBjaG9rZSB3aGVuICdub25lJyBpcyBwYXNzZWQ7IHBhc3NcbiAgICAgIC8vIGVtcHR5IHN0cmluZyBpbnN0ZWFkIGluIHRoaXMgY2FzZVxuICAgICAgdHJhbnNmb3JtTWF0cml4ID0gbmV3IHdpbi5XZWJLaXRDU1NNYXRyaXgoY3VyVHJhbnNmb3JtID09PSAnbm9uZScgPyAnJyA6IGN1clRyYW5zZm9ybSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyYW5zZm9ybU1hdHJpeCA9IGN1clN0eWxlLk1velRyYW5zZm9ybSB8fCBjdXJTdHlsZS5PVHJhbnNmb3JtIHx8IGN1clN0eWxlLk1zVHJhbnNmb3JtIHx8IGN1clN0eWxlLm1zVHJhbnNmb3JtIHx8IGN1clN0eWxlLnRyYW5zZm9ybSB8fCBjdXJTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCd0cmFuc2Zvcm0nKS5yZXBsYWNlKCd0cmFuc2xhdGUoJywgJ21hdHJpeCgxLCAwLCAwLCAxLCcpO1xuICAgICAgbWF0cml4ID0gdHJhbnNmb3JtTWF0cml4LnRvU3RyaW5nKCkuc3BsaXQoJywnKTtcbiAgICB9XG5cbiAgICBpZiAoYXhpcyA9PT0gJ3gnKSB7XG4gICAgICAvLyBMYXRlc3QgQ2hyb21lIGFuZCB3ZWJraXRzIEZpeFxuICAgICAgaWYgKHdpbi5XZWJLaXRDU1NNYXRyaXgpIGN1clRyYW5zZm9ybSA9IHRyYW5zZm9ybU1hdHJpeC5tNDE7XG4gICAgICAvLyBDcmF6eSBJRTEwIE1hdHJpeFxuICAgICAgZWxzZSBpZiAobWF0cml4Lmxlbmd0aCA9PT0gMTYpIGN1clRyYW5zZm9ybSA9IHBhcnNlRmxvYXQobWF0cml4WzEyXSk7XG4gICAgICAvLyBOb3JtYWwgQnJvd3NlcnNcbiAgICAgIGVsc2UgY3VyVHJhbnNmb3JtID0gcGFyc2VGbG9hdChtYXRyaXhbNF0pO1xuICAgIH1cbiAgICBpZiAoYXhpcyA9PT0gJ3knKSB7XG4gICAgICAvLyBMYXRlc3QgQ2hyb21lIGFuZCB3ZWJraXRzIEZpeFxuICAgICAgaWYgKHdpbi5XZWJLaXRDU1NNYXRyaXgpIGN1clRyYW5zZm9ybSA9IHRyYW5zZm9ybU1hdHJpeC5tNDI7XG4gICAgICAvLyBDcmF6eSBJRTEwIE1hdHJpeFxuICAgICAgZWxzZSBpZiAobWF0cml4Lmxlbmd0aCA9PT0gMTYpIGN1clRyYW5zZm9ybSA9IHBhcnNlRmxvYXQobWF0cml4WzEzXSk7XG4gICAgICAvLyBOb3JtYWwgQnJvd3NlcnNcbiAgICAgIGVsc2UgY3VyVHJhbnNmb3JtID0gcGFyc2VGbG9hdChtYXRyaXhbNV0pO1xuICAgIH1cbiAgICByZXR1cm4gY3VyVHJhbnNmb3JtIHx8IDA7XG4gIH0sXG4gIHBhcnNlVXJsUXVlcnkodXJsKSB7XG4gICAgY29uc3QgcXVlcnkgPSB7fTtcbiAgICBsZXQgdXJsVG9QYXJzZSA9IHVybCB8fCB3aW4ubG9jYXRpb24uaHJlZjtcbiAgICBsZXQgaTtcbiAgICBsZXQgcGFyYW1zO1xuICAgIGxldCBwYXJhbTtcbiAgICBsZXQgbGVuZ3RoO1xuICAgIGlmICh0eXBlb2YgdXJsVG9QYXJzZSA9PT0gJ3N0cmluZycgJiYgdXJsVG9QYXJzZS5sZW5ndGgpIHtcbiAgICAgIHVybFRvUGFyc2UgPSB1cmxUb1BhcnNlLmluZGV4T2YoJz8nKSA+IC0xID8gdXJsVG9QYXJzZS5yZXBsYWNlKC9cXFMqXFw/LywgJycpIDogJyc7XG4gICAgICBwYXJhbXMgPSB1cmxUb1BhcnNlLnNwbGl0KCcmJykuZmlsdGVyKChwYXJhbXNQYXJ0KSA9PiBwYXJhbXNQYXJ0ICE9PSAnJyk7XG4gICAgICBsZW5ndGggPSBwYXJhbXMubGVuZ3RoO1xuXG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgcGFyYW0gPSBwYXJhbXNbaV0ucmVwbGFjZSgvI1xcUysvZywgJycpLnNwbGl0KCc9Jyk7XG4gICAgICAgIHF1ZXJ5W2RlY29kZVVSSUNvbXBvbmVudChwYXJhbVswXSldID0gdHlwZW9mIHBhcmFtWzFdID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IGRlY29kZVVSSUNvbXBvbmVudChwYXJhbVsxXSkgfHwgJyc7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBxdWVyeTtcbiAgfSxcbiAgaXNPYmplY3Qobykge1xuICAgIHJldHVybiB0eXBlb2YgbyA9PT0gJ29iamVjdCcgJiYgbyAhPT0gbnVsbCAmJiBvLmNvbnN0cnVjdG9yICYmIG8uY29uc3RydWN0b3IgPT09IE9iamVjdDtcbiAgfSxcbiAgZXh0ZW5kKC4uLmFyZ3MpIHtcbiAgICBjb25zdCB0byA9IE9iamVjdChhcmdzWzBdKTtcbiAgICBjb25zdCBub0V4dGVuZCA9IFsnX19wcm90b19fJywgJ2NvbnN0cnVjdG9yJywgJ3Byb3RvdHlwZSddO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgYXJncy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY29uc3QgbmV4dFNvdXJjZSA9IGFyZ3NbaV07XG4gICAgICBpZiAobmV4dFNvdXJjZSAhPT0gdW5kZWZpbmVkICYmIG5leHRTb3VyY2UgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3Qga2V5c0FycmF5ID0gT2JqZWN0LmtleXMoT2JqZWN0KG5leHRTb3VyY2UpKS5maWx0ZXIoKGtleSkgPT4gbm9FeHRlbmQuaW5kZXhPZihrZXkpIDwgMCk7XG4gICAgICAgIGZvciAobGV0IG5leHRJbmRleCA9IDAsIGxlbiA9IGtleXNBcnJheS5sZW5ndGg7IG5leHRJbmRleCA8IGxlbjsgbmV4dEluZGV4ICs9IDEpIHtcbiAgICAgICAgICBjb25zdCBuZXh0S2V5ID0ga2V5c0FycmF5W25leHRJbmRleF07XG4gICAgICAgICAgY29uc3QgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobmV4dFNvdXJjZSwgbmV4dEtleSk7XG4gICAgICAgICAgaWYgKGRlc2MgIT09IHVuZGVmaW5lZCAmJiBkZXNjLmVudW1lcmFibGUpIHtcbiAgICAgICAgICAgIGlmIChVdGlscy5pc09iamVjdCh0b1tuZXh0S2V5XSkgJiYgVXRpbHMuaXNPYmplY3QobmV4dFNvdXJjZVtuZXh0S2V5XSkpIHtcbiAgICAgICAgICAgICAgVXRpbHMuZXh0ZW5kKHRvW25leHRLZXldLCBuZXh0U291cmNlW25leHRLZXldKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIVV0aWxzLmlzT2JqZWN0KHRvW25leHRLZXldKSAmJiBVdGlscy5pc09iamVjdChuZXh0U291cmNlW25leHRLZXldKSkge1xuICAgICAgICAgICAgICB0b1tuZXh0S2V5XSA9IHt9O1xuICAgICAgICAgICAgICBVdGlscy5leHRlbmQodG9bbmV4dEtleV0sIG5leHRTb3VyY2VbbmV4dEtleV0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdG9bbmV4dEtleV0gPSBuZXh0U291cmNlW25leHRLZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdG87XG4gIH0sXG59O1xuXG5jb25zdCBTdXBwb3J0ID0gKGZ1bmN0aW9uIFN1cHBvcnQoKSB7XG4gIHJldHVybiB7XG4gICAgdG91Y2g6ICEhKCgnb250b3VjaHN0YXJ0JyBpbiB3aW4pIHx8ICh3aW4uRG9jdW1lbnRUb3VjaCAmJiBkb2MgaW5zdGFuY2VvZiB3aW4uRG9jdW1lbnRUb3VjaCkpLFxuXG4gICAgcG9pbnRlckV2ZW50czogISF3aW4uUG9pbnRlckV2ZW50ICYmICgnbWF4VG91Y2hQb2ludHMnIGluIHdpbi5uYXZpZ2F0b3IpICYmIHdpbi5uYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgPj0gMCxcblxuICAgIG9ic2VydmVyOiAoZnVuY3Rpb24gY2hlY2tPYnNlcnZlcigpIHtcbiAgICAgIHJldHVybiAoJ011dGF0aW9uT2JzZXJ2ZXInIGluIHdpbiB8fCAnV2Via2l0TXV0YXRpb25PYnNlcnZlcicgaW4gd2luKTtcbiAgICB9KCkpLFxuXG4gICAgcGFzc2l2ZUxpc3RlbmVyOiAoZnVuY3Rpb24gY2hlY2tQYXNzaXZlTGlzdGVuZXIoKSB7XG4gICAgICBsZXQgc3VwcG9ydHNQYXNzaXZlID0gZmFsc2U7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBvcHRzID0gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAncGFzc2l2ZScsIHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICBzdXBwb3J0c1Bhc3NpdmUgPSB0cnVlO1xuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICB3aW4uYWRkRXZlbnRMaXN0ZW5lcigndGVzdFBhc3NpdmVMaXN0ZW5lcicsIG51bGwsIG9wdHMpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBObyBzdXBwb3J0XG4gICAgICB9XG4gICAgICByZXR1cm4gc3VwcG9ydHNQYXNzaXZlO1xuICAgIH0oKSksXG5cbiAgICBnZXN0dXJlczogKGZ1bmN0aW9uIGNoZWNrR2VzdHVyZXMoKSB7XG4gICAgICByZXR1cm4gJ29uZ2VzdHVyZXN0YXJ0JyBpbiB3aW47XG4gICAgfSgpKSxcbiAgfTtcbn0oKSk7XG5cbmNsYXNzIFN3aXBlckNsYXNzIHtcbiAgY29uc3RydWN0b3IocGFyYW1zID0ge30pIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICBzZWxmLnBhcmFtcyA9IHBhcmFtcztcblxuICAgIC8vIEV2ZW50c1xuICAgIHNlbGYuZXZlbnRzTGlzdGVuZXJzID0ge307XG5cbiAgICBpZiAoc2VsZi5wYXJhbXMgJiYgc2VsZi5wYXJhbXMub24pIHtcbiAgICAgIE9iamVjdC5rZXlzKHNlbGYucGFyYW1zLm9uKS5mb3JFYWNoKChldmVudE5hbWUpID0+IHtcbiAgICAgICAgc2VsZi5vbihldmVudE5hbWUsIHNlbGYucGFyYW1zLm9uW2V2ZW50TmFtZV0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgb24oZXZlbnRzLCBoYW5kbGVyLCBwcmlvcml0eSkge1xuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xuICAgIGlmICh0eXBlb2YgaGFuZGxlciAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIHNlbGY7XG4gICAgY29uc3QgbWV0aG9kID0gcHJpb3JpdHkgPyAndW5zaGlmdCcgOiAncHVzaCc7XG4gICAgZXZlbnRzLnNwbGl0KCcgJykuZm9yRWFjaCgoZXZlbnQpID0+IHtcbiAgICAgIGlmICghc2VsZi5ldmVudHNMaXN0ZW5lcnNbZXZlbnRdKSBzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0gPSBbXTtcbiAgICAgIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XVttZXRob2RdKGhhbmRsZXIpO1xuICAgIH0pO1xuICAgIHJldHVybiBzZWxmO1xuICB9XG5cbiAgb25jZShldmVudHMsIGhhbmRsZXIsIHByaW9yaXR5KSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgaWYgKHR5cGVvZiBoYW5kbGVyICE9PSAnZnVuY3Rpb24nKSByZXR1cm4gc2VsZjtcbiAgICBmdW5jdGlvbiBvbmNlSGFuZGxlciguLi5hcmdzKSB7XG4gICAgICBzZWxmLm9mZihldmVudHMsIG9uY2VIYW5kbGVyKTtcbiAgICAgIGlmIChvbmNlSGFuZGxlci5mN3Byb3h5KSB7XG4gICAgICAgIGRlbGV0ZSBvbmNlSGFuZGxlci5mN3Byb3h5O1xuICAgICAgfVxuICAgICAgaGFuZGxlci5hcHBseShzZWxmLCBhcmdzKTtcbiAgICB9XG4gICAgb25jZUhhbmRsZXIuZjdwcm94eSA9IGhhbmRsZXI7XG4gICAgcmV0dXJuIHNlbGYub24oZXZlbnRzLCBvbmNlSGFuZGxlciwgcHJpb3JpdHkpO1xuICB9XG5cbiAgb2ZmKGV2ZW50cywgaGFuZGxlcikge1xuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xuICAgIGlmICghc2VsZi5ldmVudHNMaXN0ZW5lcnMpIHJldHVybiBzZWxmO1xuICAgIGV2ZW50cy5zcGxpdCgnICcpLmZvckVhY2goKGV2ZW50KSA9PiB7XG4gICAgICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XSA9IFtdO1xuICAgICAgfSBlbHNlIGlmIChzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0gJiYgc2VsZi5ldmVudHNMaXN0ZW5lcnNbZXZlbnRdLmxlbmd0aCkge1xuICAgICAgICBzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0uZm9yRWFjaCgoZXZlbnRIYW5kbGVyLCBpbmRleCkgPT4ge1xuICAgICAgICAgIGlmIChldmVudEhhbmRsZXIgPT09IGhhbmRsZXIgfHwgKGV2ZW50SGFuZGxlci5mN3Byb3h5ICYmIGV2ZW50SGFuZGxlci5mN3Byb3h5ID09PSBoYW5kbGVyKSkge1xuICAgICAgICAgICAgc2VsZi5ldmVudHNMaXN0ZW5lcnNbZXZlbnRdLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gc2VsZjtcbiAgfVxuXG4gIGVtaXQoLi4uYXJncykge1xuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xuICAgIGlmICghc2VsZi5ldmVudHNMaXN0ZW5lcnMpIHJldHVybiBzZWxmO1xuICAgIGxldCBldmVudHM7XG4gICAgbGV0IGRhdGE7XG4gICAgbGV0IGNvbnRleHQ7XG4gICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJyB8fCBBcnJheS5pc0FycmF5KGFyZ3NbMF0pKSB7XG4gICAgICBldmVudHMgPSBhcmdzWzBdO1xuICAgICAgZGF0YSA9IGFyZ3Muc2xpY2UoMSwgYXJncy5sZW5ndGgpO1xuICAgICAgY29udGV4dCA9IHNlbGY7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV2ZW50cyA9IGFyZ3NbMF0uZXZlbnRzO1xuICAgICAgZGF0YSA9IGFyZ3NbMF0uZGF0YTtcbiAgICAgIGNvbnRleHQgPSBhcmdzWzBdLmNvbnRleHQgfHwgc2VsZjtcbiAgICB9XG4gICAgY29uc3QgZXZlbnRzQXJyYXkgPSBBcnJheS5pc0FycmF5KGV2ZW50cykgPyBldmVudHMgOiBldmVudHMuc3BsaXQoJyAnKTtcbiAgICBldmVudHNBcnJheS5mb3JFYWNoKChldmVudCkgPT4ge1xuICAgICAgaWYgKHNlbGYuZXZlbnRzTGlzdGVuZXJzICYmIHNlbGYuZXZlbnRzTGlzdGVuZXJzW2V2ZW50XSkge1xuICAgICAgICBjb25zdCBoYW5kbGVycyA9IFtdO1xuICAgICAgICBzZWxmLmV2ZW50c0xpc3RlbmVyc1tldmVudF0uZm9yRWFjaCgoZXZlbnRIYW5kbGVyKSA9PiB7XG4gICAgICAgICAgaGFuZGxlcnMucHVzaChldmVudEhhbmRsZXIpO1xuICAgICAgICB9KTtcbiAgICAgICAgaGFuZGxlcnMuZm9yRWFjaCgoZXZlbnRIYW5kbGVyKSA9PiB7XG4gICAgICAgICAgZXZlbnRIYW5kbGVyLmFwcGx5KGNvbnRleHQsIGRhdGEpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gc2VsZjtcbiAgfVxuXG4gIHVzZU1vZHVsZXNQYXJhbXMoaW5zdGFuY2VQYXJhbXMpIHtcbiAgICBjb25zdCBpbnN0YW5jZSA9IHRoaXM7XG4gICAgaWYgKCFpbnN0YW5jZS5tb2R1bGVzKSByZXR1cm47XG4gICAgT2JqZWN0LmtleXMoaW5zdGFuY2UubW9kdWxlcykuZm9yRWFjaCgobW9kdWxlTmFtZSkgPT4ge1xuICAgICAgY29uc3QgbW9kdWxlID0gaW5zdGFuY2UubW9kdWxlc1ttb2R1bGVOYW1lXTtcbiAgICAgIC8vIEV4dGVuZCBwYXJhbXNcbiAgICAgIGlmIChtb2R1bGUucGFyYW1zKSB7XG4gICAgICAgIFV0aWxzLmV4dGVuZChpbnN0YW5jZVBhcmFtcywgbW9kdWxlLnBhcmFtcyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICB1c2VNb2R1bGVzKG1vZHVsZXNQYXJhbXMgPSB7fSkge1xuICAgIGNvbnN0IGluc3RhbmNlID0gdGhpcztcbiAgICBpZiAoIWluc3RhbmNlLm1vZHVsZXMpIHJldHVybjtcbiAgICBPYmplY3Qua2V5cyhpbnN0YW5jZS5tb2R1bGVzKS5mb3JFYWNoKChtb2R1bGVOYW1lKSA9PiB7XG4gICAgICBjb25zdCBtb2R1bGUgPSBpbnN0YW5jZS5tb2R1bGVzW21vZHVsZU5hbWVdO1xuICAgICAgY29uc3QgbW9kdWxlUGFyYW1zID0gbW9kdWxlc1BhcmFtc1ttb2R1bGVOYW1lXSB8fCB7fTtcbiAgICAgIC8vIEV4dGVuZCBpbnN0YW5jZSBtZXRob2RzIGFuZCBwcm9wc1xuICAgICAgaWYgKG1vZHVsZS5pbnN0YW5jZSkge1xuICAgICAgICBPYmplY3Qua2V5cyhtb2R1bGUuaW5zdGFuY2UpLmZvckVhY2goKG1vZHVsZVByb3BOYW1lKSA9PiB7XG4gICAgICAgICAgY29uc3QgbW9kdWxlUHJvcCA9IG1vZHVsZS5pbnN0YW5jZVttb2R1bGVQcm9wTmFtZV07XG4gICAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVQcm9wID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBpbnN0YW5jZVttb2R1bGVQcm9wTmFtZV0gPSBtb2R1bGVQcm9wLmJpbmQoaW5zdGFuY2UpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbnN0YW5jZVttb2R1bGVQcm9wTmFtZV0gPSBtb2R1bGVQcm9wO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICAvLyBBZGQgZXZlbnQgbGlzdGVuZXJzXG4gICAgICBpZiAobW9kdWxlLm9uICYmIGluc3RhbmNlLm9uKSB7XG4gICAgICAgIE9iamVjdC5rZXlzKG1vZHVsZS5vbikuZm9yRWFjaCgobW9kdWxlRXZlbnROYW1lKSA9PiB7XG4gICAgICAgICAgaW5zdGFuY2Uub24obW9kdWxlRXZlbnROYW1lLCBtb2R1bGUub25bbW9kdWxlRXZlbnROYW1lXSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAvLyBNb2R1bGUgY3JlYXRlIGNhbGxiYWNrXG4gICAgICBpZiAobW9kdWxlLmNyZWF0ZSkge1xuICAgICAgICBtb2R1bGUuY3JlYXRlLmJpbmQoaW5zdGFuY2UpKG1vZHVsZVBhcmFtcyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgc2V0IGNvbXBvbmVudHMoY29tcG9uZW50cykge1xuICAgIGNvbnN0IENsYXNzID0gdGhpcztcbiAgICBpZiAoIUNsYXNzLnVzZSkgcmV0dXJuO1xuICAgIENsYXNzLnVzZShjb21wb25lbnRzKTtcbiAgfVxuXG4gIHN0YXRpYyBpbnN0YWxsTW9kdWxlKG1vZHVsZSwgLi4ucGFyYW1zKSB7XG4gICAgY29uc3QgQ2xhc3MgPSB0aGlzO1xuICAgIGlmICghQ2xhc3MucHJvdG90eXBlLm1vZHVsZXMpIENsYXNzLnByb3RvdHlwZS5tb2R1bGVzID0ge307XG4gICAgY29uc3QgbmFtZSA9IG1vZHVsZS5uYW1lIHx8IChgJHtPYmplY3Qua2V5cyhDbGFzcy5wcm90b3R5cGUubW9kdWxlcykubGVuZ3RofV8ke1V0aWxzLm5vdygpfWApO1xuICAgIENsYXNzLnByb3RvdHlwZS5tb2R1bGVzW25hbWVdID0gbW9kdWxlO1xuICAgIC8vIFByb3RvdHlwZVxuICAgIGlmIChtb2R1bGUucHJvdG8pIHtcbiAgICAgIE9iamVjdC5rZXlzKG1vZHVsZS5wcm90bykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIENsYXNzLnByb3RvdHlwZVtrZXldID0gbW9kdWxlLnByb3RvW2tleV07XG4gICAgICB9KTtcbiAgICB9XG4gICAgLy8gQ2xhc3NcbiAgICBpZiAobW9kdWxlLnN0YXRpYykge1xuICAgICAgT2JqZWN0LmtleXMobW9kdWxlLnN0YXRpYykuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIENsYXNzW2tleV0gPSBtb2R1bGUuc3RhdGljW2tleV07XG4gICAgICB9KTtcbiAgICB9XG4gICAgLy8gQ2FsbGJhY2tcbiAgICBpZiAobW9kdWxlLmluc3RhbGwpIHtcbiAgICAgIG1vZHVsZS5pbnN0YWxsLmFwcGx5KENsYXNzLCBwYXJhbXMpO1xuICAgIH1cbiAgICByZXR1cm4gQ2xhc3M7XG4gIH1cblxuICBzdGF0aWMgdXNlKG1vZHVsZSwgLi4ucGFyYW1zKSB7XG4gICAgY29uc3QgQ2xhc3MgPSB0aGlzO1xuICAgIGlmIChBcnJheS5pc0FycmF5KG1vZHVsZSkpIHtcbiAgICAgIG1vZHVsZS5mb3JFYWNoKChtKSA9PiBDbGFzcy5pbnN0YWxsTW9kdWxlKG0pKTtcbiAgICAgIHJldHVybiBDbGFzcztcbiAgICB9XG4gICAgcmV0dXJuIENsYXNzLmluc3RhbGxNb2R1bGUobW9kdWxlLCAuLi5wYXJhbXMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVNpemUgKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBsZXQgd2lkdGg7XG4gIGxldCBoZWlnaHQ7XG4gIGNvbnN0ICRlbCA9IHN3aXBlci4kZWw7XG4gIGlmICh0eXBlb2Ygc3dpcGVyLnBhcmFtcy53aWR0aCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB3aWR0aCA9IHN3aXBlci5wYXJhbXMud2lkdGg7XG4gIH0gZWxzZSB7XG4gICAgd2lkdGggPSAkZWxbMF0uY2xpZW50V2lkdGg7XG4gIH1cbiAgaWYgKHR5cGVvZiBzd2lwZXIucGFyYW1zLmhlaWdodCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBoZWlnaHQgPSBzd2lwZXIucGFyYW1zLmhlaWdodDtcbiAgfSBlbHNlIHtcbiAgICBoZWlnaHQgPSAkZWxbMF0uY2xpZW50SGVpZ2h0O1xuICB9XG4gIGlmICgod2lkdGggPT09IDAgJiYgc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB8fCAoaGVpZ2h0ID09PSAwICYmIHN3aXBlci5pc1ZlcnRpY2FsKCkpKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gU3VidHJhY3QgcGFkZGluZ3NcbiAgd2lkdGggPSB3aWR0aCAtIHBhcnNlSW50KCRlbC5jc3MoJ3BhZGRpbmctbGVmdCcpLCAxMCkgLSBwYXJzZUludCgkZWwuY3NzKCdwYWRkaW5nLXJpZ2h0JyksIDEwKTtcbiAgaGVpZ2h0ID0gaGVpZ2h0IC0gcGFyc2VJbnQoJGVsLmNzcygncGFkZGluZy10b3AnKSwgMTApIC0gcGFyc2VJbnQoJGVsLmNzcygncGFkZGluZy1ib3R0b20nKSwgMTApO1xuXG4gIFV0aWxzLmV4dGVuZChzd2lwZXIsIHtcbiAgICB3aWR0aCxcbiAgICBoZWlnaHQsXG4gICAgc2l6ZTogc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gd2lkdGggOiBoZWlnaHQsXG4gIH0pO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVTbGlkZXMgKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCBwYXJhbXMgPSBzd2lwZXIucGFyYW1zO1xuXG4gIGNvbnN0IHtcbiAgICAkd3JhcHBlckVsLCBzaXplOiBzd2lwZXJTaXplLCBydGxUcmFuc2xhdGU6IHJ0bCwgd3JvbmdSVEwsXG4gIH0gPSBzd2lwZXI7XG4gIGNvbnN0IGlzVmlydHVhbCA9IHN3aXBlci52aXJ0dWFsICYmIHBhcmFtcy52aXJ0dWFsLmVuYWJsZWQ7XG4gIGNvbnN0IHByZXZpb3VzU2xpZGVzTGVuZ3RoID0gaXNWaXJ0dWFsID8gc3dpcGVyLnZpcnR1YWwuc2xpZGVzLmxlbmd0aCA6IHN3aXBlci5zbGlkZXMubGVuZ3RoO1xuICBjb25zdCBzbGlkZXMgPSAkd3JhcHBlckVsLmNoaWxkcmVuKGAuJHtzd2lwZXIucGFyYW1zLnNsaWRlQ2xhc3N9YCk7XG4gIGNvbnN0IHNsaWRlc0xlbmd0aCA9IGlzVmlydHVhbCA/IHN3aXBlci52aXJ0dWFsLnNsaWRlcy5sZW5ndGggOiBzbGlkZXMubGVuZ3RoO1xuICBsZXQgc25hcEdyaWQgPSBbXTtcbiAgY29uc3Qgc2xpZGVzR3JpZCA9IFtdO1xuICBjb25zdCBzbGlkZXNTaXplc0dyaWQgPSBbXTtcblxuICBmdW5jdGlvbiBzbGlkZXNGb3JNYXJnaW4oc2xpZGVJbmRleCkge1xuICAgIGlmICghcGFyYW1zLmNzc01vZGUpIHJldHVybiB0cnVlO1xuICAgIGlmIChzbGlkZUluZGV4ID09PSBzbGlkZXMubGVuZ3RoIC0gMSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGxldCBvZmZzZXRCZWZvcmUgPSBwYXJhbXMuc2xpZGVzT2Zmc2V0QmVmb3JlO1xuICBpZiAodHlwZW9mIG9mZnNldEJlZm9yZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9mZnNldEJlZm9yZSA9IHBhcmFtcy5zbGlkZXNPZmZzZXRCZWZvcmUuY2FsbChzd2lwZXIpO1xuICB9XG5cbiAgbGV0IG9mZnNldEFmdGVyID0gcGFyYW1zLnNsaWRlc09mZnNldEFmdGVyO1xuICBpZiAodHlwZW9mIG9mZnNldEFmdGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgb2Zmc2V0QWZ0ZXIgPSBwYXJhbXMuc2xpZGVzT2Zmc2V0QWZ0ZXIuY2FsbChzd2lwZXIpO1xuICB9XG5cbiAgY29uc3QgcHJldmlvdXNTbmFwR3JpZExlbmd0aCA9IHN3aXBlci5zbmFwR3JpZC5sZW5ndGg7XG4gIGNvbnN0IHByZXZpb3VzU2xpZGVzR3JpZExlbmd0aCA9IHN3aXBlci5zbmFwR3JpZC5sZW5ndGg7XG5cbiAgbGV0IHNwYWNlQmV0d2VlbiA9IHBhcmFtcy5zcGFjZUJldHdlZW47XG4gIGxldCBzbGlkZVBvc2l0aW9uID0gLW9mZnNldEJlZm9yZTtcbiAgbGV0IHByZXZTbGlkZVNpemUgPSAwO1xuICBsZXQgaW5kZXggPSAwO1xuICBpZiAodHlwZW9mIHN3aXBlclNpemUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICh0eXBlb2Ygc3BhY2VCZXR3ZWVuID09PSAnc3RyaW5nJyAmJiBzcGFjZUJldHdlZW4uaW5kZXhPZignJScpID49IDApIHtcbiAgICBzcGFjZUJldHdlZW4gPSAocGFyc2VGbG9hdChzcGFjZUJldHdlZW4ucmVwbGFjZSgnJScsICcnKSkgLyAxMDApICogc3dpcGVyU2l6ZTtcbiAgfVxuXG4gIHN3aXBlci52aXJ0dWFsU2l6ZSA9IC1zcGFjZUJldHdlZW47XG5cbiAgLy8gcmVzZXQgbWFyZ2luc1xuICBpZiAocnRsKSBzbGlkZXMuY3NzKHsgbWFyZ2luTGVmdDogJycsIG1hcmdpblRvcDogJycgfSk7XG4gIGVsc2Ugc2xpZGVzLmNzcyh7IG1hcmdpblJpZ2h0OiAnJywgbWFyZ2luQm90dG9tOiAnJyB9KTtcblxuICBsZXQgc2xpZGVzTnVtYmVyRXZlblRvUm93cztcbiAgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPiAxKSB7XG4gICAgaWYgKE1hdGguZmxvb3Ioc2xpZGVzTGVuZ3RoIC8gcGFyYW1zLnNsaWRlc1BlckNvbHVtbikgPT09IHNsaWRlc0xlbmd0aCAvIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyQ29sdW1uKSB7XG4gICAgICBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzID0gc2xpZGVzTGVuZ3RoO1xuICAgIH0gZWxzZSB7XG4gICAgICBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzID0gTWF0aC5jZWlsKHNsaWRlc0xlbmd0aCAvIHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4pICogcGFyYW1zLnNsaWRlc1BlckNvbHVtbjtcbiAgICB9XG4gICAgaWYgKHBhcmFtcy5zbGlkZXNQZXJWaWV3ICE9PSAnYXV0bycgJiYgcGFyYW1zLnNsaWRlc1BlckNvbHVtbkZpbGwgPT09ICdyb3cnKSB7XG4gICAgICBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzID0gTWF0aC5tYXgoc2xpZGVzTnVtYmVyRXZlblRvUm93cywgcGFyYW1zLnNsaWRlc1BlclZpZXcgKiBwYXJhbXMuc2xpZGVzUGVyQ29sdW1uKTtcbiAgICB9XG4gIH1cblxuICAvLyBDYWxjIHNsaWRlc1xuICBsZXQgc2xpZGVTaXplO1xuICBjb25zdCBzbGlkZXNQZXJDb2x1bW4gPSBwYXJhbXMuc2xpZGVzUGVyQ29sdW1uO1xuICBjb25zdCBzbGlkZXNQZXJSb3cgPSBzbGlkZXNOdW1iZXJFdmVuVG9Sb3dzIC8gc2xpZGVzUGVyQ29sdW1uO1xuICBjb25zdCBudW1GdWxsQ29sdW1ucyA9IE1hdGguZmxvb3Ioc2xpZGVzTGVuZ3RoIC8gcGFyYW1zLnNsaWRlc1BlckNvbHVtbik7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2xpZGVzTGVuZ3RoOyBpICs9IDEpIHtcbiAgICBzbGlkZVNpemUgPSAwO1xuICAgIGNvbnN0IHNsaWRlID0gc2xpZGVzLmVxKGkpO1xuICAgIGlmIChwYXJhbXMuc2xpZGVzUGVyQ29sdW1uID4gMSkge1xuICAgICAgLy8gU2V0IHNsaWRlcyBvcmRlclxuICAgICAgbGV0IG5ld1NsaWRlT3JkZXJJbmRleDtcbiAgICAgIGxldCBjb2x1bW47XG4gICAgICBsZXQgcm93O1xuICAgICAgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW5GaWxsID09PSAncm93JyAmJiBwYXJhbXMuc2xpZGVzUGVyR3JvdXAgPiAxKSB7XG4gICAgICAgIGNvbnN0IGdyb3VwSW5kZXggPSBNYXRoLmZsb29yKGkgLyAocGFyYW1zLnNsaWRlc1Blckdyb3VwICogcGFyYW1zLnNsaWRlc1BlckNvbHVtbikpO1xuICAgICAgICBjb25zdCBzbGlkZUluZGV4SW5Hcm91cCA9IGkgLSBwYXJhbXMuc2xpZGVzUGVyQ29sdW1uICogcGFyYW1zLnNsaWRlc1Blckdyb3VwICogZ3JvdXBJbmRleDtcbiAgICAgICAgY29uc3QgY29sdW1uc0luR3JvdXAgPSBncm91cEluZGV4ID09PSAwXG4gICAgICAgICAgPyBwYXJhbXMuc2xpZGVzUGVyR3JvdXBcbiAgICAgICAgICA6IE1hdGgubWluKE1hdGguY2VpbCgoc2xpZGVzTGVuZ3RoIC0gZ3JvdXBJbmRleCAqIHNsaWRlc1BlckNvbHVtbiAqIHBhcmFtcy5zbGlkZXNQZXJHcm91cCkgLyBzbGlkZXNQZXJDb2x1bW4pLCBwYXJhbXMuc2xpZGVzUGVyR3JvdXApO1xuICAgICAgICByb3cgPSBNYXRoLmZsb29yKHNsaWRlSW5kZXhJbkdyb3VwIC8gY29sdW1uc0luR3JvdXApO1xuICAgICAgICBjb2x1bW4gPSAoc2xpZGVJbmRleEluR3JvdXAgLSByb3cgKiBjb2x1bW5zSW5Hcm91cCkgKyBncm91cEluZGV4ICogcGFyYW1zLnNsaWRlc1Blckdyb3VwO1xuXG4gICAgICAgIG5ld1NsaWRlT3JkZXJJbmRleCA9IGNvbHVtbiArICgocm93ICogc2xpZGVzTnVtYmVyRXZlblRvUm93cykgLyBzbGlkZXNQZXJDb2x1bW4pO1xuICAgICAgICBzbGlkZVxuICAgICAgICAgIC5jc3Moe1xuICAgICAgICAgICAgJy13ZWJraXQtYm94LW9yZGluYWwtZ3JvdXAnOiBuZXdTbGlkZU9yZGVySW5kZXgsXG4gICAgICAgICAgICAnLW1vei1ib3gtb3JkaW5hbC1ncm91cCc6IG5ld1NsaWRlT3JkZXJJbmRleCxcbiAgICAgICAgICAgICctbXMtZmxleC1vcmRlcic6IG5ld1NsaWRlT3JkZXJJbmRleCxcbiAgICAgICAgICAgICctd2Via2l0LW9yZGVyJzogbmV3U2xpZGVPcmRlckluZGV4LFxuICAgICAgICAgICAgb3JkZXI6IG5ld1NsaWRlT3JkZXJJbmRleCxcbiAgICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAocGFyYW1zLnNsaWRlc1BlckNvbHVtbkZpbGwgPT09ICdjb2x1bW4nKSB7XG4gICAgICAgIGNvbHVtbiA9IE1hdGguZmxvb3IoaSAvIHNsaWRlc1BlckNvbHVtbik7XG4gICAgICAgIHJvdyA9IGkgLSAoY29sdW1uICogc2xpZGVzUGVyQ29sdW1uKTtcbiAgICAgICAgaWYgKGNvbHVtbiA+IG51bUZ1bGxDb2x1bW5zIHx8IChjb2x1bW4gPT09IG51bUZ1bGxDb2x1bW5zICYmIHJvdyA9PT0gc2xpZGVzUGVyQ29sdW1uIC0gMSkpIHtcbiAgICAgICAgICByb3cgKz0gMTtcbiAgICAgICAgICBpZiAocm93ID49IHNsaWRlc1BlckNvbHVtbikge1xuICAgICAgICAgICAgcm93ID0gMDtcbiAgICAgICAgICAgIGNvbHVtbiArPSAxO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcm93ID0gTWF0aC5mbG9vcihpIC8gc2xpZGVzUGVyUm93KTtcbiAgICAgICAgY29sdW1uID0gaSAtIChyb3cgKiBzbGlkZXNQZXJSb3cpO1xuICAgICAgfVxuICAgICAgc2xpZGUuY3NzKFxuICAgICAgICBgbWFyZ2luLSR7c3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ3RvcCcgOiAnbGVmdCd9YCxcbiAgICAgICAgKHJvdyAhPT0gMCAmJiBwYXJhbXMuc3BhY2VCZXR3ZWVuKSAmJiAoYCR7cGFyYW1zLnNwYWNlQmV0d2Vlbn1weGApXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoc2xpZGUuY3NzKCdkaXNwbGF5JykgPT09ICdub25lJykgY29udGludWU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblxuICAgIGlmIChwYXJhbXMuc2xpZGVzUGVyVmlldyA9PT0gJ2F1dG8nKSB7XG4gICAgICBjb25zdCBzbGlkZVN0eWxlcyA9IHdpbi5nZXRDb21wdXRlZFN0eWxlKHNsaWRlWzBdLCBudWxsKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRUcmFuc2Zvcm0gPSBzbGlkZVswXS5zdHlsZS50cmFuc2Zvcm07XG4gICAgICBjb25zdCBjdXJyZW50V2ViS2l0VHJhbnNmb3JtID0gc2xpZGVbMF0uc3R5bGUud2Via2l0VHJhbnNmb3JtO1xuICAgICAgaWYgKGN1cnJlbnRUcmFuc2Zvcm0pIHtcbiAgICAgICAgc2xpZGVbMF0uc3R5bGUudHJhbnNmb3JtID0gJ25vbmUnO1xuICAgICAgfVxuICAgICAgaWYgKGN1cnJlbnRXZWJLaXRUcmFuc2Zvcm0pIHtcbiAgICAgICAgc2xpZGVbMF0uc3R5bGUud2Via2l0VHJhbnNmb3JtID0gJ25vbmUnO1xuICAgICAgfVxuICAgICAgaWYgKHBhcmFtcy5yb3VuZExlbmd0aHMpIHtcbiAgICAgICAgc2xpZGVTaXplID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpXG4gICAgICAgICAgPyBzbGlkZS5vdXRlcldpZHRoKHRydWUpXG4gICAgICAgICAgOiBzbGlkZS5vdXRlckhlaWdodCh0cnVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICBpZiAoc3dpcGVyLmlzSG9yaXpvbnRhbCgpKSB7XG4gICAgICAgICAgY29uc3Qgd2lkdGggPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ3dpZHRoJykpO1xuICAgICAgICAgIGNvbnN0IHBhZGRpbmdMZWZ0ID0gcGFyc2VGbG9hdChzbGlkZVN0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdwYWRkaW5nLWxlZnQnKSk7XG4gICAgICAgICAgY29uc3QgcGFkZGluZ1JpZ2h0ID0gcGFyc2VGbG9hdChzbGlkZVN0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdwYWRkaW5nLXJpZ2h0JykpO1xuICAgICAgICAgIGNvbnN0IG1hcmdpbkxlZnQgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi1sZWZ0JykpO1xuICAgICAgICAgIGNvbnN0IG1hcmdpblJpZ2h0ID0gcGFyc2VGbG9hdChzbGlkZVN0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdtYXJnaW4tcmlnaHQnKSk7XG4gICAgICAgICAgY29uc3QgYm94U2l6aW5nID0gc2xpZGVTdHlsZXMuZ2V0UHJvcGVydHlWYWx1ZSgnYm94LXNpemluZycpO1xuICAgICAgICAgIGlmIChib3hTaXppbmcgJiYgYm94U2l6aW5nID09PSAnYm9yZGVyLWJveCcpIHtcbiAgICAgICAgICAgIHNsaWRlU2l6ZSA9IHdpZHRoICsgbWFyZ2luTGVmdCArIG1hcmdpblJpZ2h0O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzbGlkZVNpemUgPSB3aWR0aCArIHBhZGRpbmdMZWZ0ICsgcGFkZGluZ1JpZ2h0ICsgbWFyZ2luTGVmdCArIG1hcmdpblJpZ2h0O1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zdCBoZWlnaHQgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ2hlaWdodCcpKTtcbiAgICAgICAgICBjb25zdCBwYWRkaW5nVG9wID0gcGFyc2VGbG9hdChzbGlkZVN0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdwYWRkaW5nLXRvcCcpKTtcbiAgICAgICAgICBjb25zdCBwYWRkaW5nQm90dG9tID0gcGFyc2VGbG9hdChzbGlkZVN0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdwYWRkaW5nLWJvdHRvbScpKTtcbiAgICAgICAgICBjb25zdCBtYXJnaW5Ub3AgPSBwYXJzZUZsb2F0KHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ21hcmdpbi10b3AnKSk7XG4gICAgICAgICAgY29uc3QgbWFyZ2luQm90dG9tID0gcGFyc2VGbG9hdChzbGlkZVN0eWxlcy5nZXRQcm9wZXJ0eVZhbHVlKCdtYXJnaW4tYm90dG9tJykpO1xuICAgICAgICAgIGNvbnN0IGJveFNpemluZyA9IHNsaWRlU3R5bGVzLmdldFByb3BlcnR5VmFsdWUoJ2JveC1zaXppbmcnKTtcbiAgICAgICAgICBpZiAoYm94U2l6aW5nICYmIGJveFNpemluZyA9PT0gJ2JvcmRlci1ib3gnKSB7XG4gICAgICAgICAgICBzbGlkZVNpemUgPSBoZWlnaHQgKyBtYXJnaW5Ub3AgKyBtYXJnaW5Cb3R0b207XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNsaWRlU2l6ZSA9IGhlaWdodCArIHBhZGRpbmdUb3AgKyBwYWRkaW5nQm90dG9tICsgbWFyZ2luVG9wICsgbWFyZ2luQm90dG9tO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGN1cnJlbnRUcmFuc2Zvcm0pIHtcbiAgICAgICAgc2xpZGVbMF0uc3R5bGUudHJhbnNmb3JtID0gY3VycmVudFRyYW5zZm9ybTtcbiAgICAgIH1cbiAgICAgIGlmIChjdXJyZW50V2ViS2l0VHJhbnNmb3JtKSB7XG4gICAgICAgIHNsaWRlWzBdLnN0eWxlLndlYmtpdFRyYW5zZm9ybSA9IGN1cnJlbnRXZWJLaXRUcmFuc2Zvcm07XG4gICAgICB9XG4gICAgICBpZiAocGFyYW1zLnJvdW5kTGVuZ3Rocykgc2xpZGVTaXplID0gTWF0aC5mbG9vcihzbGlkZVNpemUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzbGlkZVNpemUgPSAoc3dpcGVyU2l6ZSAtICgocGFyYW1zLnNsaWRlc1BlclZpZXcgLSAxKSAqIHNwYWNlQmV0d2VlbikpIC8gcGFyYW1zLnNsaWRlc1BlclZpZXc7XG4gICAgICBpZiAocGFyYW1zLnJvdW5kTGVuZ3Rocykgc2xpZGVTaXplID0gTWF0aC5mbG9vcihzbGlkZVNpemUpO1xuXG4gICAgICBpZiAoc2xpZGVzW2ldKSB7XG4gICAgICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICAgICBzbGlkZXNbaV0uc3R5bGUud2lkdGggPSBgJHtzbGlkZVNpemV9cHhgO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNsaWRlc1tpXS5zdHlsZS5oZWlnaHQgPSBgJHtzbGlkZVNpemV9cHhgO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChzbGlkZXNbaV0pIHtcbiAgICAgIHNsaWRlc1tpXS5zd2lwZXJTbGlkZVNpemUgPSBzbGlkZVNpemU7XG4gICAgfVxuICAgIHNsaWRlc1NpemVzR3JpZC5wdXNoKHNsaWRlU2l6ZSk7XG5cblxuICAgIGlmIChwYXJhbXMuY2VudGVyZWRTbGlkZXMpIHtcbiAgICAgIHNsaWRlUG9zaXRpb24gPSBzbGlkZVBvc2l0aW9uICsgKHNsaWRlU2l6ZSAvIDIpICsgKHByZXZTbGlkZVNpemUgLyAyKSArIHNwYWNlQmV0d2VlbjtcbiAgICAgIGlmIChwcmV2U2xpZGVTaXplID09PSAwICYmIGkgIT09IDApIHNsaWRlUG9zaXRpb24gPSBzbGlkZVBvc2l0aW9uIC0gKHN3aXBlclNpemUgLyAyKSAtIHNwYWNlQmV0d2VlbjtcbiAgICAgIGlmIChpID09PSAwKSBzbGlkZVBvc2l0aW9uID0gc2xpZGVQb3NpdGlvbiAtIChzd2lwZXJTaXplIC8gMikgLSBzcGFjZUJldHdlZW47XG4gICAgICBpZiAoTWF0aC5hYnMoc2xpZGVQb3NpdGlvbikgPCAxIC8gMTAwMCkgc2xpZGVQb3NpdGlvbiA9IDA7XG4gICAgICBpZiAocGFyYW1zLnJvdW5kTGVuZ3Rocykgc2xpZGVQb3NpdGlvbiA9IE1hdGguZmxvb3Ioc2xpZGVQb3NpdGlvbik7XG4gICAgICBpZiAoKGluZGV4KSAlIHBhcmFtcy5zbGlkZXNQZXJHcm91cCA9PT0gMCkgc25hcEdyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICAgIHNsaWRlc0dyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHBhcmFtcy5yb3VuZExlbmd0aHMpIHNsaWRlUG9zaXRpb24gPSBNYXRoLmZsb29yKHNsaWRlUG9zaXRpb24pO1xuICAgICAgaWYgKChpbmRleCAtIE1hdGgubWluKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwLCBpbmRleCkpICUgc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cCA9PT0gMCkgc25hcEdyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICAgIHNsaWRlc0dyaWQucHVzaChzbGlkZVBvc2l0aW9uKTtcbiAgICAgIHNsaWRlUG9zaXRpb24gPSBzbGlkZVBvc2l0aW9uICsgc2xpZGVTaXplICsgc3BhY2VCZXR3ZWVuO1xuICAgIH1cblxuICAgIHN3aXBlci52aXJ0dWFsU2l6ZSArPSBzbGlkZVNpemUgKyBzcGFjZUJldHdlZW47XG5cbiAgICBwcmV2U2xpZGVTaXplID0gc2xpZGVTaXplO1xuXG4gICAgaW5kZXggKz0gMTtcbiAgfVxuICBzd2lwZXIudmlydHVhbFNpemUgPSBNYXRoLm1heChzd2lwZXIudmlydHVhbFNpemUsIHN3aXBlclNpemUpICsgb2Zmc2V0QWZ0ZXI7XG4gIGxldCBuZXdTbGlkZXNHcmlkO1xuXG4gIGlmIChcbiAgICBydGwgJiYgd3JvbmdSVEwgJiYgKHBhcmFtcy5lZmZlY3QgPT09ICdzbGlkZScgfHwgcGFyYW1zLmVmZmVjdCA9PT0gJ2NvdmVyZmxvdycpKSB7XG4gICAgJHdyYXBwZXJFbC5jc3MoeyB3aWR0aDogYCR7c3dpcGVyLnZpcnR1YWxTaXplICsgcGFyYW1zLnNwYWNlQmV0d2Vlbn1weGAgfSk7XG4gIH1cbiAgaWYgKHBhcmFtcy5zZXRXcmFwcGVyU2l6ZSkge1xuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpICR3cmFwcGVyRWwuY3NzKHsgd2lkdGg6IGAke3N3aXBlci52aXJ0dWFsU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW59cHhgIH0pO1xuICAgIGVsc2UgJHdyYXBwZXJFbC5jc3MoeyBoZWlnaHQ6IGAke3N3aXBlci52aXJ0dWFsU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW59cHhgIH0pO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW4gPiAxKSB7XG4gICAgc3dpcGVyLnZpcnR1YWxTaXplID0gKHNsaWRlU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW4pICogc2xpZGVzTnVtYmVyRXZlblRvUm93cztcbiAgICBzd2lwZXIudmlydHVhbFNpemUgPSBNYXRoLmNlaWwoc3dpcGVyLnZpcnR1YWxTaXplIC8gcGFyYW1zLnNsaWRlc1BlckNvbHVtbikgLSBwYXJhbXMuc3BhY2VCZXR3ZWVuO1xuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpICR3cmFwcGVyRWwuY3NzKHsgd2lkdGg6IGAke3N3aXBlci52aXJ0dWFsU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW59cHhgIH0pO1xuICAgIGVsc2UgJHdyYXBwZXJFbC5jc3MoeyBoZWlnaHQ6IGAke3N3aXBlci52aXJ0dWFsU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW59cHhgIH0pO1xuICAgIGlmIChwYXJhbXMuY2VudGVyZWRTbGlkZXMpIHtcbiAgICAgIG5ld1NsaWRlc0dyaWQgPSBbXTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc25hcEdyaWQubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgICAgbGV0IHNsaWRlc0dyaWRJdGVtID0gc25hcEdyaWRbaV07XG4gICAgICAgIGlmIChwYXJhbXMucm91bmRMZW5ndGhzKSBzbGlkZXNHcmlkSXRlbSA9IE1hdGguZmxvb3Ioc2xpZGVzR3JpZEl0ZW0pO1xuICAgICAgICBpZiAoc25hcEdyaWRbaV0gPCBzd2lwZXIudmlydHVhbFNpemUgKyBzbmFwR3JpZFswXSkgbmV3U2xpZGVzR3JpZC5wdXNoKHNsaWRlc0dyaWRJdGVtKTtcbiAgICAgIH1cbiAgICAgIHNuYXBHcmlkID0gbmV3U2xpZGVzR3JpZDtcbiAgICB9XG4gIH1cblxuICAvLyBSZW1vdmUgbGFzdCBncmlkIGVsZW1lbnRzIGRlcGVuZGluZyBvbiB3aWR0aFxuICBpZiAoIXBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgIG5ld1NsaWRlc0dyaWQgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNuYXBHcmlkLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBsZXQgc2xpZGVzR3JpZEl0ZW0gPSBzbmFwR3JpZFtpXTtcbiAgICAgIGlmIChwYXJhbXMucm91bmRMZW5ndGhzKSBzbGlkZXNHcmlkSXRlbSA9IE1hdGguZmxvb3Ioc2xpZGVzR3JpZEl0ZW0pO1xuICAgICAgaWYgKHNuYXBHcmlkW2ldIDw9IHN3aXBlci52aXJ0dWFsU2l6ZSAtIHN3aXBlclNpemUpIHtcbiAgICAgICAgbmV3U2xpZGVzR3JpZC5wdXNoKHNsaWRlc0dyaWRJdGVtKTtcbiAgICAgIH1cbiAgICB9XG4gICAgc25hcEdyaWQgPSBuZXdTbGlkZXNHcmlkO1xuICAgIGlmIChNYXRoLmZsb29yKHN3aXBlci52aXJ0dWFsU2l6ZSAtIHN3aXBlclNpemUpIC0gTWF0aC5mbG9vcihzbmFwR3JpZFtzbmFwR3JpZC5sZW5ndGggLSAxXSkgPiAxKSB7XG4gICAgICBzbmFwR3JpZC5wdXNoKHN3aXBlci52aXJ0dWFsU2l6ZSAtIHN3aXBlclNpemUpO1xuICAgIH1cbiAgfVxuICBpZiAoc25hcEdyaWQubGVuZ3RoID09PSAwKSBzbmFwR3JpZCA9IFswXTtcblxuICBpZiAocGFyYW1zLnNwYWNlQmV0d2VlbiAhPT0gMCkge1xuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgIGlmIChydGwpIHNsaWRlcy5maWx0ZXIoc2xpZGVzRm9yTWFyZ2luKS5jc3MoeyBtYXJnaW5MZWZ0OiBgJHtzcGFjZUJldHdlZW59cHhgIH0pO1xuICAgICAgZWxzZSBzbGlkZXMuZmlsdGVyKHNsaWRlc0Zvck1hcmdpbikuY3NzKHsgbWFyZ2luUmlnaHQ6IGAke3NwYWNlQmV0d2Vlbn1weGAgfSk7XG4gICAgfSBlbHNlIHNsaWRlcy5maWx0ZXIoc2xpZGVzRm9yTWFyZ2luKS5jc3MoeyBtYXJnaW5Cb3R0b206IGAke3NwYWNlQmV0d2Vlbn1weGAgfSk7XG4gIH1cblxuICBpZiAocGFyYW1zLmNlbnRlcmVkU2xpZGVzICYmIHBhcmFtcy5jZW50ZXJlZFNsaWRlc0JvdW5kcykge1xuICAgIGxldCBhbGxTbGlkZXNTaXplID0gMDtcbiAgICBzbGlkZXNTaXplc0dyaWQuZm9yRWFjaCgoc2xpZGVTaXplVmFsdWUpID0+IHtcbiAgICAgIGFsbFNsaWRlc1NpemUgKz0gc2xpZGVTaXplVmFsdWUgKyAocGFyYW1zLnNwYWNlQmV0d2VlbiA/IHBhcmFtcy5zcGFjZUJldHdlZW4gOiAwKTtcbiAgICB9KTtcbiAgICBhbGxTbGlkZXNTaXplIC09IHBhcmFtcy5zcGFjZUJldHdlZW47XG4gICAgY29uc3QgbWF4U25hcCA9IGFsbFNsaWRlc1NpemUgLSBzd2lwZXJTaXplO1xuICAgIHNuYXBHcmlkID0gc25hcEdyaWQubWFwKChzbmFwKSA9PiB7XG4gICAgICBpZiAoc25hcCA8IDApIHJldHVybiAtb2Zmc2V0QmVmb3JlO1xuICAgICAgaWYgKHNuYXAgPiBtYXhTbmFwKSByZXR1cm4gbWF4U25hcCArIG9mZnNldEFmdGVyO1xuICAgICAgcmV0dXJuIHNuYXA7XG4gICAgfSk7XG4gIH1cblxuICBpZiAocGFyYW1zLmNlbnRlckluc3VmZmljaWVudFNsaWRlcykge1xuICAgIGxldCBhbGxTbGlkZXNTaXplID0gMDtcbiAgICBzbGlkZXNTaXplc0dyaWQuZm9yRWFjaCgoc2xpZGVTaXplVmFsdWUpID0+IHtcbiAgICAgIGFsbFNsaWRlc1NpemUgKz0gc2xpZGVTaXplVmFsdWUgKyAocGFyYW1zLnNwYWNlQmV0d2VlbiA/IHBhcmFtcy5zcGFjZUJldHdlZW4gOiAwKTtcbiAgICB9KTtcbiAgICBhbGxTbGlkZXNTaXplIC09IHBhcmFtcy5zcGFjZUJldHdlZW47XG4gICAgaWYgKGFsbFNsaWRlc1NpemUgPCBzd2lwZXJTaXplKSB7XG4gICAgICBjb25zdCBhbGxTbGlkZXNPZmZzZXQgPSAoc3dpcGVyU2l6ZSAtIGFsbFNsaWRlc1NpemUpIC8gMjtcbiAgICAgIHNuYXBHcmlkLmZvckVhY2goKHNuYXAsIHNuYXBJbmRleCkgPT4ge1xuICAgICAgICBzbmFwR3JpZFtzbmFwSW5kZXhdID0gc25hcCAtIGFsbFNsaWRlc09mZnNldDtcbiAgICAgIH0pO1xuICAgICAgc2xpZGVzR3JpZC5mb3JFYWNoKChzbmFwLCBzbmFwSW5kZXgpID0+IHtcbiAgICAgICAgc2xpZGVzR3JpZFtzbmFwSW5kZXhdID0gc25hcCArIGFsbFNsaWRlc09mZnNldDtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIFV0aWxzLmV4dGVuZChzd2lwZXIsIHtcbiAgICBzbGlkZXMsXG4gICAgc25hcEdyaWQsXG4gICAgc2xpZGVzR3JpZCxcbiAgICBzbGlkZXNTaXplc0dyaWQsXG4gIH0pO1xuXG4gIGlmIChzbGlkZXNMZW5ndGggIT09IHByZXZpb3VzU2xpZGVzTGVuZ3RoKSB7XG4gICAgc3dpcGVyLmVtaXQoJ3NsaWRlc0xlbmd0aENoYW5nZScpO1xuICB9XG4gIGlmIChzbmFwR3JpZC5sZW5ndGggIT09IHByZXZpb3VzU25hcEdyaWRMZW5ndGgpIHtcbiAgICBpZiAoc3dpcGVyLnBhcmFtcy53YXRjaE92ZXJmbG93KSBzd2lwZXIuY2hlY2tPdmVyZmxvdygpO1xuICAgIHN3aXBlci5lbWl0KCdzbmFwR3JpZExlbmd0aENoYW5nZScpO1xuICB9XG4gIGlmIChzbGlkZXNHcmlkLmxlbmd0aCAhPT0gcHJldmlvdXNTbGlkZXNHcmlkTGVuZ3RoKSB7XG4gICAgc3dpcGVyLmVtaXQoJ3NsaWRlc0dyaWRMZW5ndGhDaGFuZ2UnKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcyB8fCBwYXJhbXMud2F0Y2hTbGlkZXNWaXNpYmlsaXR5KSB7XG4gICAgc3dpcGVyLnVwZGF0ZVNsaWRlc09mZnNldCgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUF1dG9IZWlnaHQgKHNwZWVkKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IGFjdGl2ZVNsaWRlcyA9IFtdO1xuICBsZXQgbmV3SGVpZ2h0ID0gMDtcbiAgbGV0IGk7XG4gIGlmICh0eXBlb2Ygc3BlZWQgPT09ICdudW1iZXInKSB7XG4gICAgc3dpcGVyLnNldFRyYW5zaXRpb24oc3BlZWQpO1xuICB9IGVsc2UgaWYgKHNwZWVkID09PSB0cnVlKSB7XG4gICAgc3dpcGVyLnNldFRyYW5zaXRpb24oc3dpcGVyLnBhcmFtcy5zcGVlZCk7XG4gIH1cbiAgLy8gRmluZCBzbGlkZXMgY3VycmVudGx5IGluIHZpZXdcbiAgaWYgKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyVmlldyAhPT0gJ2F1dG8nICYmIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyVmlldyA+IDEpIHtcbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgICAgc3dpcGVyLnZpc2libGVTbGlkZXMuZWFjaCgoaW5kZXgsIHNsaWRlKSA9PiB7XG4gICAgICAgIGFjdGl2ZVNsaWRlcy5wdXNoKHNsaWRlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgTWF0aC5jZWlsKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyVmlldyk7IGkgKz0gMSkge1xuICAgICAgICBjb25zdCBpbmRleCA9IHN3aXBlci5hY3RpdmVJbmRleCArIGk7XG4gICAgICAgIGlmIChpbmRleCA+IHN3aXBlci5zbGlkZXMubGVuZ3RoKSBicmVhaztcbiAgICAgICAgYWN0aXZlU2xpZGVzLnB1c2goc3dpcGVyLnNsaWRlcy5lcShpbmRleClbMF0pO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBhY3RpdmVTbGlkZXMucHVzaChzd2lwZXIuc2xpZGVzLmVxKHN3aXBlci5hY3RpdmVJbmRleClbMF0pO1xuICB9XG5cbiAgLy8gRmluZCBuZXcgaGVpZ2h0IGZyb20gaGlnaGVzdCBzbGlkZSBpbiB2aWV3XG4gIGZvciAoaSA9IDA7IGkgPCBhY3RpdmVTbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBpZiAodHlwZW9mIGFjdGl2ZVNsaWRlc1tpXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnN0IGhlaWdodCA9IGFjdGl2ZVNsaWRlc1tpXS5vZmZzZXRIZWlnaHQ7XG4gICAgICBuZXdIZWlnaHQgPSBoZWlnaHQgPiBuZXdIZWlnaHQgPyBoZWlnaHQgOiBuZXdIZWlnaHQ7XG4gICAgfVxuICB9XG5cbiAgLy8gVXBkYXRlIEhlaWdodFxuICBpZiAobmV3SGVpZ2h0KSBzd2lwZXIuJHdyYXBwZXJFbC5jc3MoJ2hlaWdodCcsIGAke25ld0hlaWdodH1weGApO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVTbGlkZXNPZmZzZXQgKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCBzbGlkZXMgPSBzd2lwZXIuc2xpZGVzO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHNsaWRlc1tpXS5zd2lwZXJTbGlkZU9mZnNldCA9IHN3aXBlci5pc0hvcml6b250YWwoKSA/IHNsaWRlc1tpXS5vZmZzZXRMZWZ0IDogc2xpZGVzW2ldLm9mZnNldFRvcDtcbiAgfVxufVxuXG5mdW5jdGlvbiB1cGRhdGVTbGlkZXNQcm9ncmVzcyAodHJhbnNsYXRlID0gKHRoaXMgJiYgdGhpcy50cmFuc2xhdGUpIHx8IDApIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgY29uc3QgcGFyYW1zID0gc3dpcGVyLnBhcmFtcztcblxuICBjb25zdCB7IHNsaWRlcywgcnRsVHJhbnNsYXRlOiBydGwgfSA9IHN3aXBlcjtcblxuICBpZiAoc2xpZGVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICBpZiAodHlwZW9mIHNsaWRlc1swXS5zd2lwZXJTbGlkZU9mZnNldCA9PT0gJ3VuZGVmaW5lZCcpIHN3aXBlci51cGRhdGVTbGlkZXNPZmZzZXQoKTtcblxuICBsZXQgb2Zmc2V0Q2VudGVyID0gLXRyYW5zbGF0ZTtcbiAgaWYgKHJ0bCkgb2Zmc2V0Q2VudGVyID0gdHJhbnNsYXRlO1xuXG4gIC8vIFZpc2libGUgU2xpZGVzXG4gIHNsaWRlcy5yZW1vdmVDbGFzcyhwYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MpO1xuXG4gIHN3aXBlci52aXNpYmxlU2xpZGVzSW5kZXhlcyA9IFtdO1xuICBzd2lwZXIudmlzaWJsZVNsaWRlcyA9IFtdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2xpZGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgY29uc3Qgc2xpZGUgPSBzbGlkZXNbaV07XG4gICAgY29uc3Qgc2xpZGVQcm9ncmVzcyA9IChcbiAgICAgIChvZmZzZXRDZW50ZXIgKyAocGFyYW1zLmNlbnRlcmVkU2xpZGVzID8gc3dpcGVyLm1pblRyYW5zbGF0ZSgpIDogMCkpIC0gc2xpZGUuc3dpcGVyU2xpZGVPZmZzZXRcbiAgICApIC8gKHNsaWRlLnN3aXBlclNsaWRlU2l6ZSArIHBhcmFtcy5zcGFjZUJldHdlZW4pO1xuICAgIGlmIChwYXJhbXMud2F0Y2hTbGlkZXNWaXNpYmlsaXR5IHx8IChwYXJhbXMuY2VudGVyZWRTbGlkZXMgJiYgcGFyYW1zLmF1dG9IZWlnaHQpKSB7XG4gICAgICBjb25zdCBzbGlkZUJlZm9yZSA9IC0ob2Zmc2V0Q2VudGVyIC0gc2xpZGUuc3dpcGVyU2xpZGVPZmZzZXQpO1xuICAgICAgY29uc3Qgc2xpZGVBZnRlciA9IHNsaWRlQmVmb3JlICsgc3dpcGVyLnNsaWRlc1NpemVzR3JpZFtpXTtcbiAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IChzbGlkZUJlZm9yZSA+PSAwICYmIHNsaWRlQmVmb3JlIDwgc3dpcGVyLnNpemUgLSAxKVxuICAgICAgICAgICAgICAgIHx8IChzbGlkZUFmdGVyID4gMSAmJiBzbGlkZUFmdGVyIDw9IHN3aXBlci5zaXplKVxuICAgICAgICAgICAgICAgIHx8IChzbGlkZUJlZm9yZSA8PSAwICYmIHNsaWRlQWZ0ZXIgPj0gc3dpcGVyLnNpemUpO1xuICAgICAgaWYgKGlzVmlzaWJsZSkge1xuICAgICAgICBzd2lwZXIudmlzaWJsZVNsaWRlcy5wdXNoKHNsaWRlKTtcbiAgICAgICAgc3dpcGVyLnZpc2libGVTbGlkZXNJbmRleGVzLnB1c2goaSk7XG4gICAgICAgIHNsaWRlcy5lcShpKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MpO1xuICAgICAgfVxuICAgIH1cbiAgICBzbGlkZS5wcm9ncmVzcyA9IHJ0bCA/IC1zbGlkZVByb2dyZXNzIDogc2xpZGVQcm9ncmVzcztcbiAgfVxuICBzd2lwZXIudmlzaWJsZVNsaWRlcyA9ICQoc3dpcGVyLnZpc2libGVTbGlkZXMpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVQcm9ncmVzcyAodHJhbnNsYXRlKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGlmICh0eXBlb2YgdHJhbnNsYXRlID09PSAndW5kZWZpbmVkJykge1xuICAgIGNvbnN0IG11bHRpcGxpZXIgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gLTEgOiAxO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgIHRyYW5zbGF0ZSA9IChzd2lwZXIgJiYgc3dpcGVyLnRyYW5zbGF0ZSAmJiAoc3dpcGVyLnRyYW5zbGF0ZSAqIG11bHRpcGxpZXIpKSB8fCAwO1xuICB9XG4gIGNvbnN0IHBhcmFtcyA9IHN3aXBlci5wYXJhbXM7XG4gIGNvbnN0IHRyYW5zbGF0ZXNEaWZmID0gc3dpcGVyLm1heFRyYW5zbGF0ZSgpIC0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpO1xuICBsZXQgeyBwcm9ncmVzcywgaXNCZWdpbm5pbmcsIGlzRW5kIH0gPSBzd2lwZXI7XG4gIGNvbnN0IHdhc0JlZ2lubmluZyA9IGlzQmVnaW5uaW5nO1xuICBjb25zdCB3YXNFbmQgPSBpc0VuZDtcbiAgaWYgKHRyYW5zbGF0ZXNEaWZmID09PSAwKSB7XG4gICAgcHJvZ3Jlc3MgPSAwO1xuICAgIGlzQmVnaW5uaW5nID0gdHJ1ZTtcbiAgICBpc0VuZCA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgcHJvZ3Jlc3MgPSAodHJhbnNsYXRlIC0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSAvICh0cmFuc2xhdGVzRGlmZik7XG4gICAgaXNCZWdpbm5pbmcgPSBwcm9ncmVzcyA8PSAwO1xuICAgIGlzRW5kID0gcHJvZ3Jlc3MgPj0gMTtcbiAgfVxuICBVdGlscy5leHRlbmQoc3dpcGVyLCB7XG4gICAgcHJvZ3Jlc3MsXG4gICAgaXNCZWdpbm5pbmcsXG4gICAgaXNFbmQsXG4gIH0pO1xuXG4gIGlmIChwYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcyB8fCBwYXJhbXMud2F0Y2hTbGlkZXNWaXNpYmlsaXR5IHx8IChwYXJhbXMuY2VudGVyZWRTbGlkZXMgJiYgcGFyYW1zLmF1dG9IZWlnaHQpKSBzd2lwZXIudXBkYXRlU2xpZGVzUHJvZ3Jlc3ModHJhbnNsYXRlKTtcblxuICBpZiAoaXNCZWdpbm5pbmcgJiYgIXdhc0JlZ2lubmluZykge1xuICAgIHN3aXBlci5lbWl0KCdyZWFjaEJlZ2lubmluZyB0b0VkZ2UnKTtcbiAgfVxuICBpZiAoaXNFbmQgJiYgIXdhc0VuZCkge1xuICAgIHN3aXBlci5lbWl0KCdyZWFjaEVuZCB0b0VkZ2UnKTtcbiAgfVxuICBpZiAoKHdhc0JlZ2lubmluZyAmJiAhaXNCZWdpbm5pbmcpIHx8ICh3YXNFbmQgJiYgIWlzRW5kKSkge1xuICAgIHN3aXBlci5lbWl0KCdmcm9tRWRnZScpO1xuICB9XG5cbiAgc3dpcGVyLmVtaXQoJ3Byb2dyZXNzJywgcHJvZ3Jlc3MpO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVTbGlkZXNDbGFzc2VzICgpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcblxuICBjb25zdCB7XG4gICAgc2xpZGVzLCBwYXJhbXMsICR3cmFwcGVyRWwsIGFjdGl2ZUluZGV4LCByZWFsSW5kZXgsXG4gIH0gPSBzd2lwZXI7XG4gIGNvbnN0IGlzVmlydHVhbCA9IHN3aXBlci52aXJ0dWFsICYmIHBhcmFtcy52aXJ0dWFsLmVuYWJsZWQ7XG5cbiAgc2xpZGVzLnJlbW92ZUNsYXNzKGAke3BhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzfSAke3BhcmFtcy5zbGlkZU5leHRDbGFzc30gJHtwYXJhbXMuc2xpZGVQcmV2Q2xhc3N9ICR7cGFyYW1zLnNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3N9ICR7cGFyYW1zLnNsaWRlRHVwbGljYXRlTmV4dENsYXNzfSAke3BhcmFtcy5zbGlkZUR1cGxpY2F0ZVByZXZDbGFzc31gKTtcblxuICBsZXQgYWN0aXZlU2xpZGU7XG4gIGlmIChpc1ZpcnR1YWwpIHtcbiAgICBhY3RpdmVTbGlkZSA9IHN3aXBlci4kd3JhcHBlckVsLmZpbmQoYC4ke3BhcmFtcy5zbGlkZUNsYXNzfVtkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIiR7YWN0aXZlSW5kZXh9XCJdYCk7XG4gIH0gZWxzZSB7XG4gICAgYWN0aXZlU2xpZGUgPSBzbGlkZXMuZXEoYWN0aXZlSW5kZXgpO1xuICB9XG5cbiAgLy8gQWN0aXZlIGNsYXNzZXNcbiAgYWN0aXZlU2xpZGUuYWRkQ2xhc3MocGFyYW1zLnNsaWRlQWN0aXZlQ2xhc3MpO1xuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIC8vIER1cGxpY2F0ZSB0byBhbGwgbG9vcGVkIHNsaWRlc1xuICAgIGlmIChhY3RpdmVTbGlkZS5oYXNDbGFzcyhwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcykpIHtcbiAgICAgICR3cmFwcGVyRWxcbiAgICAgICAgLmNoaWxkcmVuKGAuJHtwYXJhbXMuc2xpZGVDbGFzc306bm90KC4ke3BhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzfSlbZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCIke3JlYWxJbmRleH1cIl1gKVxuICAgICAgICAuYWRkQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkd3JhcHBlckVsXG4gICAgICAgIC5jaGlsZHJlbihgLiR7cGFyYW1zLnNsaWRlQ2xhc3N9LiR7cGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3N9W2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJHtyZWFsSW5kZXh9XCJdYClcbiAgICAgICAgLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzKTtcbiAgICB9XG4gIH1cbiAgLy8gTmV4dCBTbGlkZVxuICBsZXQgbmV4dFNsaWRlID0gYWN0aXZlU2xpZGUubmV4dEFsbChgLiR7cGFyYW1zLnNsaWRlQ2xhc3N9YCkuZXEoMCkuYWRkQ2xhc3MocGFyYW1zLnNsaWRlTmV4dENsYXNzKTtcbiAgaWYgKHBhcmFtcy5sb29wICYmIG5leHRTbGlkZS5sZW5ndGggPT09IDApIHtcbiAgICBuZXh0U2xpZGUgPSBzbGlkZXMuZXEoMCk7XG4gICAgbmV4dFNsaWRlLmFkZENsYXNzKHBhcmFtcy5zbGlkZU5leHRDbGFzcyk7XG4gIH1cbiAgLy8gUHJldiBTbGlkZVxuICBsZXQgcHJldlNsaWRlID0gYWN0aXZlU2xpZGUucHJldkFsbChgLiR7cGFyYW1zLnNsaWRlQ2xhc3N9YCkuZXEoMCkuYWRkQ2xhc3MocGFyYW1zLnNsaWRlUHJldkNsYXNzKTtcbiAgaWYgKHBhcmFtcy5sb29wICYmIHByZXZTbGlkZS5sZW5ndGggPT09IDApIHtcbiAgICBwcmV2U2xpZGUgPSBzbGlkZXMuZXEoLTEpO1xuICAgIHByZXZTbGlkZS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVQcmV2Q2xhc3MpO1xuICB9XG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIC8vIER1cGxpY2F0ZSB0byBhbGwgbG9vcGVkIHNsaWRlc1xuICAgIGlmIChuZXh0U2xpZGUuaGFzQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKSB7XG4gICAgICAkd3JhcHBlckVsXG4gICAgICAgIC5jaGlsZHJlbihgLiR7cGFyYW1zLnNsaWRlQ2xhc3N9Om5vdCguJHtwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzc30pW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJHtuZXh0U2xpZGUuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKX1cIl1gKVxuICAgICAgICAuYWRkQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlTmV4dENsYXNzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJHdyYXBwZXJFbFxuICAgICAgICAuY2hpbGRyZW4oYC4ke3BhcmFtcy5zbGlkZUNsYXNzfS4ke3BhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzfVtkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIiR7bmV4dFNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4Jyl9XCJdYClcbiAgICAgICAgLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZU5leHRDbGFzcyk7XG4gICAgfVxuICAgIGlmIChwcmV2U2xpZGUuaGFzQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlQ2xhc3MpKSB7XG4gICAgICAkd3JhcHBlckVsXG4gICAgICAgIC5jaGlsZHJlbihgLiR7cGFyYW1zLnNsaWRlQ2xhc3N9Om5vdCguJHtwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzc30pW2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJHtwcmV2U2xpZGUuYXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKX1cIl1gKVxuICAgICAgICAuYWRkQ2xhc3MocGFyYW1zLnNsaWRlRHVwbGljYXRlUHJldkNsYXNzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJHdyYXBwZXJFbFxuICAgICAgICAuY2hpbGRyZW4oYC4ke3BhcmFtcy5zbGlkZUNsYXNzfS4ke3BhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzfVtkYXRhLXN3aXBlci1zbGlkZS1pbmRleD1cIiR7cHJldlNsaWRlLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4Jyl9XCJdYClcbiAgICAgICAgLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUFjdGl2ZUluZGV4IChuZXdBY3RpdmVJbmRleCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCB0cmFuc2xhdGUgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gc3dpcGVyLnRyYW5zbGF0ZSA6IC1zd2lwZXIudHJhbnNsYXRlO1xuICBjb25zdCB7XG4gICAgc2xpZGVzR3JpZCwgc25hcEdyaWQsIHBhcmFtcywgYWN0aXZlSW5kZXg6IHByZXZpb3VzSW5kZXgsIHJlYWxJbmRleDogcHJldmlvdXNSZWFsSW5kZXgsIHNuYXBJbmRleDogcHJldmlvdXNTbmFwSW5kZXgsXG4gIH0gPSBzd2lwZXI7XG4gIGxldCBhY3RpdmVJbmRleCA9IG5ld0FjdGl2ZUluZGV4O1xuICBsZXQgc25hcEluZGV4O1xuICBpZiAodHlwZW9mIGFjdGl2ZUluZGV4ID09PSAndW5kZWZpbmVkJykge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2xpZGVzR3JpZC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKHR5cGVvZiBzbGlkZXNHcmlkW2kgKyAxXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgaWYgKHRyYW5zbGF0ZSA+PSBzbGlkZXNHcmlkW2ldICYmIHRyYW5zbGF0ZSA8IHNsaWRlc0dyaWRbaSArIDFdIC0gKChzbGlkZXNHcmlkW2kgKyAxXSAtIHNsaWRlc0dyaWRbaV0pIC8gMikpIHtcbiAgICAgICAgICBhY3RpdmVJbmRleCA9IGk7XG4gICAgICAgIH0gZWxzZSBpZiAodHJhbnNsYXRlID49IHNsaWRlc0dyaWRbaV0gJiYgdHJhbnNsYXRlIDwgc2xpZGVzR3JpZFtpICsgMV0pIHtcbiAgICAgICAgICBhY3RpdmVJbmRleCA9IGkgKyAxO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHRyYW5zbGF0ZSA+PSBzbGlkZXNHcmlkW2ldKSB7XG4gICAgICAgIGFjdGl2ZUluZGV4ID0gaTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gTm9ybWFsaXplIHNsaWRlSW5kZXhcbiAgICBpZiAocGFyYW1zLm5vcm1hbGl6ZVNsaWRlSW5kZXgpIHtcbiAgICAgIGlmIChhY3RpdmVJbmRleCA8IDAgfHwgdHlwZW9mIGFjdGl2ZUluZGV4ID09PSAndW5kZWZpbmVkJykgYWN0aXZlSW5kZXggPSAwO1xuICAgIH1cbiAgfVxuICBpZiAoc25hcEdyaWQuaW5kZXhPZih0cmFuc2xhdGUpID49IDApIHtcbiAgICBzbmFwSW5kZXggPSBzbmFwR3JpZC5pbmRleE9mKHRyYW5zbGF0ZSk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3Qgc2tpcCA9IE1hdGgubWluKHBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAsIGFjdGl2ZUluZGV4KTtcbiAgICBzbmFwSW5kZXggPSBza2lwICsgTWF0aC5mbG9vcigoYWN0aXZlSW5kZXggLSBza2lwKSAvIHBhcmFtcy5zbGlkZXNQZXJHcm91cCk7XG4gIH1cbiAgaWYgKHNuYXBJbmRleCA+PSBzbmFwR3JpZC5sZW5ndGgpIHNuYXBJbmRleCA9IHNuYXBHcmlkLmxlbmd0aCAtIDE7XG4gIGlmIChhY3RpdmVJbmRleCA9PT0gcHJldmlvdXNJbmRleCkge1xuICAgIGlmIChzbmFwSW5kZXggIT09IHByZXZpb3VzU25hcEluZGV4KSB7XG4gICAgICBzd2lwZXIuc25hcEluZGV4ID0gc25hcEluZGV4O1xuICAgICAgc3dpcGVyLmVtaXQoJ3NuYXBJbmRleENoYW5nZScpO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBHZXQgcmVhbCBpbmRleFxuICBjb25zdCByZWFsSW5kZXggPSBwYXJzZUludChzd2lwZXIuc2xpZGVzLmVxKGFjdGl2ZUluZGV4KS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpIHx8IGFjdGl2ZUluZGV4LCAxMCk7XG5cbiAgVXRpbHMuZXh0ZW5kKHN3aXBlciwge1xuICAgIHNuYXBJbmRleCxcbiAgICByZWFsSW5kZXgsXG4gICAgcHJldmlvdXNJbmRleCxcbiAgICBhY3RpdmVJbmRleCxcbiAgfSk7XG4gIHN3aXBlci5lbWl0KCdhY3RpdmVJbmRleENoYW5nZScpO1xuICBzd2lwZXIuZW1pdCgnc25hcEluZGV4Q2hhbmdlJyk7XG4gIGlmIChwcmV2aW91c1JlYWxJbmRleCAhPT0gcmVhbEluZGV4KSB7XG4gICAgc3dpcGVyLmVtaXQoJ3JlYWxJbmRleENoYW5nZScpO1xuICB9XG4gIGlmIChzd2lwZXIuaW5pdGlhbGl6ZWQgfHwgc3dpcGVyLnBhcmFtcy5ydW5DYWxsYmFja3NPbkluaXQpIHtcbiAgICBzd2lwZXIuZW1pdCgnc2xpZGVDaGFuZ2UnKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB1cGRhdGVDbGlja2VkU2xpZGUgKGUpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgY29uc3QgcGFyYW1zID0gc3dpcGVyLnBhcmFtcztcbiAgY29uc3Qgc2xpZGUgPSAkKGUudGFyZ2V0KS5jbG9zZXN0KGAuJHtwYXJhbXMuc2xpZGVDbGFzc31gKVswXTtcbiAgbGV0IHNsaWRlRm91bmQgPSBmYWxzZTtcbiAgaWYgKHNsaWRlKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzd2lwZXIuc2xpZGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBpZiAoc3dpcGVyLnNsaWRlc1tpXSA9PT0gc2xpZGUpIHNsaWRlRm91bmQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChzbGlkZSAmJiBzbGlkZUZvdW5kKSB7XG4gICAgc3dpcGVyLmNsaWNrZWRTbGlkZSA9IHNsaWRlO1xuICAgIGlmIChzd2lwZXIudmlydHVhbCAmJiBzd2lwZXIucGFyYW1zLnZpcnR1YWwuZW5hYmxlZCkge1xuICAgICAgc3dpcGVyLmNsaWNrZWRJbmRleCA9IHBhcnNlSW50KCQoc2xpZGUpLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JyksIDEwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLmNsaWNrZWRJbmRleCA9ICQoc2xpZGUpLmluZGV4KCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHN3aXBlci5jbGlja2VkU2xpZGUgPSB1bmRlZmluZWQ7XG4gICAgc3dpcGVyLmNsaWNrZWRJbmRleCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHBhcmFtcy5zbGlkZVRvQ2xpY2tlZFNsaWRlICYmIHN3aXBlci5jbGlja2VkSW5kZXggIT09IHVuZGVmaW5lZCAmJiBzd2lwZXIuY2xpY2tlZEluZGV4ICE9PSBzd2lwZXIuYWN0aXZlSW5kZXgpIHtcbiAgICBzd2lwZXIuc2xpZGVUb0NsaWNrZWRTbGlkZSgpO1xuICB9XG59XG5cbnZhciB1cGRhdGUgPSB7XG4gIHVwZGF0ZVNpemUsXG4gIHVwZGF0ZVNsaWRlcyxcbiAgdXBkYXRlQXV0b0hlaWdodCxcbiAgdXBkYXRlU2xpZGVzT2Zmc2V0LFxuICB1cGRhdGVTbGlkZXNQcm9ncmVzcyxcbiAgdXBkYXRlUHJvZ3Jlc3MsXG4gIHVwZGF0ZVNsaWRlc0NsYXNzZXMsXG4gIHVwZGF0ZUFjdGl2ZUluZGV4LFxuICB1cGRhdGVDbGlja2VkU2xpZGUsXG59O1xuXG5mdW5jdGlvbiBnZXRUcmFuc2xhdGUgKGF4aXMgPSB0aGlzLmlzSG9yaXpvbnRhbCgpID8gJ3gnIDogJ3knKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG5cbiAgY29uc3Qge1xuICAgIHBhcmFtcywgcnRsVHJhbnNsYXRlOiBydGwsIHRyYW5zbGF0ZSwgJHdyYXBwZXJFbCxcbiAgfSA9IHN3aXBlcjtcblxuICBpZiAocGFyYW1zLnZpcnR1YWxUcmFuc2xhdGUpIHtcbiAgICByZXR1cm4gcnRsID8gLXRyYW5zbGF0ZSA6IHRyYW5zbGF0ZTtcbiAgfVxuICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICByZXR1cm4gdHJhbnNsYXRlO1xuICB9XG5cbiAgbGV0IGN1cnJlbnRUcmFuc2xhdGUgPSBVdGlscy5nZXRUcmFuc2xhdGUoJHdyYXBwZXJFbFswXSwgYXhpcyk7XG4gIGlmIChydGwpIGN1cnJlbnRUcmFuc2xhdGUgPSAtY3VycmVudFRyYW5zbGF0ZTtcblxuICByZXR1cm4gY3VycmVudFRyYW5zbGF0ZSB8fCAwO1xufVxuXG5mdW5jdGlvbiBzZXRUcmFuc2xhdGUgKHRyYW5zbGF0ZSwgYnlDb250cm9sbGVyKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHtcbiAgICBydGxUcmFuc2xhdGU6IHJ0bCwgcGFyYW1zLCAkd3JhcHBlckVsLCB3cmFwcGVyRWwsIHByb2dyZXNzLFxuICB9ID0gc3dpcGVyO1xuICBsZXQgeCA9IDA7XG4gIGxldCB5ID0gMDtcbiAgY29uc3QgeiA9IDA7XG5cbiAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSkge1xuICAgIHggPSBydGwgPyAtdHJhbnNsYXRlIDogdHJhbnNsYXRlO1xuICB9IGVsc2Uge1xuICAgIHkgPSB0cmFuc2xhdGU7XG4gIH1cblxuICBpZiAocGFyYW1zLnJvdW5kTGVuZ3Rocykge1xuICAgIHggPSBNYXRoLmZsb29yKHgpO1xuICAgIHkgPSBNYXRoLmZsb29yKHkpO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgd3JhcHBlckVsW3N3aXBlci5pc0hvcml6b250YWwoKSA/ICdzY3JvbGxMZWZ0JyA6ICdzY3JvbGxUb3AnXSA9IHN3aXBlci5pc0hvcml6b250YWwoKSA/IC14IDogLXk7XG4gIH0gZWxzZSBpZiAoIXBhcmFtcy52aXJ0dWFsVHJhbnNsYXRlKSB7XG4gICAgJHdyYXBwZXJFbC50cmFuc2Zvcm0oYHRyYW5zbGF0ZTNkKCR7eH1weCwgJHt5fXB4LCAke3p9cHgpYCk7XG4gIH1cbiAgc3dpcGVyLnByZXZpb3VzVHJhbnNsYXRlID0gc3dpcGVyLnRyYW5zbGF0ZTtcbiAgc3dpcGVyLnRyYW5zbGF0ZSA9IHN3aXBlci5pc0hvcml6b250YWwoKSA/IHggOiB5O1xuXG4gIC8vIENoZWNrIGlmIHdlIG5lZWQgdG8gdXBkYXRlIHByb2dyZXNzXG4gIGxldCBuZXdQcm9ncmVzcztcbiAgY29uc3QgdHJhbnNsYXRlc0RpZmYgPSBzd2lwZXIubWF4VHJhbnNsYXRlKCkgLSBzd2lwZXIubWluVHJhbnNsYXRlKCk7XG4gIGlmICh0cmFuc2xhdGVzRGlmZiA9PT0gMCkge1xuICAgIG5ld1Byb2dyZXNzID0gMDtcbiAgfSBlbHNlIHtcbiAgICBuZXdQcm9ncmVzcyA9ICh0cmFuc2xhdGUgLSBzd2lwZXIubWluVHJhbnNsYXRlKCkpIC8gKHRyYW5zbGF0ZXNEaWZmKTtcbiAgfVxuICBpZiAobmV3UHJvZ3Jlc3MgIT09IHByb2dyZXNzKSB7XG4gICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKHRyYW5zbGF0ZSk7XG4gIH1cblxuICBzd2lwZXIuZW1pdCgnc2V0VHJhbnNsYXRlJywgc3dpcGVyLnRyYW5zbGF0ZSwgYnlDb250cm9sbGVyKTtcbn1cblxuZnVuY3Rpb24gbWluVHJhbnNsYXRlICgpIHtcbiAgcmV0dXJuICgtdGhpcy5zbmFwR3JpZFswXSk7XG59XG5cbmZ1bmN0aW9uIG1heFRyYW5zbGF0ZSAoKSB7XG4gIHJldHVybiAoLXRoaXMuc25hcEdyaWRbdGhpcy5zbmFwR3JpZC5sZW5ndGggLSAxXSk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZVRvICh0cmFuc2xhdGUgPSAwLCBzcGVlZCA9IHRoaXMucGFyYW1zLnNwZWVkLCBydW5DYWxsYmFja3MgPSB0cnVlLCB0cmFuc2xhdGVCb3VuZHMgPSB0cnVlLCBpbnRlcm5hbCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuXG4gIGNvbnN0IHtcbiAgICBwYXJhbXMsXG4gICAgd3JhcHBlckVsLFxuICB9ID0gc3dpcGVyO1xuXG4gIGlmIChzd2lwZXIuYW5pbWF0aW5nICYmIHBhcmFtcy5wcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb24pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBjb25zdCBtaW5UcmFuc2xhdGUgPSBzd2lwZXIubWluVHJhbnNsYXRlKCk7XG4gIGNvbnN0IG1heFRyYW5zbGF0ZSA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKTtcbiAgbGV0IG5ld1RyYW5zbGF0ZTtcbiAgaWYgKHRyYW5zbGF0ZUJvdW5kcyAmJiB0cmFuc2xhdGUgPiBtaW5UcmFuc2xhdGUpIG5ld1RyYW5zbGF0ZSA9IG1pblRyYW5zbGF0ZTtcbiAgZWxzZSBpZiAodHJhbnNsYXRlQm91bmRzICYmIHRyYW5zbGF0ZSA8IG1heFRyYW5zbGF0ZSkgbmV3VHJhbnNsYXRlID0gbWF4VHJhbnNsYXRlO1xuICBlbHNlIG5ld1RyYW5zbGF0ZSA9IHRyYW5zbGF0ZTtcblxuICAvLyBVcGRhdGUgcHJvZ3Jlc3NcbiAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKG5ld1RyYW5zbGF0ZSk7XG5cbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgY29uc3QgaXNIID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpO1xuICAgIGlmIChzcGVlZCA9PT0gMCkge1xuICAgICAgd3JhcHBlckVsW2lzSCA/ICdzY3JvbGxMZWZ0JyA6ICdzY3JvbGxUb3AnXSA9IC1uZXdUcmFuc2xhdGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgaWYgKHdyYXBwZXJFbC5zY3JvbGxUbykge1xuICAgICAgICB3cmFwcGVyRWwuc2Nyb2xsVG8oe1xuICAgICAgICAgIFtpc0ggPyAnbGVmdCcgOiAndG9wJ106IC1uZXdUcmFuc2xhdGUsXG4gICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnLFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdyYXBwZXJFbFtpc0ggPyAnc2Nyb2xsTGVmdCcgOiAnc2Nyb2xsVG9wJ10gPSAtbmV3VHJhbnNsYXRlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmIChzcGVlZCA9PT0gMCkge1xuICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKDApO1xuICAgIHN3aXBlci5zZXRUcmFuc2xhdGUobmV3VHJhbnNsYXRlKTtcbiAgICBpZiAocnVuQ2FsbGJhY2tzKSB7XG4gICAgICBzd2lwZXIuZW1pdCgnYmVmb3JlVHJhbnNpdGlvblN0YXJ0Jywgc3BlZWQsIGludGVybmFsKTtcbiAgICAgIHN3aXBlci5lbWl0KCd0cmFuc2l0aW9uRW5kJyk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKHNwZWVkKTtcbiAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKG5ld1RyYW5zbGF0ZSk7XG4gICAgaWYgKHJ1bkNhbGxiYWNrcykge1xuICAgICAgc3dpcGVyLmVtaXQoJ2JlZm9yZVRyYW5zaXRpb25TdGFydCcsIHNwZWVkLCBpbnRlcm5hbCk7XG4gICAgICBzd2lwZXIuZW1pdCgndHJhbnNpdGlvblN0YXJ0Jyk7XG4gICAgfVxuICAgIGlmICghc3dpcGVyLmFuaW1hdGluZykge1xuICAgICAgc3dpcGVyLmFuaW1hdGluZyA9IHRydWU7XG4gICAgICBpZiAoIXN3aXBlci5vblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpIHtcbiAgICAgICAgc3dpcGVyLm9uVHJhbnNsYXRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoZSkge1xuICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQpIHJldHVybjtcbiAgICAgICAgICBpZiAoZS50YXJnZXQgIT09IHRoaXMpIHJldHVybjtcbiAgICAgICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgc3dpcGVyLm9uVHJhbnNsYXRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCk7XG4gICAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0ucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0VHJhbnNpdGlvbkVuZCcsIHN3aXBlci5vblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpO1xuICAgICAgICAgIHN3aXBlci5vblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQgPSBudWxsO1xuICAgICAgICAgIGRlbGV0ZSBzd2lwZXIub25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kO1xuICAgICAgICAgIGlmIChydW5DYWxsYmFja3MpIHtcbiAgICAgICAgICAgIHN3aXBlci5lbWl0KCd0cmFuc2l0aW9uRW5kJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0uYWRkRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIHN3aXBlci5vblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpO1xuICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0uYWRkRXZlbnRMaXN0ZW5lcignd2Via2l0VHJhbnNpdGlvbkVuZCcsIHN3aXBlci5vblRyYW5zbGF0ZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG52YXIgdHJhbnNsYXRlID0ge1xuICBnZXRUcmFuc2xhdGUsXG4gIHNldFRyYW5zbGF0ZSxcbiAgbWluVHJhbnNsYXRlLFxuICBtYXhUcmFuc2xhdGUsXG4gIHRyYW5zbGF0ZVRvLFxufTtcblxuZnVuY3Rpb24gc2V0VHJhbnNpdGlvbiAoZHVyYXRpb24sIGJ5Q29udHJvbGxlcikge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuXG4gIGlmICghc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgc3dpcGVyLiR3cmFwcGVyRWwudHJhbnNpdGlvbihkdXJhdGlvbik7XG4gIH1cblxuICBzd2lwZXIuZW1pdCgnc2V0VHJhbnNpdGlvbicsIGR1cmF0aW9uLCBieUNvbnRyb2xsZXIpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2l0aW9uU3RhcnQgKHJ1bkNhbGxiYWNrcyA9IHRydWUsIGRpcmVjdGlvbikge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCB7IGFjdGl2ZUluZGV4LCBwYXJhbXMsIHByZXZpb3VzSW5kZXggfSA9IHN3aXBlcjtcbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSByZXR1cm47XG4gIGlmIChwYXJhbXMuYXV0b0hlaWdodCkge1xuICAgIHN3aXBlci51cGRhdGVBdXRvSGVpZ2h0KCk7XG4gIH1cblxuICBsZXQgZGlyID0gZGlyZWN0aW9uO1xuICBpZiAoIWRpcikge1xuICAgIGlmIChhY3RpdmVJbmRleCA+IHByZXZpb3VzSW5kZXgpIGRpciA9ICduZXh0JztcbiAgICBlbHNlIGlmIChhY3RpdmVJbmRleCA8IHByZXZpb3VzSW5kZXgpIGRpciA9ICdwcmV2JztcbiAgICBlbHNlIGRpciA9ICdyZXNldCc7XG4gIH1cblxuICBzd2lwZXIuZW1pdCgndHJhbnNpdGlvblN0YXJ0Jyk7XG5cbiAgaWYgKHJ1bkNhbGxiYWNrcyAmJiBhY3RpdmVJbmRleCAhPT0gcHJldmlvdXNJbmRleCkge1xuICAgIGlmIChkaXIgPT09ICdyZXNldCcpIHtcbiAgICAgIHN3aXBlci5lbWl0KCdzbGlkZVJlc2V0VHJhbnNpdGlvblN0YXJ0Jyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHN3aXBlci5lbWl0KCdzbGlkZUNoYW5nZVRyYW5zaXRpb25TdGFydCcpO1xuICAgIGlmIChkaXIgPT09ICduZXh0Jykge1xuICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlTmV4dFRyYW5zaXRpb25TdGFydCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIuZW1pdCgnc2xpZGVQcmV2VHJhbnNpdGlvblN0YXJ0Jyk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHRyYW5zaXRpb25FbmQkMSAocnVuQ2FsbGJhY2tzID0gdHJ1ZSwgZGlyZWN0aW9uKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHsgYWN0aXZlSW5kZXgsIHByZXZpb3VzSW5kZXgsIHBhcmFtcyB9ID0gc3dpcGVyO1xuICBzd2lwZXIuYW5pbWF0aW5nID0gZmFsc2U7XG4gIGlmIChwYXJhbXMuY3NzTW9kZSkgcmV0dXJuO1xuICBzd2lwZXIuc2V0VHJhbnNpdGlvbigwKTtcblxuICBsZXQgZGlyID0gZGlyZWN0aW9uO1xuICBpZiAoIWRpcikge1xuICAgIGlmIChhY3RpdmVJbmRleCA+IHByZXZpb3VzSW5kZXgpIGRpciA9ICduZXh0JztcbiAgICBlbHNlIGlmIChhY3RpdmVJbmRleCA8IHByZXZpb3VzSW5kZXgpIGRpciA9ICdwcmV2JztcbiAgICBlbHNlIGRpciA9ICdyZXNldCc7XG4gIH1cblxuICBzd2lwZXIuZW1pdCgndHJhbnNpdGlvbkVuZCcpO1xuXG4gIGlmIChydW5DYWxsYmFja3MgJiYgYWN0aXZlSW5kZXggIT09IHByZXZpb3VzSW5kZXgpIHtcbiAgICBpZiAoZGlyID09PSAncmVzZXQnKSB7XG4gICAgICBzd2lwZXIuZW1pdCgnc2xpZGVSZXNldFRyYW5zaXRpb25FbmQnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc3dpcGVyLmVtaXQoJ3NsaWRlQ2hhbmdlVHJhbnNpdGlvbkVuZCcpO1xuICAgIGlmIChkaXIgPT09ICduZXh0Jykge1xuICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlTmV4dFRyYW5zaXRpb25FbmQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLmVtaXQoJ3NsaWRlUHJldlRyYW5zaXRpb25FbmQnKTtcbiAgICB9XG4gIH1cbn1cblxudmFyIHRyYW5zaXRpb24kMSA9IHtcbiAgc2V0VHJhbnNpdGlvbixcbiAgdHJhbnNpdGlvblN0YXJ0LFxuICB0cmFuc2l0aW9uRW5kOiB0cmFuc2l0aW9uRW5kJDEsXG59O1xuXG5mdW5jdGlvbiBzbGlkZVRvIChpbmRleCA9IDAsIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQsIHJ1bkNhbGxiYWNrcyA9IHRydWUsIGludGVybmFsKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGxldCBzbGlkZUluZGV4ID0gaW5kZXg7XG4gIGlmIChzbGlkZUluZGV4IDwgMCkgc2xpZGVJbmRleCA9IDA7XG5cbiAgY29uc3Qge1xuICAgIHBhcmFtcywgc25hcEdyaWQsIHNsaWRlc0dyaWQsIHByZXZpb3VzSW5kZXgsIGFjdGl2ZUluZGV4LCBydGxUcmFuc2xhdGU6IHJ0bCwgd3JhcHBlckVsLFxuICB9ID0gc3dpcGVyO1xuICBpZiAoc3dpcGVyLmFuaW1hdGluZyAmJiBwYXJhbXMucHJldmVudEludGVyYWN0aW9uT25UcmFuc2l0aW9uKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3Qgc2tpcCA9IE1hdGgubWluKHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwLCBzbGlkZUluZGV4KTtcbiAgbGV0IHNuYXBJbmRleCA9IHNraXAgKyBNYXRoLmZsb29yKChzbGlkZUluZGV4IC0gc2tpcCkgLyBzd2lwZXIucGFyYW1zLnNsaWRlc1Blckdyb3VwKTtcbiAgaWYgKHNuYXBJbmRleCA+PSBzbmFwR3JpZC5sZW5ndGgpIHNuYXBJbmRleCA9IHNuYXBHcmlkLmxlbmd0aCAtIDE7XG5cbiAgaWYgKChhY3RpdmVJbmRleCB8fCBwYXJhbXMuaW5pdGlhbFNsaWRlIHx8IDApID09PSAocHJldmlvdXNJbmRleCB8fCAwKSAmJiBydW5DYWxsYmFja3MpIHtcbiAgICBzd2lwZXIuZW1pdCgnYmVmb3JlU2xpZGVDaGFuZ2VTdGFydCcpO1xuICB9XG5cbiAgY29uc3QgdHJhbnNsYXRlID0gLXNuYXBHcmlkW3NuYXBJbmRleF07XG5cbiAgLy8gVXBkYXRlIHByb2dyZXNzXG4gIHN3aXBlci51cGRhdGVQcm9ncmVzcyh0cmFuc2xhdGUpO1xuXG4gIC8vIE5vcm1hbGl6ZSBzbGlkZUluZGV4XG4gIGlmIChwYXJhbXMubm9ybWFsaXplU2xpZGVJbmRleCkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2xpZGVzR3JpZC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKC1NYXRoLmZsb29yKHRyYW5zbGF0ZSAqIDEwMCkgPj0gTWF0aC5mbG9vcihzbGlkZXNHcmlkW2ldICogMTAwKSkge1xuICAgICAgICBzbGlkZUluZGV4ID0gaTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLy8gRGlyZWN0aW9ucyBsb2Nrc1xuICBpZiAoc3dpcGVyLmluaXRpYWxpemVkICYmIHNsaWRlSW5kZXggIT09IGFjdGl2ZUluZGV4KSB7XG4gICAgaWYgKCFzd2lwZXIuYWxsb3dTbGlkZU5leHQgJiYgdHJhbnNsYXRlIDwgc3dpcGVyLnRyYW5zbGF0ZSAmJiB0cmFuc2xhdGUgPCBzd2lwZXIubWluVHJhbnNsYXRlKCkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCFzd2lwZXIuYWxsb3dTbGlkZVByZXYgJiYgdHJhbnNsYXRlID4gc3dpcGVyLnRyYW5zbGF0ZSAmJiB0cmFuc2xhdGUgPiBzd2lwZXIubWF4VHJhbnNsYXRlKCkpIHtcbiAgICAgIGlmICgoYWN0aXZlSW5kZXggfHwgMCkgIT09IHNsaWRlSW5kZXgpIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBsZXQgZGlyZWN0aW9uO1xuICBpZiAoc2xpZGVJbmRleCA+IGFjdGl2ZUluZGV4KSBkaXJlY3Rpb24gPSAnbmV4dCc7XG4gIGVsc2UgaWYgKHNsaWRlSW5kZXggPCBhY3RpdmVJbmRleCkgZGlyZWN0aW9uID0gJ3ByZXYnO1xuICBlbHNlIGRpcmVjdGlvbiA9ICdyZXNldCc7XG5cblxuICAvLyBVcGRhdGUgSW5kZXhcbiAgaWYgKChydGwgJiYgLXRyYW5zbGF0ZSA9PT0gc3dpcGVyLnRyYW5zbGF0ZSkgfHwgKCFydGwgJiYgdHJhbnNsYXRlID09PSBzd2lwZXIudHJhbnNsYXRlKSkge1xuICAgIHN3aXBlci51cGRhdGVBY3RpdmVJbmRleChzbGlkZUluZGV4KTtcbiAgICAvLyBVcGRhdGUgSGVpZ2h0XG4gICAgaWYgKHBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgICBzd2lwZXIudXBkYXRlQXV0b0hlaWdodCgpO1xuICAgIH1cbiAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICAgIGlmIChwYXJhbXMuZWZmZWN0ICE9PSAnc2xpZGUnKSB7XG4gICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKHRyYW5zbGF0ZSk7XG4gICAgfVxuICAgIGlmIChkaXJlY3Rpb24gIT09ICdyZXNldCcpIHtcbiAgICAgIHN3aXBlci50cmFuc2l0aW9uU3RhcnQocnVuQ2FsbGJhY2tzLCBkaXJlY3Rpb24pO1xuICAgICAgc3dpcGVyLnRyYW5zaXRpb25FbmQocnVuQ2FsbGJhY2tzLCBkaXJlY3Rpb24pO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgY29uc3QgaXNIID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpO1xuICAgIGxldCB0ID0gLXRyYW5zbGF0ZTtcbiAgICBpZiAocnRsKSB7XG4gICAgICB0ID0gd3JhcHBlckVsLnNjcm9sbFdpZHRoIC0gd3JhcHBlckVsLm9mZnNldFdpZHRoIC0gdDtcbiAgICB9XG4gICAgaWYgKHNwZWVkID09PSAwKSB7XG4gICAgICB3cmFwcGVyRWxbaXNIID8gJ3Njcm9sbExlZnQnIDogJ3Njcm9sbFRvcCddID0gdDtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICBpZiAod3JhcHBlckVsLnNjcm9sbFRvKSB7XG4gICAgICAgIHdyYXBwZXJFbC5zY3JvbGxUbyh7XG4gICAgICAgICAgW2lzSCA/ICdsZWZ0JyA6ICd0b3AnXTogdCxcbiAgICAgICAgICBiZWhhdmlvcjogJ3Ntb290aCcsXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd3JhcHBlckVsW2lzSCA/ICdzY3JvbGxMZWZ0JyA6ICdzY3JvbGxUb3AnXSA9IHQ7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHNwZWVkID09PSAwKSB7XG4gICAgc3dpcGVyLnNldFRyYW5zaXRpb24oMCk7XG4gICAgc3dpcGVyLnNldFRyYW5zbGF0ZSh0cmFuc2xhdGUpO1xuICAgIHN3aXBlci51cGRhdGVBY3RpdmVJbmRleChzbGlkZUluZGV4KTtcbiAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICAgIHN3aXBlci5lbWl0KCdiZWZvcmVUcmFuc2l0aW9uU3RhcnQnLCBzcGVlZCwgaW50ZXJuYWwpO1xuICAgIHN3aXBlci50cmFuc2l0aW9uU3RhcnQocnVuQ2FsbGJhY2tzLCBkaXJlY3Rpb24pO1xuICAgIHN3aXBlci50cmFuc2l0aW9uRW5kKHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKTtcbiAgfSBlbHNlIHtcbiAgICBzd2lwZXIuc2V0VHJhbnNpdGlvbihzcGVlZCk7XG4gICAgc3dpcGVyLnNldFRyYW5zbGF0ZSh0cmFuc2xhdGUpO1xuICAgIHN3aXBlci51cGRhdGVBY3RpdmVJbmRleChzbGlkZUluZGV4KTtcbiAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICAgIHN3aXBlci5lbWl0KCdiZWZvcmVUcmFuc2l0aW9uU3RhcnQnLCBzcGVlZCwgaW50ZXJuYWwpO1xuICAgIHN3aXBlci50cmFuc2l0aW9uU3RhcnQocnVuQ2FsbGJhY2tzLCBkaXJlY3Rpb24pO1xuICAgIGlmICghc3dpcGVyLmFuaW1hdGluZykge1xuICAgICAgc3dpcGVyLmFuaW1hdGluZyA9IHRydWU7XG4gICAgICBpZiAoIXN3aXBlci5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCkge1xuICAgICAgICBzd2lwZXIub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQgPSBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kKGUpIHtcbiAgICAgICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkKSByZXR1cm47XG4gICAgICAgICAgaWYgKGUudGFyZ2V0ICE9PSB0aGlzKSByZXR1cm47XG4gICAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0ucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIHN3aXBlci5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCk7XG4gICAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0ucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0VHJhbnNpdGlvbkVuZCcsIHN3aXBlci5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCk7XG4gICAgICAgICAgc3dpcGVyLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kID0gbnVsbDtcbiAgICAgICAgICBkZWxldGUgc3dpcGVyLm9uU2xpZGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kO1xuICAgICAgICAgIHN3aXBlci50cmFuc2l0aW9uRW5kKHJ1bkNhbGxiYWNrcywgZGlyZWN0aW9uKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBzd2lwZXIub25TbGlkZVRvV3JhcHBlclRyYW5zaXRpb25FbmQpO1xuICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0uYWRkRXZlbnRMaXN0ZW5lcignd2Via2l0VHJhbnNpdGlvbkVuZCcsIHN3aXBlci5vblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHNsaWRlVG9Mb29wIChpbmRleCA9IDAsIHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQsIHJ1bkNhbGxiYWNrcyA9IHRydWUsIGludGVybmFsKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGxldCBuZXdJbmRleCA9IGluZGV4O1xuICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgbmV3SW5kZXggKz0gc3dpcGVyLmxvb3BlZFNsaWRlcztcbiAgfVxuXG4gIHJldHVybiBzd2lwZXIuc2xpZGVUbyhuZXdJbmRleCwgc3BlZWQsIHJ1bkNhbGxiYWNrcywgaW50ZXJuYWwpO1xufVxuXG4vKiBlc2xpbnQgbm8tdW51c2VkLXZhcnM6IFwib2ZmXCIgKi9cbmZ1bmN0aW9uIHNsaWRlTmV4dCAoc3BlZWQgPSB0aGlzLnBhcmFtcy5zcGVlZCwgcnVuQ2FsbGJhY2tzID0gdHJ1ZSwgaW50ZXJuYWwpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgY29uc3QgeyBwYXJhbXMsIGFuaW1hdGluZyB9ID0gc3dpcGVyO1xuICBjb25zdCBpbmNyZW1lbnQgPSBzd2lwZXIuYWN0aXZlSW5kZXggPCBwYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwID8gMSA6IHBhcmFtcy5zbGlkZXNQZXJHcm91cDtcbiAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgaWYgKGFuaW1hdGluZykgcmV0dXJuIGZhbHNlO1xuICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgc3dpcGVyLl9jbGllbnRMZWZ0ID0gc3dpcGVyLiR3cmFwcGVyRWxbMF0uY2xpZW50TGVmdDtcbiAgfVxuICByZXR1cm4gc3dpcGVyLnNsaWRlVG8oc3dpcGVyLmFjdGl2ZUluZGV4ICsgaW5jcmVtZW50LCBzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCk7XG59XG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogXCJvZmZcIiAqL1xuZnVuY3Rpb24gc2xpZGVQcmV2IChzcGVlZCA9IHRoaXMucGFyYW1zLnNwZWVkLCBydW5DYWxsYmFja3MgPSB0cnVlLCBpbnRlcm5hbCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCB7XG4gICAgcGFyYW1zLCBhbmltYXRpbmcsIHNuYXBHcmlkLCBzbGlkZXNHcmlkLCBydGxUcmFuc2xhdGUsXG4gIH0gPSBzd2lwZXI7XG5cbiAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgaWYgKGFuaW1hdGluZykgcmV0dXJuIGZhbHNlO1xuICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgc3dpcGVyLl9jbGllbnRMZWZ0ID0gc3dpcGVyLiR3cmFwcGVyRWxbMF0uY2xpZW50TGVmdDtcbiAgfVxuICBjb25zdCB0cmFuc2xhdGUgPSBydGxUcmFuc2xhdGUgPyBzd2lwZXIudHJhbnNsYXRlIDogLXN3aXBlci50cmFuc2xhdGU7XG4gIGZ1bmN0aW9uIG5vcm1hbGl6ZSh2YWwpIHtcbiAgICBpZiAodmFsIDwgMCkgcmV0dXJuIC1NYXRoLmZsb29yKE1hdGguYWJzKHZhbCkpO1xuICAgIHJldHVybiBNYXRoLmZsb29yKHZhbCk7XG4gIH1cbiAgY29uc3Qgbm9ybWFsaXplZFRyYW5zbGF0ZSA9IG5vcm1hbGl6ZSh0cmFuc2xhdGUpO1xuICBjb25zdCBub3JtYWxpemVkU25hcEdyaWQgPSBzbmFwR3JpZC5tYXAoKHZhbCkgPT4gbm9ybWFsaXplKHZhbCkpO1xuICBzbGlkZXNHcmlkLm1hcCgodmFsKSA9PiBub3JtYWxpemUodmFsKSk7XG5cbiAgc25hcEdyaWRbbm9ybWFsaXplZFNuYXBHcmlkLmluZGV4T2Yobm9ybWFsaXplZFRyYW5zbGF0ZSldO1xuICBsZXQgcHJldlNuYXAgPSBzbmFwR3JpZFtub3JtYWxpemVkU25hcEdyaWQuaW5kZXhPZihub3JtYWxpemVkVHJhbnNsYXRlKSAtIDFdO1xuICBpZiAodHlwZW9mIHByZXZTbmFwID09PSAndW5kZWZpbmVkJyAmJiBwYXJhbXMuY3NzTW9kZSkge1xuICAgIHNuYXBHcmlkLmZvckVhY2goKHNuYXApID0+IHtcbiAgICAgIGlmICghcHJldlNuYXAgJiYgbm9ybWFsaXplZFRyYW5zbGF0ZSA+PSBzbmFwKSBwcmV2U25hcCA9IHNuYXA7XG4gICAgfSk7XG4gIH1cbiAgbGV0IHByZXZJbmRleDtcbiAgaWYgKHR5cGVvZiBwcmV2U25hcCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBwcmV2SW5kZXggPSBzbGlkZXNHcmlkLmluZGV4T2YocHJldlNuYXApO1xuICAgIGlmIChwcmV2SW5kZXggPCAwKSBwcmV2SW5kZXggPSBzd2lwZXIuYWN0aXZlSW5kZXggLSAxO1xuICB9XG4gIHJldHVybiBzd2lwZXIuc2xpZGVUbyhwcmV2SW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbn1cblxuLyogZXNsaW50IG5vLXVudXNlZC12YXJzOiBcIm9mZlwiICovXG5mdW5jdGlvbiBzbGlkZVJlc2V0IChzcGVlZCA9IHRoaXMucGFyYW1zLnNwZWVkLCBydW5DYWxsYmFja3MgPSB0cnVlLCBpbnRlcm5hbCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICByZXR1cm4gc3dpcGVyLnNsaWRlVG8oc3dpcGVyLmFjdGl2ZUluZGV4LCBzcGVlZCwgcnVuQ2FsbGJhY2tzLCBpbnRlcm5hbCk7XG59XG5cbi8qIGVzbGludCBuby11bnVzZWQtdmFyczogXCJvZmZcIiAqL1xuZnVuY3Rpb24gc2xpZGVUb0Nsb3Nlc3QgKHNwZWVkID0gdGhpcy5wYXJhbXMuc3BlZWQsIHJ1bkNhbGxiYWNrcyA9IHRydWUsIGludGVybmFsLCB0aHJlc2hvbGQgPSAwLjUpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgbGV0IGluZGV4ID0gc3dpcGVyLmFjdGl2ZUluZGV4O1xuICBjb25zdCBza2lwID0gTWF0aC5taW4oc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cFNraXAsIGluZGV4KTtcbiAgY29uc3Qgc25hcEluZGV4ID0gc2tpcCArIE1hdGguZmxvb3IoKGluZGV4IC0gc2tpcCkgLyBzd2lwZXIucGFyYW1zLnNsaWRlc1Blckdyb3VwKTtcblxuICBjb25zdCB0cmFuc2xhdGUgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gc3dpcGVyLnRyYW5zbGF0ZSA6IC1zd2lwZXIudHJhbnNsYXRlO1xuXG4gIGlmICh0cmFuc2xhdGUgPj0gc3dpcGVyLnNuYXBHcmlkW3NuYXBJbmRleF0pIHtcbiAgICAvLyBUaGUgY3VycmVudCB0cmFuc2xhdGUgaXMgb24gb3IgYWZ0ZXIgdGhlIGN1cnJlbnQgc25hcCBpbmRleCwgc28gdGhlIGNob2ljZVxuICAgIC8vIGlzIGJldHdlZW4gdGhlIGN1cnJlbnQgaW5kZXggYW5kIHRoZSBvbmUgYWZ0ZXIgaXQuXG4gICAgY29uc3QgY3VycmVudFNuYXAgPSBzd2lwZXIuc25hcEdyaWRbc25hcEluZGV4XTtcbiAgICBjb25zdCBuZXh0U25hcCA9IHN3aXBlci5zbmFwR3JpZFtzbmFwSW5kZXggKyAxXTtcbiAgICBpZiAoKHRyYW5zbGF0ZSAtIGN1cnJlbnRTbmFwKSA+IChuZXh0U25hcCAtIGN1cnJlbnRTbmFwKSAqIHRocmVzaG9sZCkge1xuICAgICAgaW5kZXggKz0gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gVGhlIGN1cnJlbnQgdHJhbnNsYXRlIGlzIGJlZm9yZSB0aGUgY3VycmVudCBzbmFwIGluZGV4LCBzbyB0aGUgY2hvaWNlXG4gICAgLy8gaXMgYmV0d2VlbiB0aGUgY3VycmVudCBpbmRleCBhbmQgdGhlIG9uZSBiZWZvcmUgaXQuXG4gICAgY29uc3QgcHJldlNuYXAgPSBzd2lwZXIuc25hcEdyaWRbc25hcEluZGV4IC0gMV07XG4gICAgY29uc3QgY3VycmVudFNuYXAgPSBzd2lwZXIuc25hcEdyaWRbc25hcEluZGV4XTtcbiAgICBpZiAoKHRyYW5zbGF0ZSAtIHByZXZTbmFwKSA8PSAoY3VycmVudFNuYXAgLSBwcmV2U25hcCkgKiB0aHJlc2hvbGQpIHtcbiAgICAgIGluZGV4IC09IHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXA7XG4gICAgfVxuICB9XG4gIGluZGV4ID0gTWF0aC5tYXgoaW5kZXgsIDApO1xuICBpbmRleCA9IE1hdGgubWluKGluZGV4LCBzd2lwZXIuc2xpZGVzR3JpZC5sZW5ndGggLSAxKTtcblxuICByZXR1cm4gc3dpcGVyLnNsaWRlVG8oaW5kZXgsIHNwZWVkLCBydW5DYWxsYmFja3MsIGludGVybmFsKTtcbn1cblxuZnVuY3Rpb24gc2xpZGVUb0NsaWNrZWRTbGlkZSAoKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHsgcGFyYW1zLCAkd3JhcHBlckVsIH0gPSBzd2lwZXI7XG5cbiAgY29uc3Qgc2xpZGVzUGVyVmlldyA9IHBhcmFtcy5zbGlkZXNQZXJWaWV3ID09PSAnYXV0bycgPyBzd2lwZXIuc2xpZGVzUGVyVmlld0R5bmFtaWMoKSA6IHBhcmFtcy5zbGlkZXNQZXJWaWV3O1xuICBsZXQgc2xpZGVUb0luZGV4ID0gc3dpcGVyLmNsaWNrZWRJbmRleDtcbiAgbGV0IHJlYWxJbmRleDtcbiAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgaWYgKHN3aXBlci5hbmltYXRpbmcpIHJldHVybjtcbiAgICByZWFsSW5kZXggPSBwYXJzZUludCgkKHN3aXBlci5jbGlja2VkU2xpZGUpLmF0dHIoJ2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4JyksIDEwKTtcbiAgICBpZiAocGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICBpZiAoXG4gICAgICAgIChzbGlkZVRvSW5kZXggPCBzd2lwZXIubG9vcGVkU2xpZGVzIC0gKHNsaWRlc1BlclZpZXcgLyAyKSlcbiAgICAgICAgfHwgKHNsaWRlVG9JbmRleCA+IChzd2lwZXIuc2xpZGVzLmxlbmd0aCAtIHN3aXBlci5sb29wZWRTbGlkZXMpICsgKHNsaWRlc1BlclZpZXcgLyAyKSlcbiAgICAgICkge1xuICAgICAgICBzd2lwZXIubG9vcEZpeCgpO1xuICAgICAgICBzbGlkZVRvSW5kZXggPSAkd3JhcHBlckVsXG4gICAgICAgICAgLmNoaWxkcmVuKGAuJHtwYXJhbXMuc2xpZGVDbGFzc31bZGF0YS1zd2lwZXItc2xpZGUtaW5kZXg9XCIke3JlYWxJbmRleH1cIl06bm90KC4ke3BhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzfSlgKVxuICAgICAgICAgIC5lcSgwKVxuICAgICAgICAgIC5pbmRleCgpO1xuXG4gICAgICAgIFV0aWxzLm5leHRUaWNrKCgpID0+IHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVUbyhzbGlkZVRvSW5kZXgpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChzbGlkZVRvSW5kZXggPiBzd2lwZXIuc2xpZGVzLmxlbmd0aCAtIHNsaWRlc1BlclZpZXcpIHtcbiAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgICBzbGlkZVRvSW5kZXggPSAkd3JhcHBlckVsXG4gICAgICAgIC5jaGlsZHJlbihgLiR7cGFyYW1zLnNsaWRlQ2xhc3N9W2RhdGEtc3dpcGVyLXNsaWRlLWluZGV4PVwiJHtyZWFsSW5kZXh9XCJdOm5vdCguJHtwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzc30pYClcbiAgICAgICAgLmVxKDApXG4gICAgICAgIC5pbmRleCgpO1xuXG4gICAgICBVdGlscy5uZXh0VGljaygoKSA9PiB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKHNsaWRlVG9JbmRleCk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLnNsaWRlVG8oc2xpZGVUb0luZGV4KTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgc3dpcGVyLnNsaWRlVG8oc2xpZGVUb0luZGV4KTtcbiAgfVxufVxuXG52YXIgc2xpZGUgPSB7XG4gIHNsaWRlVG8sXG4gIHNsaWRlVG9Mb29wLFxuICBzbGlkZU5leHQsXG4gIHNsaWRlUHJldixcbiAgc2xpZGVSZXNldCxcbiAgc2xpZGVUb0Nsb3Nlc3QsXG4gIHNsaWRlVG9DbGlja2VkU2xpZGUsXG59O1xuXG5mdW5jdGlvbiBsb29wQ3JlYXRlICgpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgY29uc3QgeyBwYXJhbXMsICR3cmFwcGVyRWwgfSA9IHN3aXBlcjtcbiAgLy8gUmVtb3ZlIGR1cGxpY2F0ZWQgc2xpZGVzXG4gICR3cmFwcGVyRWwuY2hpbGRyZW4oYC4ke3BhcmFtcy5zbGlkZUNsYXNzfS4ke3BhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzfWApLnJlbW92ZSgpO1xuXG4gIGxldCBzbGlkZXMgPSAkd3JhcHBlckVsLmNoaWxkcmVuKGAuJHtwYXJhbXMuc2xpZGVDbGFzc31gKTtcblxuICBpZiAocGFyYW1zLmxvb3BGaWxsR3JvdXBXaXRoQmxhbmspIHtcbiAgICBjb25zdCBibGFua1NsaWRlc051bSA9IHBhcmFtcy5zbGlkZXNQZXJHcm91cCAtIChzbGlkZXMubGVuZ3RoICUgcGFyYW1zLnNsaWRlc1Blckdyb3VwKTtcbiAgICBpZiAoYmxhbmtTbGlkZXNOdW0gIT09IHBhcmFtcy5zbGlkZXNQZXJHcm91cCkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBibGFua1NsaWRlc051bTsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGJsYW5rTm9kZSA9ICQoZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpKS5hZGRDbGFzcyhgJHtwYXJhbXMuc2xpZGVDbGFzc30gJHtwYXJhbXMuc2xpZGVCbGFua0NsYXNzfWApO1xuICAgICAgICAkd3JhcHBlckVsLmFwcGVuZChibGFua05vZGUpO1xuICAgICAgfVxuICAgICAgc2xpZGVzID0gJHdyYXBwZXJFbC5jaGlsZHJlbihgLiR7cGFyYW1zLnNsaWRlQ2xhc3N9YCk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHBhcmFtcy5zbGlkZXNQZXJWaWV3ID09PSAnYXV0bycgJiYgIXBhcmFtcy5sb29wZWRTbGlkZXMpIHBhcmFtcy5sb29wZWRTbGlkZXMgPSBzbGlkZXMubGVuZ3RoO1xuXG4gIHN3aXBlci5sb29wZWRTbGlkZXMgPSBNYXRoLmNlaWwocGFyc2VGbG9hdChwYXJhbXMubG9vcGVkU2xpZGVzIHx8IHBhcmFtcy5zbGlkZXNQZXJWaWV3LCAxMCkpO1xuICBzd2lwZXIubG9vcGVkU2xpZGVzICs9IHBhcmFtcy5sb29wQWRkaXRpb25hbFNsaWRlcztcbiAgaWYgKHN3aXBlci5sb29wZWRTbGlkZXMgPiBzbGlkZXMubGVuZ3RoKSB7XG4gICAgc3dpcGVyLmxvb3BlZFNsaWRlcyA9IHNsaWRlcy5sZW5ndGg7XG4gIH1cblxuICBjb25zdCBwcmVwZW5kU2xpZGVzID0gW107XG4gIGNvbnN0IGFwcGVuZFNsaWRlcyA9IFtdO1xuICBzbGlkZXMuZWFjaCgoaW5kZXgsIGVsKSA9PiB7XG4gICAgY29uc3Qgc2xpZGUgPSAkKGVsKTtcbiAgICBpZiAoaW5kZXggPCBzd2lwZXIubG9vcGVkU2xpZGVzKSBhcHBlbmRTbGlkZXMucHVzaChlbCk7XG4gICAgaWYgKGluZGV4IDwgc2xpZGVzLmxlbmd0aCAmJiBpbmRleCA+PSBzbGlkZXMubGVuZ3RoIC0gc3dpcGVyLmxvb3BlZFNsaWRlcykgcHJlcGVuZFNsaWRlcy5wdXNoKGVsKTtcbiAgICBzbGlkZS5hdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcsIGluZGV4KTtcbiAgfSk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXBwZW5kU2xpZGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgJHdyYXBwZXJFbC5hcHBlbmQoJChhcHBlbmRTbGlkZXNbaV0uY2xvbmVOb2RlKHRydWUpKS5hZGRDbGFzcyhwYXJhbXMuc2xpZGVEdXBsaWNhdGVDbGFzcykpO1xuICB9XG4gIGZvciAobGV0IGkgPSBwcmVwZW5kU2xpZGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaSAtPSAxKSB7XG4gICAgJHdyYXBwZXJFbC5wcmVwZW5kKCQocHJlcGVuZFNsaWRlc1tpXS5jbG9uZU5vZGUodHJ1ZSkpLmFkZENsYXNzKHBhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbG9vcEZpeCAoKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG5cbiAgc3dpcGVyLmVtaXQoJ2JlZm9yZUxvb3BGaXgnKTtcblxuICBjb25zdCB7XG4gICAgYWN0aXZlSW5kZXgsIHNsaWRlcywgbG9vcGVkU2xpZGVzLCBhbGxvd1NsaWRlUHJldiwgYWxsb3dTbGlkZU5leHQsIHNuYXBHcmlkLCBydGxUcmFuc2xhdGU6IHJ0bCxcbiAgfSA9IHN3aXBlcjtcbiAgbGV0IG5ld0luZGV4O1xuICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSB0cnVlO1xuICBzd2lwZXIuYWxsb3dTbGlkZU5leHQgPSB0cnVlO1xuXG4gIGNvbnN0IHNuYXBUcmFuc2xhdGUgPSAtc25hcEdyaWRbYWN0aXZlSW5kZXhdO1xuICBjb25zdCBkaWZmID0gc25hcFRyYW5zbGF0ZSAtIHN3aXBlci5nZXRUcmFuc2xhdGUoKTtcblxuICAvLyBGaXggRm9yIE5lZ2F0aXZlIE92ZXJzbGlkaW5nXG4gIGlmIChhY3RpdmVJbmRleCA8IGxvb3BlZFNsaWRlcykge1xuICAgIG5ld0luZGV4ID0gKHNsaWRlcy5sZW5ndGggLSAobG9vcGVkU2xpZGVzICogMykpICsgYWN0aXZlSW5kZXg7XG4gICAgbmV3SW5kZXggKz0gbG9vcGVkU2xpZGVzO1xuICAgIGNvbnN0IHNsaWRlQ2hhbmdlZCA9IHN3aXBlci5zbGlkZVRvKG5ld0luZGV4LCAwLCBmYWxzZSwgdHJ1ZSk7XG4gICAgaWYgKHNsaWRlQ2hhbmdlZCAmJiBkaWZmICE9PSAwKSB7XG4gICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKChydGwgPyAtc3dpcGVyLnRyYW5zbGF0ZSA6IHN3aXBlci50cmFuc2xhdGUpIC0gZGlmZik7XG4gICAgfVxuICB9IGVsc2UgaWYgKGFjdGl2ZUluZGV4ID49IHNsaWRlcy5sZW5ndGggLSBsb29wZWRTbGlkZXMpIHtcbiAgICAvLyBGaXggRm9yIFBvc2l0aXZlIE92ZXJzbGlkaW5nXG4gICAgbmV3SW5kZXggPSAtc2xpZGVzLmxlbmd0aCArIGFjdGl2ZUluZGV4ICsgbG9vcGVkU2xpZGVzO1xuICAgIG5ld0luZGV4ICs9IGxvb3BlZFNsaWRlcztcbiAgICBjb25zdCBzbGlkZUNoYW5nZWQgPSBzd2lwZXIuc2xpZGVUbyhuZXdJbmRleCwgMCwgZmFsc2UsIHRydWUpO1xuICAgIGlmIChzbGlkZUNoYW5nZWQgJiYgZGlmZiAhPT0gMCkge1xuICAgICAgc3dpcGVyLnNldFRyYW5zbGF0ZSgocnRsID8gLXN3aXBlci50cmFuc2xhdGUgOiBzd2lwZXIudHJhbnNsYXRlKSAtIGRpZmYpO1xuICAgIH1cbiAgfVxuICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSBhbGxvd1NsaWRlUHJldjtcbiAgc3dpcGVyLmFsbG93U2xpZGVOZXh0ID0gYWxsb3dTbGlkZU5leHQ7XG5cbiAgc3dpcGVyLmVtaXQoJ2xvb3BGaXgnKTtcbn1cblxuZnVuY3Rpb24gbG9vcERlc3Ryb3kgKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCB7ICR3cmFwcGVyRWwsIHBhcmFtcywgc2xpZGVzIH0gPSBzd2lwZXI7XG4gICR3cmFwcGVyRWwuY2hpbGRyZW4oYC4ke3BhcmFtcy5zbGlkZUNsYXNzfS4ke3BhcmFtcy5zbGlkZUR1cGxpY2F0ZUNsYXNzfSwuJHtwYXJhbXMuc2xpZGVDbGFzc30uJHtwYXJhbXMuc2xpZGVCbGFua0NsYXNzfWApLnJlbW92ZSgpO1xuICBzbGlkZXMucmVtb3ZlQXR0cignZGF0YS1zd2lwZXItc2xpZGUtaW5kZXgnKTtcbn1cblxudmFyIGxvb3AgPSB7XG4gIGxvb3BDcmVhdGUsXG4gIGxvb3BGaXgsXG4gIGxvb3BEZXN0cm95LFxufTtcblxuZnVuY3Rpb24gc2V0R3JhYkN1cnNvciAobW92aW5nKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGlmIChTdXBwb3J0LnRvdWNoIHx8ICFzd2lwZXIucGFyYW1zLnNpbXVsYXRlVG91Y2ggfHwgKHN3aXBlci5wYXJhbXMud2F0Y2hPdmVyZmxvdyAmJiBzd2lwZXIuaXNMb2NrZWQpIHx8IHN3aXBlci5wYXJhbXMuY3NzTW9kZSkgcmV0dXJuO1xuICBjb25zdCBlbCA9IHN3aXBlci5lbDtcbiAgZWwuc3R5bGUuY3Vyc29yID0gJ21vdmUnO1xuICBlbC5zdHlsZS5jdXJzb3IgPSBtb3ZpbmcgPyAnLXdlYmtpdC1ncmFiYmluZycgOiAnLXdlYmtpdC1ncmFiJztcbiAgZWwuc3R5bGUuY3Vyc29yID0gbW92aW5nID8gJy1tb3otZ3JhYmJpbicgOiAnLW1vei1ncmFiJztcbiAgZWwuc3R5bGUuY3Vyc29yID0gbW92aW5nID8gJ2dyYWJiaW5nJyA6ICdncmFiJztcbn1cblxuZnVuY3Rpb24gdW5zZXRHcmFiQ3Vyc29yICgpIHtcbiAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgaWYgKFN1cHBvcnQudG91Y2ggfHwgKHN3aXBlci5wYXJhbXMud2F0Y2hPdmVyZmxvdyAmJiBzd2lwZXIuaXNMb2NrZWQpIHx8IHN3aXBlci5wYXJhbXMuY3NzTW9kZSkgcmV0dXJuO1xuICBzd2lwZXIuZWwuc3R5bGUuY3Vyc29yID0gJyc7XG59XG5cbnZhciBncmFiQ3Vyc29yID0ge1xuICBzZXRHcmFiQ3Vyc29yLFxuICB1bnNldEdyYWJDdXJzb3IsXG59O1xuXG5mdW5jdGlvbiBhcHBlbmRTbGlkZSAoc2xpZGVzKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHsgJHdyYXBwZXJFbCwgcGFyYW1zIH0gPSBzd2lwZXI7XG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIHN3aXBlci5sb29wRGVzdHJveSgpO1xuICB9XG4gIGlmICh0eXBlb2Ygc2xpZGVzID09PSAnb2JqZWN0JyAmJiAnbGVuZ3RoJyBpbiBzbGlkZXMpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKHNsaWRlc1tpXSkgJHdyYXBwZXJFbC5hcHBlbmQoc2xpZGVzW2ldKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgJHdyYXBwZXJFbC5hcHBlbmQoc2xpZGVzKTtcbiAgfVxuICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICBzd2lwZXIubG9vcENyZWF0ZSgpO1xuICB9XG4gIGlmICghKHBhcmFtcy5vYnNlcnZlciAmJiBTdXBwb3J0Lm9ic2VydmVyKSkge1xuICAgIHN3aXBlci51cGRhdGUoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwcmVwZW5kU2xpZGUgKHNsaWRlcykge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCB7IHBhcmFtcywgJHdyYXBwZXJFbCwgYWN0aXZlSW5kZXggfSA9IHN3aXBlcjtcblxuICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICBzd2lwZXIubG9vcERlc3Ryb3koKTtcbiAgfVxuICBsZXQgbmV3QWN0aXZlSW5kZXggPSBhY3RpdmVJbmRleCArIDE7XG4gIGlmICh0eXBlb2Ygc2xpZGVzID09PSAnb2JqZWN0JyAmJiAnbGVuZ3RoJyBpbiBzbGlkZXMpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKHNsaWRlc1tpXSkgJHdyYXBwZXJFbC5wcmVwZW5kKHNsaWRlc1tpXSk7XG4gICAgfVxuICAgIG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXggKyBzbGlkZXMubGVuZ3RoO1xuICB9IGVsc2Uge1xuICAgICR3cmFwcGVyRWwucHJlcGVuZChzbGlkZXMpO1xuICB9XG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIHN3aXBlci5sb29wQ3JlYXRlKCk7XG4gIH1cbiAgaWYgKCEocGFyYW1zLm9ic2VydmVyICYmIFN1cHBvcnQub2JzZXJ2ZXIpKSB7XG4gICAgc3dpcGVyLnVwZGF0ZSgpO1xuICB9XG4gIHN3aXBlci5zbGlkZVRvKG5ld0FjdGl2ZUluZGV4LCAwLCBmYWxzZSk7XG59XG5cbmZ1bmN0aW9uIGFkZFNsaWRlIChpbmRleCwgc2xpZGVzKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHsgJHdyYXBwZXJFbCwgcGFyYW1zLCBhY3RpdmVJbmRleCB9ID0gc3dpcGVyO1xuICBsZXQgYWN0aXZlSW5kZXhCdWZmZXIgPSBhY3RpdmVJbmRleDtcbiAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgYWN0aXZlSW5kZXhCdWZmZXIgLT0gc3dpcGVyLmxvb3BlZFNsaWRlcztcbiAgICBzd2lwZXIubG9vcERlc3Ryb3koKTtcbiAgICBzd2lwZXIuc2xpZGVzID0gJHdyYXBwZXJFbC5jaGlsZHJlbihgLiR7cGFyYW1zLnNsaWRlQ2xhc3N9YCk7XG4gIH1cbiAgY29uc3QgYmFzZUxlbmd0aCA9IHN3aXBlci5zbGlkZXMubGVuZ3RoO1xuICBpZiAoaW5kZXggPD0gMCkge1xuICAgIHN3aXBlci5wcmVwZW5kU2xpZGUoc2xpZGVzKTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGluZGV4ID49IGJhc2VMZW5ndGgpIHtcbiAgICBzd2lwZXIuYXBwZW5kU2xpZGUoc2xpZGVzKTtcbiAgICByZXR1cm47XG4gIH1cbiAgbGV0IG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXhCdWZmZXIgPiBpbmRleCA/IGFjdGl2ZUluZGV4QnVmZmVyICsgMSA6IGFjdGl2ZUluZGV4QnVmZmVyO1xuXG4gIGNvbnN0IHNsaWRlc0J1ZmZlciA9IFtdO1xuICBmb3IgKGxldCBpID0gYmFzZUxlbmd0aCAtIDE7IGkgPj0gaW5kZXg7IGkgLT0gMSkge1xuICAgIGNvbnN0IGN1cnJlbnRTbGlkZSA9IHN3aXBlci5zbGlkZXMuZXEoaSk7XG4gICAgY3VycmVudFNsaWRlLnJlbW92ZSgpO1xuICAgIHNsaWRlc0J1ZmZlci51bnNoaWZ0KGN1cnJlbnRTbGlkZSk7XG4gIH1cblxuICBpZiAodHlwZW9mIHNsaWRlcyA9PT0gJ29iamVjdCcgJiYgJ2xlbmd0aCcgaW4gc2xpZGVzKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzbGlkZXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGlmIChzbGlkZXNbaV0pICR3cmFwcGVyRWwuYXBwZW5kKHNsaWRlc1tpXSk7XG4gICAgfVxuICAgIG5ld0FjdGl2ZUluZGV4ID0gYWN0aXZlSW5kZXhCdWZmZXIgPiBpbmRleCA/IGFjdGl2ZUluZGV4QnVmZmVyICsgc2xpZGVzLmxlbmd0aCA6IGFjdGl2ZUluZGV4QnVmZmVyO1xuICB9IGVsc2Uge1xuICAgICR3cmFwcGVyRWwuYXBwZW5kKHNsaWRlcyk7XG4gIH1cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHNsaWRlc0J1ZmZlci5sZW5ndGg7IGkgKz0gMSkge1xuICAgICR3cmFwcGVyRWwuYXBwZW5kKHNsaWRlc0J1ZmZlcltpXSk7XG4gIH1cblxuICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICBzd2lwZXIubG9vcENyZWF0ZSgpO1xuICB9XG4gIGlmICghKHBhcmFtcy5vYnNlcnZlciAmJiBTdXBwb3J0Lm9ic2VydmVyKSkge1xuICAgIHN3aXBlci51cGRhdGUoKTtcbiAgfVxuICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICBzd2lwZXIuc2xpZGVUbyhuZXdBY3RpdmVJbmRleCArIHN3aXBlci5sb29wZWRTbGlkZXMsIDAsIGZhbHNlKTtcbiAgfSBlbHNlIHtcbiAgICBzd2lwZXIuc2xpZGVUbyhuZXdBY3RpdmVJbmRleCwgMCwgZmFsc2UpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVNsaWRlIChzbGlkZXNJbmRleGVzKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHsgcGFyYW1zLCAkd3JhcHBlckVsLCBhY3RpdmVJbmRleCB9ID0gc3dpcGVyO1xuXG4gIGxldCBhY3RpdmVJbmRleEJ1ZmZlciA9IGFjdGl2ZUluZGV4O1xuICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICBhY3RpdmVJbmRleEJ1ZmZlciAtPSBzd2lwZXIubG9vcGVkU2xpZGVzO1xuICAgIHN3aXBlci5sb29wRGVzdHJveSgpO1xuICAgIHN3aXBlci5zbGlkZXMgPSAkd3JhcHBlckVsLmNoaWxkcmVuKGAuJHtwYXJhbXMuc2xpZGVDbGFzc31gKTtcbiAgfVxuICBsZXQgbmV3QWN0aXZlSW5kZXggPSBhY3RpdmVJbmRleEJ1ZmZlcjtcbiAgbGV0IGluZGV4VG9SZW1vdmU7XG5cbiAgaWYgKHR5cGVvZiBzbGlkZXNJbmRleGVzID09PSAnb2JqZWN0JyAmJiAnbGVuZ3RoJyBpbiBzbGlkZXNJbmRleGVzKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzbGlkZXNJbmRleGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBpbmRleFRvUmVtb3ZlID0gc2xpZGVzSW5kZXhlc1tpXTtcbiAgICAgIGlmIChzd2lwZXIuc2xpZGVzW2luZGV4VG9SZW1vdmVdKSBzd2lwZXIuc2xpZGVzLmVxKGluZGV4VG9SZW1vdmUpLnJlbW92ZSgpO1xuICAgICAgaWYgKGluZGV4VG9SZW1vdmUgPCBuZXdBY3RpdmVJbmRleCkgbmV3QWN0aXZlSW5kZXggLT0gMTtcbiAgICB9XG4gICAgbmV3QWN0aXZlSW5kZXggPSBNYXRoLm1heChuZXdBY3RpdmVJbmRleCwgMCk7XG4gIH0gZWxzZSB7XG4gICAgaW5kZXhUb1JlbW92ZSA9IHNsaWRlc0luZGV4ZXM7XG4gICAgaWYgKHN3aXBlci5zbGlkZXNbaW5kZXhUb1JlbW92ZV0pIHN3aXBlci5zbGlkZXMuZXEoaW5kZXhUb1JlbW92ZSkucmVtb3ZlKCk7XG4gICAgaWYgKGluZGV4VG9SZW1vdmUgPCBuZXdBY3RpdmVJbmRleCkgbmV3QWN0aXZlSW5kZXggLT0gMTtcbiAgICBuZXdBY3RpdmVJbmRleCA9IE1hdGgubWF4KG5ld0FjdGl2ZUluZGV4LCAwKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMubG9vcCkge1xuICAgIHN3aXBlci5sb29wQ3JlYXRlKCk7XG4gIH1cblxuICBpZiAoIShwYXJhbXMub2JzZXJ2ZXIgJiYgU3VwcG9ydC5vYnNlcnZlcikpIHtcbiAgICBzd2lwZXIudXBkYXRlKCk7XG4gIH1cbiAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgc3dpcGVyLnNsaWRlVG8obmV3QWN0aXZlSW5kZXggKyBzd2lwZXIubG9vcGVkU2xpZGVzLCAwLCBmYWxzZSk7XG4gIH0gZWxzZSB7XG4gICAgc3dpcGVyLnNsaWRlVG8obmV3QWN0aXZlSW5kZXgsIDAsIGZhbHNlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZW1vdmVBbGxTbGlkZXMgKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuXG4gIGNvbnN0IHNsaWRlc0luZGV4ZXMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzd2lwZXIuc2xpZGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgc2xpZGVzSW5kZXhlcy5wdXNoKGkpO1xuICB9XG4gIHN3aXBlci5yZW1vdmVTbGlkZShzbGlkZXNJbmRleGVzKTtcbn1cblxudmFyIG1hbmlwdWxhdGlvbiA9IHtcbiAgYXBwZW5kU2xpZGUsXG4gIHByZXBlbmRTbGlkZSxcbiAgYWRkU2xpZGUsXG4gIHJlbW92ZVNsaWRlLFxuICByZW1vdmVBbGxTbGlkZXMsXG59O1xuXG5jb25zdCBEZXZpY2UgPSAoZnVuY3Rpb24gRGV2aWNlKCkge1xuICBjb25zdCBwbGF0Zm9ybSA9IHdpbi5uYXZpZ2F0b3IucGxhdGZvcm07XG4gIGNvbnN0IHVhID0gd2luLm5hdmlnYXRvci51c2VyQWdlbnQ7XG5cbiAgY29uc3QgZGV2aWNlID0ge1xuICAgIGlvczogZmFsc2UsXG4gICAgYW5kcm9pZDogZmFsc2UsXG4gICAgYW5kcm9pZENocm9tZTogZmFsc2UsXG4gICAgZGVza3RvcDogZmFsc2UsXG4gICAgaXBob25lOiBmYWxzZSxcbiAgICBpcG9kOiBmYWxzZSxcbiAgICBpcGFkOiBmYWxzZSxcbiAgICBlZGdlOiBmYWxzZSxcbiAgICBpZTogZmFsc2UsXG4gICAgZmlyZWZveDogZmFsc2UsXG4gICAgbWFjb3M6IGZhbHNlLFxuICAgIHdpbmRvd3M6IGZhbHNlLFxuICAgIGNvcmRvdmE6ICEhKHdpbi5jb3Jkb3ZhIHx8IHdpbi5waG9uZWdhcCksXG4gICAgcGhvbmVnYXA6ICEhKHdpbi5jb3Jkb3ZhIHx8IHdpbi5waG9uZWdhcCksXG4gICAgZWxlY3Ryb246IGZhbHNlLFxuICB9O1xuXG4gIGNvbnN0IHNjcmVlbldpZHRoID0gd2luLnNjcmVlbi53aWR0aDtcbiAgY29uc3Qgc2NyZWVuSGVpZ2h0ID0gd2luLnNjcmVlbi5oZWlnaHQ7XG5cbiAgY29uc3QgYW5kcm9pZCA9IHVhLm1hdGNoKC8oQW5kcm9pZCk7P1tcXHNcXC9dKyhbXFxkLl0rKT8vKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICBsZXQgaXBhZCA9IHVhLm1hdGNoKC8oaVBhZCkuKk9TXFxzKFtcXGRfXSspLyk7XG4gIGNvbnN0IGlwb2QgPSB1YS5tYXRjaCgvKGlQb2QpKC4qT1NcXHMoW1xcZF9dKykpPy8pO1xuICBjb25zdCBpcGhvbmUgPSAhaXBhZCAmJiB1YS5tYXRjaCgvKGlQaG9uZVxcc09TfGlPUylcXHMoW1xcZF9dKykvKTtcbiAgY29uc3QgaWUgPSB1YS5pbmRleE9mKCdNU0lFICcpID49IDAgfHwgdWEuaW5kZXhPZignVHJpZGVudC8nKSA+PSAwO1xuICBjb25zdCBlZGdlID0gdWEuaW5kZXhPZignRWRnZS8nKSA+PSAwO1xuICBjb25zdCBmaXJlZm94ID0gdWEuaW5kZXhPZignR2Vja28vJykgPj0gMCAmJiB1YS5pbmRleE9mKCdGaXJlZm94LycpID49IDA7XG4gIGNvbnN0IHdpbmRvd3MgPSBwbGF0Zm9ybSA9PT0gJ1dpbjMyJztcbiAgY29uc3QgZWxlY3Ryb24gPSB1YS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2VsZWN0cm9uJykgPj0gMDtcbiAgbGV0IG1hY29zID0gcGxhdGZvcm0gPT09ICdNYWNJbnRlbCc7XG5cbiAgLy8gaVBhZE9zIDEzIGZpeFxuICBpZiAoIWlwYWRcbiAgICAmJiBtYWNvc1xuICAgICYmIFN1cHBvcnQudG91Y2hcbiAgICAmJiAoXG4gICAgICAoc2NyZWVuV2lkdGggPT09IDEwMjQgJiYgc2NyZWVuSGVpZ2h0ID09PSAxMzY2KSAvLyBQcm8gMTIuOVxuICAgICAgfHwgKHNjcmVlbldpZHRoID09PSA4MzQgJiYgc2NyZWVuSGVpZ2h0ID09PSAxMTk0KSAvLyBQcm8gMTFcbiAgICAgIHx8IChzY3JlZW5XaWR0aCA9PT0gODM0ICYmIHNjcmVlbkhlaWdodCA9PT0gMTExMikgLy8gUHJvIDEwLjVcbiAgICAgIHx8IChzY3JlZW5XaWR0aCA9PT0gNzY4ICYmIHNjcmVlbkhlaWdodCA9PT0gMTAyNCkgLy8gb3RoZXJcbiAgICApXG4gICkge1xuICAgIGlwYWQgPSB1YS5tYXRjaCgvKFZlcnNpb24pXFwvKFtcXGQuXSspLyk7XG4gICAgbWFjb3MgPSBmYWxzZTtcbiAgfVxuXG4gIGRldmljZS5pZSA9IGllO1xuICBkZXZpY2UuZWRnZSA9IGVkZ2U7XG4gIGRldmljZS5maXJlZm94ID0gZmlyZWZveDtcblxuICAvLyBBbmRyb2lkXG4gIGlmIChhbmRyb2lkICYmICF3aW5kb3dzKSB7XG4gICAgZGV2aWNlLm9zID0gJ2FuZHJvaWQnO1xuICAgIGRldmljZS5vc1ZlcnNpb24gPSBhbmRyb2lkWzJdO1xuICAgIGRldmljZS5hbmRyb2lkID0gdHJ1ZTtcbiAgICBkZXZpY2UuYW5kcm9pZENocm9tZSA9IHVhLnRvTG93ZXJDYXNlKCkuaW5kZXhPZignY2hyb21lJykgPj0gMDtcbiAgfVxuICBpZiAoaXBhZCB8fCBpcGhvbmUgfHwgaXBvZCkge1xuICAgIGRldmljZS5vcyA9ICdpb3MnO1xuICAgIGRldmljZS5pb3MgPSB0cnVlO1xuICB9XG4gIC8vIGlPU1xuICBpZiAoaXBob25lICYmICFpcG9kKSB7XG4gICAgZGV2aWNlLm9zVmVyc2lvbiA9IGlwaG9uZVsyXS5yZXBsYWNlKC9fL2csICcuJyk7XG4gICAgZGV2aWNlLmlwaG9uZSA9IHRydWU7XG4gIH1cbiAgaWYgKGlwYWQpIHtcbiAgICBkZXZpY2Uub3NWZXJzaW9uID0gaXBhZFsyXS5yZXBsYWNlKC9fL2csICcuJyk7XG4gICAgZGV2aWNlLmlwYWQgPSB0cnVlO1xuICB9XG4gIGlmIChpcG9kKSB7XG4gICAgZGV2aWNlLm9zVmVyc2lvbiA9IGlwb2RbM10gPyBpcG9kWzNdLnJlcGxhY2UoL18vZywgJy4nKSA6IG51bGw7XG4gICAgZGV2aWNlLmlwb2QgPSB0cnVlO1xuICB9XG4gIC8vIGlPUyA4KyBjaGFuZ2VkIFVBXG4gIGlmIChkZXZpY2UuaW9zICYmIGRldmljZS5vc1ZlcnNpb24gJiYgdWEuaW5kZXhPZignVmVyc2lvbi8nKSA+PSAwKSB7XG4gICAgaWYgKGRldmljZS5vc1ZlcnNpb24uc3BsaXQoJy4nKVswXSA9PT0gJzEwJykge1xuICAgICAgZGV2aWNlLm9zVmVyc2lvbiA9IHVhLnRvTG93ZXJDYXNlKCkuc3BsaXQoJ3ZlcnNpb24vJylbMV0uc3BsaXQoJyAnKVswXTtcbiAgICB9XG4gIH1cblxuICAvLyBXZWJ2aWV3XG4gIGRldmljZS53ZWJWaWV3ID0gISEoKGlwaG9uZSB8fCBpcGFkIHx8IGlwb2QpICYmICh1YS5tYXRjaCgvLipBcHBsZVdlYktpdCg/IS4qU2FmYXJpKS9pKSB8fCB3aW4ubmF2aWdhdG9yLnN0YW5kYWxvbmUpKVxuICAgIHx8ICh3aW4ubWF0Y2hNZWRpYSAmJiB3aW4ubWF0Y2hNZWRpYSgnKGRpc3BsYXktbW9kZTogc3RhbmRhbG9uZSknKS5tYXRjaGVzKTtcbiAgZGV2aWNlLndlYnZpZXcgPSBkZXZpY2Uud2ViVmlldztcbiAgZGV2aWNlLnN0YW5kYWxvbmUgPSBkZXZpY2Uud2ViVmlldztcblxuICAvLyBEZXNrdG9wXG4gIGRldmljZS5kZXNrdG9wID0gIShkZXZpY2UuaW9zIHx8IGRldmljZS5hbmRyb2lkKSB8fCBlbGVjdHJvbjtcbiAgaWYgKGRldmljZS5kZXNrdG9wKSB7XG4gICAgZGV2aWNlLmVsZWN0cm9uID0gZWxlY3Ryb247XG4gICAgZGV2aWNlLm1hY29zID0gbWFjb3M7XG4gICAgZGV2aWNlLndpbmRvd3MgPSB3aW5kb3dzO1xuICAgIGlmIChkZXZpY2UubWFjb3MpIHtcbiAgICAgIGRldmljZS5vcyA9ICdtYWNvcyc7XG4gICAgfVxuICAgIGlmIChkZXZpY2Uud2luZG93cykge1xuICAgICAgZGV2aWNlLm9zID0gJ3dpbmRvd3MnO1xuICAgIH1cbiAgfVxuXG4gIC8vIFBpeGVsIFJhdGlvXG4gIGRldmljZS5waXhlbFJhdGlvID0gd2luLmRldmljZVBpeGVsUmF0aW8gfHwgMTtcblxuICAvLyBFeHBvcnQgb2JqZWN0XG4gIHJldHVybiBkZXZpY2U7XG59KCkpO1xuXG5mdW5jdGlvbiBvblRvdWNoU3RhcnQgKGV2ZW50KSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IGRhdGEgPSBzd2lwZXIudG91Y2hFdmVudHNEYXRhO1xuICBjb25zdCB7IHBhcmFtcywgdG91Y2hlcyB9ID0gc3dpcGVyO1xuXG4gIGlmIChzd2lwZXIuYW5pbWF0aW5nICYmIHBhcmFtcy5wcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb24pIHtcbiAgICByZXR1cm47XG4gIH1cbiAgbGV0IGUgPSBldmVudDtcbiAgaWYgKGUub3JpZ2luYWxFdmVudCkgZSA9IGUub3JpZ2luYWxFdmVudDtcbiAgY29uc3QgJHRhcmdldEVsID0gJChlLnRhcmdldCk7XG5cbiAgaWYgKHBhcmFtcy50b3VjaEV2ZW50c1RhcmdldCA9PT0gJ3dyYXBwZXInKSB7XG4gICAgaWYgKCEkdGFyZ2V0RWwuY2xvc2VzdChzd2lwZXIud3JhcHBlckVsKS5sZW5ndGgpIHJldHVybjtcbiAgfVxuICBkYXRhLmlzVG91Y2hFdmVudCA9IGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnO1xuICBpZiAoIWRhdGEuaXNUb3VjaEV2ZW50ICYmICd3aGljaCcgaW4gZSAmJiBlLndoaWNoID09PSAzKSByZXR1cm47XG4gIGlmICghZGF0YS5pc1RvdWNoRXZlbnQgJiYgJ2J1dHRvbicgaW4gZSAmJiBlLmJ1dHRvbiA+IDApIHJldHVybjtcbiAgaWYgKGRhdGEuaXNUb3VjaGVkICYmIGRhdGEuaXNNb3ZlZCkgcmV0dXJuO1xuICBpZiAocGFyYW1zLm5vU3dpcGluZyAmJiAkdGFyZ2V0RWwuY2xvc2VzdChwYXJhbXMubm9Td2lwaW5nU2VsZWN0b3IgPyBwYXJhbXMubm9Td2lwaW5nU2VsZWN0b3IgOiBgLiR7cGFyYW1zLm5vU3dpcGluZ0NsYXNzfWApWzBdKSB7XG4gICAgc3dpcGVyLmFsbG93Q2xpY2sgPSB0cnVlO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocGFyYW1zLnN3aXBlSGFuZGxlcikge1xuICAgIGlmICghJHRhcmdldEVsLmNsb3Nlc3QocGFyYW1zLnN3aXBlSGFuZGxlcilbMF0pIHJldHVybjtcbiAgfVxuXG4gIHRvdWNoZXMuY3VycmVudFggPSBlLnR5cGUgPT09ICd0b3VjaHN0YXJ0JyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWCA6IGUucGFnZVg7XG4gIHRvdWNoZXMuY3VycmVudFkgPSBlLnR5cGUgPT09ICd0b3VjaHN0YXJ0JyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSA6IGUucGFnZVk7XG4gIGNvbnN0IHN0YXJ0WCA9IHRvdWNoZXMuY3VycmVudFg7XG4gIGNvbnN0IHN0YXJ0WSA9IHRvdWNoZXMuY3VycmVudFk7XG5cbiAgLy8gRG8gTk9UIHN0YXJ0IGlmIGlPUyBlZGdlIHN3aXBlIGlzIGRldGVjdGVkLiBPdGhlcndpc2UgaU9TIGFwcCAoVUlXZWJWaWV3KSBjYW5ub3Qgc3dpcGUtdG8tZ28tYmFjayBhbnltb3JlXG5cbiAgY29uc3QgZWRnZVN3aXBlRGV0ZWN0aW9uID0gcGFyYW1zLmVkZ2VTd2lwZURldGVjdGlvbiB8fCBwYXJhbXMuaU9TRWRnZVN3aXBlRGV0ZWN0aW9uO1xuICBjb25zdCBlZGdlU3dpcGVUaHJlc2hvbGQgPSBwYXJhbXMuZWRnZVN3aXBlVGhyZXNob2xkIHx8IHBhcmFtcy5pT1NFZGdlU3dpcGVUaHJlc2hvbGQ7XG4gIGlmIChcbiAgICBlZGdlU3dpcGVEZXRlY3Rpb25cbiAgICAmJiAoKHN0YXJ0WCA8PSBlZGdlU3dpcGVUaHJlc2hvbGQpXG4gICAgfHwgKHN0YXJ0WCA+PSB3aW4uc2NyZWVuLndpZHRoIC0gZWRnZVN3aXBlVGhyZXNob2xkKSlcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgVXRpbHMuZXh0ZW5kKGRhdGEsIHtcbiAgICBpc1RvdWNoZWQ6IHRydWUsXG4gICAgaXNNb3ZlZDogZmFsc2UsXG4gICAgYWxsb3dUb3VjaENhbGxiYWNrczogdHJ1ZSxcbiAgICBpc1Njcm9sbGluZzogdW5kZWZpbmVkLFxuICAgIHN0YXJ0TW92aW5nOiB1bmRlZmluZWQsXG4gIH0pO1xuXG4gIHRvdWNoZXMuc3RhcnRYID0gc3RhcnRYO1xuICB0b3VjaGVzLnN0YXJ0WSA9IHN0YXJ0WTtcbiAgZGF0YS50b3VjaFN0YXJ0VGltZSA9IFV0aWxzLm5vdygpO1xuICBzd2lwZXIuYWxsb3dDbGljayA9IHRydWU7XG4gIHN3aXBlci51cGRhdGVTaXplKCk7XG4gIHN3aXBlci5zd2lwZURpcmVjdGlvbiA9IHVuZGVmaW5lZDtcbiAgaWYgKHBhcmFtcy50aHJlc2hvbGQgPiAwKSBkYXRhLmFsbG93VGhyZXNob2xkTW92ZSA9IGZhbHNlO1xuICBpZiAoZS50eXBlICE9PSAndG91Y2hzdGFydCcpIHtcbiAgICBsZXQgcHJldmVudERlZmF1bHQgPSB0cnVlO1xuICAgIGlmICgkdGFyZ2V0RWwuaXMoZGF0YS5mb3JtRWxlbWVudHMpKSBwcmV2ZW50RGVmYXVsdCA9IGZhbHNlO1xuICAgIGlmIChcbiAgICAgIGRvYy5hY3RpdmVFbGVtZW50XG4gICAgICAmJiAkKGRvYy5hY3RpdmVFbGVtZW50KS5pcyhkYXRhLmZvcm1FbGVtZW50cylcbiAgICAgICYmIGRvYy5hY3RpdmVFbGVtZW50ICE9PSAkdGFyZ2V0RWxbMF1cbiAgICApIHtcbiAgICAgIGRvYy5hY3RpdmVFbGVtZW50LmJsdXIoKTtcbiAgICB9XG5cbiAgICBjb25zdCBzaG91bGRQcmV2ZW50RGVmYXVsdCA9IHByZXZlbnREZWZhdWx0ICYmIHN3aXBlci5hbGxvd1RvdWNoTW92ZSAmJiBwYXJhbXMudG91Y2hTdGFydFByZXZlbnREZWZhdWx0O1xuICAgIGlmIChwYXJhbXMudG91Y2hTdGFydEZvcmNlUHJldmVudERlZmF1bHQgfHwgc2hvdWxkUHJldmVudERlZmF1bHQpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gIH1cbiAgc3dpcGVyLmVtaXQoJ3RvdWNoU3RhcnQnLCBlKTtcbn1cblxuZnVuY3Rpb24gb25Ub3VjaE1vdmUgKGV2ZW50KSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IGRhdGEgPSBzd2lwZXIudG91Y2hFdmVudHNEYXRhO1xuICBjb25zdCB7IHBhcmFtcywgdG91Y2hlcywgcnRsVHJhbnNsYXRlOiBydGwgfSA9IHN3aXBlcjtcbiAgbGV0IGUgPSBldmVudDtcbiAgaWYgKGUub3JpZ2luYWxFdmVudCkgZSA9IGUub3JpZ2luYWxFdmVudDtcbiAgaWYgKCFkYXRhLmlzVG91Y2hlZCkge1xuICAgIGlmIChkYXRhLnN0YXJ0TW92aW5nICYmIGRhdGEuaXNTY3JvbGxpbmcpIHtcbiAgICAgIHN3aXBlci5lbWl0KCd0b3VjaE1vdmVPcHBvc2l0ZScsIGUpO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGRhdGEuaXNUb3VjaEV2ZW50ICYmIGUudHlwZSAhPT0gJ3RvdWNobW92ZScpIHJldHVybjtcbiAgY29uc3QgdGFyZ2V0VG91Y2ggPSBlLnR5cGUgPT09ICd0b3VjaG1vdmUnICYmIGUudGFyZ2V0VG91Y2hlcyAmJiAoZS50YXJnZXRUb3VjaGVzWzBdIHx8IGUuY2hhbmdlZFRvdWNoZXNbMF0pO1xuICBjb25zdCBwYWdlWCA9IGUudHlwZSA9PT0gJ3RvdWNobW92ZScgPyB0YXJnZXRUb3VjaC5wYWdlWCA6IGUucGFnZVg7XG4gIGNvbnN0IHBhZ2VZID0gZS50eXBlID09PSAndG91Y2htb3ZlJyA/IHRhcmdldFRvdWNoLnBhZ2VZIDogZS5wYWdlWTtcbiAgaWYgKGUucHJldmVudGVkQnlOZXN0ZWRTd2lwZXIpIHtcbiAgICB0b3VjaGVzLnN0YXJ0WCA9IHBhZ2VYO1xuICAgIHRvdWNoZXMuc3RhcnRZID0gcGFnZVk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICghc3dpcGVyLmFsbG93VG91Y2hNb3ZlKSB7XG4gICAgLy8gaXNNb3ZlZCA9IHRydWU7XG4gICAgc3dpcGVyLmFsbG93Q2xpY2sgPSBmYWxzZTtcbiAgICBpZiAoZGF0YS5pc1RvdWNoZWQpIHtcbiAgICAgIFV0aWxzLmV4dGVuZCh0b3VjaGVzLCB7XG4gICAgICAgIHN0YXJ0WDogcGFnZVgsXG4gICAgICAgIHN0YXJ0WTogcGFnZVksXG4gICAgICAgIGN1cnJlbnRYOiBwYWdlWCxcbiAgICAgICAgY3VycmVudFk6IHBhZ2VZLFxuICAgICAgfSk7XG4gICAgICBkYXRhLnRvdWNoU3RhcnRUaW1lID0gVXRpbHMubm93KCk7XG4gICAgfVxuICAgIHJldHVybjtcbiAgfVxuICBpZiAoZGF0YS5pc1RvdWNoRXZlbnQgJiYgcGFyYW1zLnRvdWNoUmVsZWFzZU9uRWRnZXMgJiYgIXBhcmFtcy5sb29wKSB7XG4gICAgaWYgKHN3aXBlci5pc1ZlcnRpY2FsKCkpIHtcbiAgICAgIC8vIFZlcnRpY2FsXG4gICAgICBpZiAoXG4gICAgICAgIChwYWdlWSA8IHRvdWNoZXMuc3RhcnRZICYmIHN3aXBlci50cmFuc2xhdGUgPD0gc3dpcGVyLm1heFRyYW5zbGF0ZSgpKVxuICAgICAgICB8fCAocGFnZVkgPiB0b3VjaGVzLnN0YXJ0WSAmJiBzd2lwZXIudHJhbnNsYXRlID49IHN3aXBlci5taW5UcmFuc2xhdGUoKSlcbiAgICAgICkge1xuICAgICAgICBkYXRhLmlzVG91Y2hlZCA9IGZhbHNlO1xuICAgICAgICBkYXRhLmlzTW92ZWQgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoXG4gICAgICAocGFnZVggPCB0b3VjaGVzLnN0YXJ0WCAmJiBzd2lwZXIudHJhbnNsYXRlIDw9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSlcbiAgICAgIHx8IChwYWdlWCA+IHRvdWNoZXMuc3RhcnRYICYmIHN3aXBlci50cmFuc2xhdGUgPj0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKVxuICAgICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuICBpZiAoZGF0YS5pc1RvdWNoRXZlbnQgJiYgZG9jLmFjdGl2ZUVsZW1lbnQpIHtcbiAgICBpZiAoZS50YXJnZXQgPT09IGRvYy5hY3RpdmVFbGVtZW50ICYmICQoZS50YXJnZXQpLmlzKGRhdGEuZm9ybUVsZW1lbnRzKSkge1xuICAgICAgZGF0YS5pc01vdmVkID0gdHJ1ZTtcbiAgICAgIHN3aXBlci5hbGxvd0NsaWNrID0gZmFsc2U7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG4gIGlmIChkYXRhLmFsbG93VG91Y2hDYWxsYmFja3MpIHtcbiAgICBzd2lwZXIuZW1pdCgndG91Y2hNb3ZlJywgZSk7XG4gIH1cbiAgaWYgKGUudGFyZ2V0VG91Y2hlcyAmJiBlLnRhcmdldFRvdWNoZXMubGVuZ3RoID4gMSkgcmV0dXJuO1xuXG4gIHRvdWNoZXMuY3VycmVudFggPSBwYWdlWDtcbiAgdG91Y2hlcy5jdXJyZW50WSA9IHBhZ2VZO1xuXG4gIGNvbnN0IGRpZmZYID0gdG91Y2hlcy5jdXJyZW50WCAtIHRvdWNoZXMuc3RhcnRYO1xuICBjb25zdCBkaWZmWSA9IHRvdWNoZXMuY3VycmVudFkgLSB0b3VjaGVzLnN0YXJ0WTtcbiAgaWYgKHN3aXBlci5wYXJhbXMudGhyZXNob2xkICYmIE1hdGguc3FydCgoZGlmZlggKiogMikgKyAoZGlmZlkgKiogMikpIDwgc3dpcGVyLnBhcmFtcy50aHJlc2hvbGQpIHJldHVybjtcblxuICBpZiAodHlwZW9mIGRhdGEuaXNTY3JvbGxpbmcgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgbGV0IHRvdWNoQW5nbGU7XG4gICAgaWYgKChzd2lwZXIuaXNIb3Jpem9udGFsKCkgJiYgdG91Y2hlcy5jdXJyZW50WSA9PT0gdG91Y2hlcy5zdGFydFkpIHx8IChzd2lwZXIuaXNWZXJ0aWNhbCgpICYmIHRvdWNoZXMuY3VycmVudFggPT09IHRvdWNoZXMuc3RhcnRYKSkge1xuICAgICAgZGF0YS5pc1Njcm9sbGluZyA9IGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgIGlmICgoZGlmZlggKiBkaWZmWCkgKyAoZGlmZlkgKiBkaWZmWSkgPj0gMjUpIHtcbiAgICAgICAgdG91Y2hBbmdsZSA9IChNYXRoLmF0YW4yKE1hdGguYWJzKGRpZmZZKSwgTWF0aC5hYnMoZGlmZlgpKSAqIDE4MCkgLyBNYXRoLlBJO1xuICAgICAgICBkYXRhLmlzU2Nyb2xsaW5nID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gdG91Y2hBbmdsZSA+IHBhcmFtcy50b3VjaEFuZ2xlIDogKDkwIC0gdG91Y2hBbmdsZSA+IHBhcmFtcy50b3VjaEFuZ2xlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgaWYgKGRhdGEuaXNTY3JvbGxpbmcpIHtcbiAgICBzd2lwZXIuZW1pdCgndG91Y2hNb3ZlT3Bwb3NpdGUnLCBlKTtcbiAgfVxuICBpZiAodHlwZW9mIGRhdGEuc3RhcnRNb3ZpbmcgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgaWYgKHRvdWNoZXMuY3VycmVudFggIT09IHRvdWNoZXMuc3RhcnRYIHx8IHRvdWNoZXMuY3VycmVudFkgIT09IHRvdWNoZXMuc3RhcnRZKSB7XG4gICAgICBkYXRhLnN0YXJ0TW92aW5nID0gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgaWYgKGRhdGEuaXNTY3JvbGxpbmcpIHtcbiAgICBkYXRhLmlzVG91Y2hlZCA9IGZhbHNlO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIWRhdGEuc3RhcnRNb3ZpbmcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgc3dpcGVyLmFsbG93Q2xpY2sgPSBmYWxzZTtcbiAgaWYgKCFwYXJhbXMuY3NzTW9kZSAmJiBlLmNhbmNlbGFibGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH1cbiAgaWYgKHBhcmFtcy50b3VjaE1vdmVTdG9wUHJvcGFnYXRpb24gJiYgIXBhcmFtcy5uZXN0ZWQpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgaWYgKCFkYXRhLmlzTW92ZWQpIHtcbiAgICBpZiAocGFyYW1zLmxvb3ApIHtcbiAgICAgIHN3aXBlci5sb29wRml4KCk7XG4gICAgfVxuICAgIGRhdGEuc3RhcnRUcmFuc2xhdGUgPSBzd2lwZXIuZ2V0VHJhbnNsYXRlKCk7XG4gICAgc3dpcGVyLnNldFRyYW5zaXRpb24oMCk7XG4gICAgaWYgKHN3aXBlci5hbmltYXRpbmcpIHtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsLnRyaWdnZXIoJ3dlYmtpdFRyYW5zaXRpb25FbmQgdHJhbnNpdGlvbmVuZCcpO1xuICAgIH1cbiAgICBkYXRhLmFsbG93TW9tZW50dW1Cb3VuY2UgPSBmYWxzZTtcbiAgICAvLyBHcmFiIEN1cnNvclxuICAgIGlmIChwYXJhbXMuZ3JhYkN1cnNvciAmJiAoc3dpcGVyLmFsbG93U2xpZGVOZXh0ID09PSB0cnVlIHx8IHN3aXBlci5hbGxvd1NsaWRlUHJldiA9PT0gdHJ1ZSkpIHtcbiAgICAgIHN3aXBlci5zZXRHcmFiQ3Vyc29yKHRydWUpO1xuICAgIH1cbiAgICBzd2lwZXIuZW1pdCgnc2xpZGVyRmlyc3RNb3ZlJywgZSk7XG4gIH1cbiAgc3dpcGVyLmVtaXQoJ3NsaWRlck1vdmUnLCBlKTtcbiAgZGF0YS5pc01vdmVkID0gdHJ1ZTtcblxuICBsZXQgZGlmZiA9IHN3aXBlci5pc0hvcml6b250YWwoKSA/IGRpZmZYIDogZGlmZlk7XG4gIHRvdWNoZXMuZGlmZiA9IGRpZmY7XG5cbiAgZGlmZiAqPSBwYXJhbXMudG91Y2hSYXRpbztcbiAgaWYgKHJ0bCkgZGlmZiA9IC1kaWZmO1xuXG4gIHN3aXBlci5zd2lwZURpcmVjdGlvbiA9IGRpZmYgPiAwID8gJ3ByZXYnIDogJ25leHQnO1xuICBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPSBkaWZmICsgZGF0YS5zdGFydFRyYW5zbGF0ZTtcblxuICBsZXQgZGlzYWJsZVBhcmVudFN3aXBlciA9IHRydWU7XG4gIGxldCByZXNpc3RhbmNlUmF0aW8gPSBwYXJhbXMucmVzaXN0YW5jZVJhdGlvO1xuICBpZiAocGFyYW1zLnRvdWNoUmVsZWFzZU9uRWRnZXMpIHtcbiAgICByZXNpc3RhbmNlUmF0aW8gPSAwO1xuICB9XG4gIGlmICgoZGlmZiA+IDAgJiYgZGF0YS5jdXJyZW50VHJhbnNsYXRlID4gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSkge1xuICAgIGRpc2FibGVQYXJlbnRTd2lwZXIgPSBmYWxzZTtcbiAgICBpZiAocGFyYW1zLnJlc2lzdGFuY2UpIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA9IChzd2lwZXIubWluVHJhbnNsYXRlKCkgLSAxKSArICgoLXN3aXBlci5taW5UcmFuc2xhdGUoKSArIGRhdGEuc3RhcnRUcmFuc2xhdGUgKyBkaWZmKSAqKiByZXNpc3RhbmNlUmF0aW8pO1xuICB9IGVsc2UgaWYgKGRpZmYgPCAwICYmIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA8IHN3aXBlci5tYXhUcmFuc2xhdGUoKSkge1xuICAgIGRpc2FibGVQYXJlbnRTd2lwZXIgPSBmYWxzZTtcbiAgICBpZiAocGFyYW1zLnJlc2lzdGFuY2UpIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA9IChzd2lwZXIubWF4VHJhbnNsYXRlKCkgKyAxKSAtICgoc3dpcGVyLm1heFRyYW5zbGF0ZSgpIC0gZGF0YS5zdGFydFRyYW5zbGF0ZSAtIGRpZmYpICoqIHJlc2lzdGFuY2VSYXRpbyk7XG4gIH1cblxuICBpZiAoZGlzYWJsZVBhcmVudFN3aXBlcikge1xuICAgIGUucHJldmVudGVkQnlOZXN0ZWRTd2lwZXIgPSB0cnVlO1xuICB9XG5cbiAgLy8gRGlyZWN0aW9ucyBsb2Nrc1xuICBpZiAoIXN3aXBlci5hbGxvd1NsaWRlTmV4dCAmJiBzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPT09ICduZXh0JyAmJiBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPCBkYXRhLnN0YXJ0VHJhbnNsYXRlKSB7XG4gICAgZGF0YS5jdXJyZW50VHJhbnNsYXRlID0gZGF0YS5zdGFydFRyYW5zbGF0ZTtcbiAgfVxuICBpZiAoIXN3aXBlci5hbGxvd1NsaWRlUHJldiAmJiBzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPT09ICdwcmV2JyAmJiBkYXRhLmN1cnJlbnRUcmFuc2xhdGUgPiBkYXRhLnN0YXJ0VHJhbnNsYXRlKSB7XG4gICAgZGF0YS5jdXJyZW50VHJhbnNsYXRlID0gZGF0YS5zdGFydFRyYW5zbGF0ZTtcbiAgfVxuXG5cbiAgLy8gVGhyZXNob2xkXG4gIGlmIChwYXJhbXMudGhyZXNob2xkID4gMCkge1xuICAgIGlmIChNYXRoLmFicyhkaWZmKSA+IHBhcmFtcy50aHJlc2hvbGQgfHwgZGF0YS5hbGxvd1RocmVzaG9sZE1vdmUpIHtcbiAgICAgIGlmICghZGF0YS5hbGxvd1RocmVzaG9sZE1vdmUpIHtcbiAgICAgICAgZGF0YS5hbGxvd1RocmVzaG9sZE1vdmUgPSB0cnVlO1xuICAgICAgICB0b3VjaGVzLnN0YXJ0WCA9IHRvdWNoZXMuY3VycmVudFg7XG4gICAgICAgIHRvdWNoZXMuc3RhcnRZID0gdG91Y2hlcy5jdXJyZW50WTtcbiAgICAgICAgZGF0YS5jdXJyZW50VHJhbnNsYXRlID0gZGF0YS5zdGFydFRyYW5zbGF0ZTtcbiAgICAgICAgdG91Y2hlcy5kaWZmID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gdG91Y2hlcy5jdXJyZW50WCAtIHRvdWNoZXMuc3RhcnRYIDogdG91Y2hlcy5jdXJyZW50WSAtIHRvdWNoZXMuc3RhcnRZO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGEuY3VycmVudFRyYW5zbGF0ZSA9IGRhdGEuc3RhcnRUcmFuc2xhdGU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgaWYgKCFwYXJhbXMuZm9sbG93RmluZ2VyIHx8IHBhcmFtcy5jc3NNb2RlKSByZXR1cm47XG5cbiAgLy8gVXBkYXRlIGFjdGl2ZSBpbmRleCBpbiBmcmVlIG1vZGVcbiAgaWYgKHBhcmFtcy5mcmVlTW9kZSB8fCBwYXJhbXMud2F0Y2hTbGlkZXNQcm9ncmVzcyB8fCBwYXJhbXMud2F0Y2hTbGlkZXNWaXNpYmlsaXR5KSB7XG4gICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgc3dpcGVyLnVwZGF0ZVNsaWRlc0NsYXNzZXMoKTtcbiAgfVxuICBpZiAocGFyYW1zLmZyZWVNb2RlKSB7XG4gICAgLy8gVmVsb2NpdHlcbiAgICBpZiAoZGF0YS52ZWxvY2l0aWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgZGF0YS52ZWxvY2l0aWVzLnB1c2goe1xuICAgICAgICBwb3NpdGlvbjogdG91Y2hlc1tzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAnc3RhcnRYJyA6ICdzdGFydFknXSxcbiAgICAgICAgdGltZTogZGF0YS50b3VjaFN0YXJ0VGltZSxcbiAgICAgIH0pO1xuICAgIH1cbiAgICBkYXRhLnZlbG9jaXRpZXMucHVzaCh7XG4gICAgICBwb3NpdGlvbjogdG91Y2hlc1tzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAnY3VycmVudFgnIDogJ2N1cnJlbnRZJ10sXG4gICAgICB0aW1lOiBVdGlscy5ub3coKSxcbiAgICB9KTtcbiAgfVxuICAvLyBVcGRhdGUgcHJvZ3Jlc3NcbiAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKGRhdGEuY3VycmVudFRyYW5zbGF0ZSk7XG4gIC8vIFVwZGF0ZSB0cmFuc2xhdGVcbiAgc3dpcGVyLnNldFRyYW5zbGF0ZShkYXRhLmN1cnJlbnRUcmFuc2xhdGUpO1xufVxuXG5mdW5jdGlvbiBvblRvdWNoRW5kIChldmVudCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCBkYXRhID0gc3dpcGVyLnRvdWNoRXZlbnRzRGF0YTtcblxuICBjb25zdCB7XG4gICAgcGFyYW1zLCB0b3VjaGVzLCBydGxUcmFuc2xhdGU6IHJ0bCwgJHdyYXBwZXJFbCwgc2xpZGVzR3JpZCwgc25hcEdyaWQsXG4gIH0gPSBzd2lwZXI7XG4gIGxldCBlID0gZXZlbnQ7XG4gIGlmIChlLm9yaWdpbmFsRXZlbnQpIGUgPSBlLm9yaWdpbmFsRXZlbnQ7XG4gIGlmIChkYXRhLmFsbG93VG91Y2hDYWxsYmFja3MpIHtcbiAgICBzd2lwZXIuZW1pdCgndG91Y2hFbmQnLCBlKTtcbiAgfVxuICBkYXRhLmFsbG93VG91Y2hDYWxsYmFja3MgPSBmYWxzZTtcbiAgaWYgKCFkYXRhLmlzVG91Y2hlZCkge1xuICAgIGlmIChkYXRhLmlzTW92ZWQgJiYgcGFyYW1zLmdyYWJDdXJzb3IpIHtcbiAgICAgIHN3aXBlci5zZXRHcmFiQ3Vyc29yKGZhbHNlKTtcbiAgICB9XG4gICAgZGF0YS5pc01vdmVkID0gZmFsc2U7XG4gICAgZGF0YS5zdGFydE1vdmluZyA9IGZhbHNlO1xuICAgIHJldHVybjtcbiAgfVxuICAvLyBSZXR1cm4gR3JhYiBDdXJzb3JcbiAgaWYgKHBhcmFtcy5ncmFiQ3Vyc29yICYmIGRhdGEuaXNNb3ZlZCAmJiBkYXRhLmlzVG91Y2hlZCAmJiAoc3dpcGVyLmFsbG93U2xpZGVOZXh0ID09PSB0cnVlIHx8IHN3aXBlci5hbGxvd1NsaWRlUHJldiA9PT0gdHJ1ZSkpIHtcbiAgICBzd2lwZXIuc2V0R3JhYkN1cnNvcihmYWxzZSk7XG4gIH1cblxuICAvLyBUaW1lIGRpZmZcbiAgY29uc3QgdG91Y2hFbmRUaW1lID0gVXRpbHMubm93KCk7XG4gIGNvbnN0IHRpbWVEaWZmID0gdG91Y2hFbmRUaW1lIC0gZGF0YS50b3VjaFN0YXJ0VGltZTtcblxuICAvLyBUYXAsIGRvdWJsZVRhcCwgQ2xpY2tcbiAgaWYgKHN3aXBlci5hbGxvd0NsaWNrKSB7XG4gICAgc3dpcGVyLnVwZGF0ZUNsaWNrZWRTbGlkZShlKTtcbiAgICBzd2lwZXIuZW1pdCgndGFwIGNsaWNrJywgZSk7XG4gICAgaWYgKHRpbWVEaWZmIDwgMzAwICYmICh0b3VjaEVuZFRpbWUgLSBkYXRhLmxhc3RDbGlja1RpbWUpIDwgMzAwKSB7XG4gICAgICBzd2lwZXIuZW1pdCgnZG91YmxlVGFwIGRvdWJsZUNsaWNrJywgZSk7XG4gICAgfVxuICB9XG5cbiAgZGF0YS5sYXN0Q2xpY2tUaW1lID0gVXRpbHMubm93KCk7XG4gIFV0aWxzLm5leHRUaWNrKCgpID0+IHtcbiAgICBpZiAoIXN3aXBlci5kZXN0cm95ZWQpIHN3aXBlci5hbGxvd0NsaWNrID0gdHJ1ZTtcbiAgfSk7XG5cbiAgaWYgKCFkYXRhLmlzVG91Y2hlZCB8fCAhZGF0YS5pc01vdmVkIHx8ICFzd2lwZXIuc3dpcGVEaXJlY3Rpb24gfHwgdG91Y2hlcy5kaWZmID09PSAwIHx8IGRhdGEuY3VycmVudFRyYW5zbGF0ZSA9PT0gZGF0YS5zdGFydFRyYW5zbGF0ZSkge1xuICAgIGRhdGEuaXNUb3VjaGVkID0gZmFsc2U7XG4gICAgZGF0YS5pc01vdmVkID0gZmFsc2U7XG4gICAgZGF0YS5zdGFydE1vdmluZyA9IGZhbHNlO1xuICAgIHJldHVybjtcbiAgfVxuICBkYXRhLmlzVG91Y2hlZCA9IGZhbHNlO1xuICBkYXRhLmlzTW92ZWQgPSBmYWxzZTtcbiAgZGF0YS5zdGFydE1vdmluZyA9IGZhbHNlO1xuXG4gIGxldCBjdXJyZW50UG9zO1xuICBpZiAocGFyYW1zLmZvbGxvd0Zpbmdlcikge1xuICAgIGN1cnJlbnRQb3MgPSBydGwgPyBzd2lwZXIudHJhbnNsYXRlIDogLXN3aXBlci50cmFuc2xhdGU7XG4gIH0gZWxzZSB7XG4gICAgY3VycmVudFBvcyA9IC1kYXRhLmN1cnJlbnRUcmFuc2xhdGU7XG4gIH1cblxuICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAocGFyYW1zLmZyZWVNb2RlKSB7XG4gICAgaWYgKGN1cnJlbnRQb3MgPCAtc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoY3VycmVudFBvcyA+IC1zd2lwZXIubWF4VHJhbnNsYXRlKCkpIHtcbiAgICAgIGlmIChzd2lwZXIuc2xpZGVzLmxlbmd0aCA8IHNuYXBHcmlkLmxlbmd0aCkge1xuICAgICAgICBzd2lwZXIuc2xpZGVUbyhzbmFwR3JpZC5sZW5ndGggLSAxKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKHN3aXBlci5zbGlkZXMubGVuZ3RoIC0gMSk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5mcmVlTW9kZU1vbWVudHVtKSB7XG4gICAgICBpZiAoZGF0YS52ZWxvY2l0aWVzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgY29uc3QgbGFzdE1vdmVFdmVudCA9IGRhdGEudmVsb2NpdGllcy5wb3AoKTtcbiAgICAgICAgY29uc3QgdmVsb2NpdHlFdmVudCA9IGRhdGEudmVsb2NpdGllcy5wb3AoKTtcblxuICAgICAgICBjb25zdCBkaXN0YW5jZSA9IGxhc3RNb3ZlRXZlbnQucG9zaXRpb24gLSB2ZWxvY2l0eUV2ZW50LnBvc2l0aW9uO1xuICAgICAgICBjb25zdCB0aW1lID0gbGFzdE1vdmVFdmVudC50aW1lIC0gdmVsb2NpdHlFdmVudC50aW1lO1xuICAgICAgICBzd2lwZXIudmVsb2NpdHkgPSBkaXN0YW5jZSAvIHRpbWU7XG4gICAgICAgIHN3aXBlci52ZWxvY2l0eSAvPSAyO1xuICAgICAgICBpZiAoTWF0aC5hYnMoc3dpcGVyLnZlbG9jaXR5KSA8IHBhcmFtcy5mcmVlTW9kZU1pbmltdW1WZWxvY2l0eSkge1xuICAgICAgICAgIHN3aXBlci52ZWxvY2l0eSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgLy8gdGhpcyBpbXBsaWVzIHRoYXQgdGhlIHVzZXIgc3RvcHBlZCBtb3ZpbmcgYSBmaW5nZXIgdGhlbiByZWxlYXNlZC5cbiAgICAgICAgLy8gVGhlcmUgd291bGQgYmUgbm8gZXZlbnRzIHdpdGggZGlzdGFuY2UgemVybywgc28gdGhlIGxhc3QgZXZlbnQgaXMgc3RhbGUuXG4gICAgICAgIGlmICh0aW1lID4gMTUwIHx8IChVdGlscy5ub3coKSAtIGxhc3RNb3ZlRXZlbnQudGltZSkgPiAzMDApIHtcbiAgICAgICAgICBzd2lwZXIudmVsb2NpdHkgPSAwO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzd2lwZXIudmVsb2NpdHkgPSAwO1xuICAgICAgfVxuICAgICAgc3dpcGVyLnZlbG9jaXR5ICo9IHBhcmFtcy5mcmVlTW9kZU1vbWVudHVtVmVsb2NpdHlSYXRpbztcblxuICAgICAgZGF0YS52ZWxvY2l0aWVzLmxlbmd0aCA9IDA7XG4gICAgICBsZXQgbW9tZW50dW1EdXJhdGlvbiA9IDEwMDAgKiBwYXJhbXMuZnJlZU1vZGVNb21lbnR1bVJhdGlvO1xuICAgICAgY29uc3QgbW9tZW50dW1EaXN0YW5jZSA9IHN3aXBlci52ZWxvY2l0eSAqIG1vbWVudHVtRHVyYXRpb247XG5cbiAgICAgIGxldCBuZXdQb3NpdGlvbiA9IHN3aXBlci50cmFuc2xhdGUgKyBtb21lbnR1bURpc3RhbmNlO1xuICAgICAgaWYgKHJ0bCkgbmV3UG9zaXRpb24gPSAtbmV3UG9zaXRpb247XG5cbiAgICAgIGxldCBkb0JvdW5jZSA9IGZhbHNlO1xuICAgICAgbGV0IGFmdGVyQm91bmNlUG9zaXRpb247XG4gICAgICBjb25zdCBib3VuY2VBbW91bnQgPSBNYXRoLmFicyhzd2lwZXIudmVsb2NpdHkpICogMjAgKiBwYXJhbXMuZnJlZU1vZGVNb21lbnR1bUJvdW5jZVJhdGlvO1xuICAgICAgbGV0IG5lZWRzTG9vcEZpeDtcbiAgICAgIGlmIChuZXdQb3NpdGlvbiA8IHN3aXBlci5tYXhUcmFuc2xhdGUoKSkge1xuICAgICAgICBpZiAocGFyYW1zLmZyZWVNb2RlTW9tZW50dW1Cb3VuY2UpIHtcbiAgICAgICAgICBpZiAobmV3UG9zaXRpb24gKyBzd2lwZXIubWF4VHJhbnNsYXRlKCkgPCAtYm91bmNlQW1vdW50KSB7XG4gICAgICAgICAgICBuZXdQb3NpdGlvbiA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSAtIGJvdW5jZUFtb3VudDtcbiAgICAgICAgICB9XG4gICAgICAgICAgYWZ0ZXJCb3VuY2VQb3NpdGlvbiA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKTtcbiAgICAgICAgICBkb0JvdW5jZSA9IHRydWU7XG4gICAgICAgICAgZGF0YS5hbGxvd01vbWVudHVtQm91bmNlID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXdQb3NpdGlvbiA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFyYW1zLmxvb3AgJiYgcGFyYW1zLmNlbnRlcmVkU2xpZGVzKSBuZWVkc0xvb3BGaXggPSB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChuZXdQb3NpdGlvbiA+IHN3aXBlci5taW5UcmFuc2xhdGUoKSkge1xuICAgICAgICBpZiAocGFyYW1zLmZyZWVNb2RlTW9tZW50dW1Cb3VuY2UpIHtcbiAgICAgICAgICBpZiAobmV3UG9zaXRpb24gLSBzd2lwZXIubWluVHJhbnNsYXRlKCkgPiBib3VuY2VBbW91bnQpIHtcbiAgICAgICAgICAgIG5ld1Bvc2l0aW9uID0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpICsgYm91bmNlQW1vdW50O1xuICAgICAgICAgIH1cbiAgICAgICAgICBhZnRlckJvdW5jZVBvc2l0aW9uID0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpO1xuICAgICAgICAgIGRvQm91bmNlID0gdHJ1ZTtcbiAgICAgICAgICBkYXRhLmFsbG93TW9tZW50dW1Cb3VuY2UgPSB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5ld1Bvc2l0aW9uID0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXJhbXMubG9vcCAmJiBwYXJhbXMuY2VudGVyZWRTbGlkZXMpIG5lZWRzTG9vcEZpeCA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHBhcmFtcy5mcmVlTW9kZVN0aWNreSkge1xuICAgICAgICBsZXQgbmV4dFNsaWRlO1xuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHNuYXBHcmlkLmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICAgICAgaWYgKHNuYXBHcmlkW2pdID4gLW5ld1Bvc2l0aW9uKSB7XG4gICAgICAgICAgICBuZXh0U2xpZGUgPSBqO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKE1hdGguYWJzKHNuYXBHcmlkW25leHRTbGlkZV0gLSBuZXdQb3NpdGlvbikgPCBNYXRoLmFicyhzbmFwR3JpZFtuZXh0U2xpZGUgLSAxXSAtIG5ld1Bvc2l0aW9uKSB8fCBzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPT09ICduZXh0Jykge1xuICAgICAgICAgIG5ld1Bvc2l0aW9uID0gc25hcEdyaWRbbmV4dFNsaWRlXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXdQb3NpdGlvbiA9IHNuYXBHcmlkW25leHRTbGlkZSAtIDFdO1xuICAgICAgICB9XG4gICAgICAgIG5ld1Bvc2l0aW9uID0gLW5ld1Bvc2l0aW9uO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRzTG9vcEZpeCkge1xuICAgICAgICBzd2lwZXIub25jZSgndHJhbnNpdGlvbkVuZCcsICgpID0+IHtcbiAgICAgICAgICBzd2lwZXIubG9vcEZpeCgpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIC8vIEZpeCBkdXJhdGlvblxuICAgICAgaWYgKHN3aXBlci52ZWxvY2l0eSAhPT0gMCkge1xuICAgICAgICBpZiAocnRsKSB7XG4gICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IE1hdGguYWJzKCgtbmV3UG9zaXRpb24gLSBzd2lwZXIudHJhbnNsYXRlKSAvIHN3aXBlci52ZWxvY2l0eSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IE1hdGguYWJzKChuZXdQb3NpdGlvbiAtIHN3aXBlci50cmFuc2xhdGUpIC8gc3dpcGVyLnZlbG9jaXR5KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFyYW1zLmZyZWVNb2RlU3RpY2t5KSB7XG4gICAgICAgICAgLy8gSWYgZnJlZU1vZGVTdGlja3kgaXMgYWN0aXZlIGFuZCB0aGUgdXNlciBlbmRzIGEgc3dpcGUgd2l0aCBhIHNsb3ctdmVsb2NpdHlcbiAgICAgICAgICAvLyBldmVudCwgdGhlbiBkdXJhdGlvbnMgY2FuIGJlIDIwKyBzZWNvbmRzIHRvIHNsaWRlIG9uZSAob3IgemVybyEpIHNsaWRlcy5cbiAgICAgICAgICAvLyBJdCdzIGVhc3kgdG8gc2VlIHRoaXMgd2hlbiBzaW11bGF0aW5nIHRvdWNoIHdpdGggbW91c2UgZXZlbnRzLiBUbyBmaXggdGhpcyxcbiAgICAgICAgICAvLyBsaW1pdCBzaW5nbGUtc2xpZGUgc3dpcGVzIHRvIHRoZSBkZWZhdWx0IHNsaWRlIGR1cmF0aW9uLiBUaGlzIGFsc28gaGFzIHRoZVxuICAgICAgICAgIC8vIG5pY2Ugc2lkZSBlZmZlY3Qgb2YgbWF0Y2hpbmcgc2xpZGUgc3BlZWQgaWYgdGhlIHVzZXIgc3RvcHBlZCBtb3ZpbmcgYmVmb3JlXG4gICAgICAgICAgLy8gbGlmdGluZyBmaW5nZXIgb3IgbW91c2UgdnMuIG1vdmluZyBzbG93bHkgYmVmb3JlIGxpZnRpbmcgdGhlIGZpbmdlci9tb3VzZS5cbiAgICAgICAgICAvLyBGb3IgZmFzdGVyIHN3aXBlcywgYWxzbyBhcHBseSBsaW1pdHMgKGFsYmVpdCBoaWdoZXIgb25lcykuXG4gICAgICAgICAgY29uc3QgbW92ZURpc3RhbmNlID0gTWF0aC5hYnMoKHJ0bCA/IC1uZXdQb3NpdGlvbiA6IG5ld1Bvc2l0aW9uKSAtIHN3aXBlci50cmFuc2xhdGUpO1xuICAgICAgICAgIGNvbnN0IGN1cnJlbnRTbGlkZVNpemUgPSBzd2lwZXIuc2xpZGVzU2l6ZXNHcmlkW3N3aXBlci5hY3RpdmVJbmRleF07XG4gICAgICAgICAgaWYgKG1vdmVEaXN0YW5jZSA8IGN1cnJlbnRTbGlkZVNpemUpIHtcbiAgICAgICAgICAgIG1vbWVudHVtRHVyYXRpb24gPSBwYXJhbXMuc3BlZWQ7XG4gICAgICAgICAgfSBlbHNlIGlmIChtb3ZlRGlzdGFuY2UgPCAyICogY3VycmVudFNsaWRlU2l6ZSkge1xuICAgICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IHBhcmFtcy5zcGVlZCAqIDEuNTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbW9tZW50dW1EdXJhdGlvbiA9IHBhcmFtcy5zcGVlZCAqIDIuNTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAocGFyYW1zLmZyZWVNb2RlU3RpY2t5KSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvQ2xvc2VzdCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChwYXJhbXMuZnJlZU1vZGVNb21lbnR1bUJvdW5jZSAmJiBkb0JvdW5jZSkge1xuICAgICAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MoYWZ0ZXJCb3VuY2VQb3NpdGlvbik7XG4gICAgICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKG1vbWVudHVtRHVyYXRpb24pO1xuICAgICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKG5ld1Bvc2l0aW9uKTtcbiAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25TdGFydCh0cnVlLCBzd2lwZXIuc3dpcGVEaXJlY3Rpb24pO1xuICAgICAgICBzd2lwZXIuYW5pbWF0aW5nID0gdHJ1ZTtcbiAgICAgICAgJHdyYXBwZXJFbC50cmFuc2l0aW9uRW5kKCgpID0+IHtcbiAgICAgICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkIHx8ICFkYXRhLmFsbG93TW9tZW50dW1Cb3VuY2UpIHJldHVybjtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgnbW9tZW50dW1Cb3VuY2UnKTtcbiAgICAgICAgICBzd2lwZXIuc2V0VHJhbnNpdGlvbihwYXJhbXMuc3BlZWQpO1xuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgc3dpcGVyLnNldFRyYW5zbGF0ZShhZnRlckJvdW5jZVBvc2l0aW9uKTtcbiAgICAgICAgICAgICR3cmFwcGVyRWwudHJhbnNpdGlvbkVuZCgoKSA9PiB7XG4gICAgICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25FbmQoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sIDApO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAoc3dpcGVyLnZlbG9jaXR5KSB7XG4gICAgICAgIHN3aXBlci51cGRhdGVQcm9ncmVzcyhuZXdQb3NpdGlvbik7XG4gICAgICAgIHN3aXBlci5zZXRUcmFuc2l0aW9uKG1vbWVudHVtRHVyYXRpb24pO1xuICAgICAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKG5ld1Bvc2l0aW9uKTtcbiAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25TdGFydCh0cnVlLCBzd2lwZXIuc3dpcGVEaXJlY3Rpb24pO1xuICAgICAgICBpZiAoIXN3aXBlci5hbmltYXRpbmcpIHtcbiAgICAgICAgICBzd2lwZXIuYW5pbWF0aW5nID0gdHJ1ZTtcbiAgICAgICAgICAkd3JhcHBlckVsLnRyYW5zaXRpb25FbmQoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFzd2lwZXIgfHwgc3dpcGVyLmRlc3Ryb3llZCkgcmV0dXJuO1xuICAgICAgICAgICAgc3dpcGVyLnRyYW5zaXRpb25FbmQoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKG5ld1Bvc2l0aW9uKTtcbiAgICAgIH1cblxuICAgICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICAgIH0gZWxzZSBpZiAocGFyYW1zLmZyZWVNb2RlU3RpY2t5KSB7XG4gICAgICBzd2lwZXIuc2xpZGVUb0Nsb3Nlc3QoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIXBhcmFtcy5mcmVlTW9kZU1vbWVudHVtIHx8IHRpbWVEaWZmID49IHBhcmFtcy5sb25nU3dpcGVzTXMpIHtcbiAgICAgIHN3aXBlci51cGRhdGVQcm9ncmVzcygpO1xuICAgICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBGaW5kIGN1cnJlbnQgc2xpZGVcbiAgbGV0IHN0b3BJbmRleCA9IDA7XG4gIGxldCBncm91cFNpemUgPSBzd2lwZXIuc2xpZGVzU2l6ZXNHcmlkWzBdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNsaWRlc0dyaWQubGVuZ3RoOyBpICs9IChpIDwgcGFyYW1zLnNsaWRlc1Blckdyb3VwU2tpcCA/IDEgOiBwYXJhbXMuc2xpZGVzUGVyR3JvdXApKSB7XG4gICAgY29uc3QgaW5jcmVtZW50ID0gKGkgPCBwYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwIC0gMSA/IDEgOiBwYXJhbXMuc2xpZGVzUGVyR3JvdXApO1xuICAgIGlmICh0eXBlb2Ygc2xpZGVzR3JpZFtpICsgaW5jcmVtZW50XSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGlmIChjdXJyZW50UG9zID49IHNsaWRlc0dyaWRbaV0gJiYgY3VycmVudFBvcyA8IHNsaWRlc0dyaWRbaSArIGluY3JlbWVudF0pIHtcbiAgICAgICAgc3RvcEluZGV4ID0gaTtcbiAgICAgICAgZ3JvdXBTaXplID0gc2xpZGVzR3JpZFtpICsgaW5jcmVtZW50XSAtIHNsaWRlc0dyaWRbaV07XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChjdXJyZW50UG9zID49IHNsaWRlc0dyaWRbaV0pIHtcbiAgICAgIHN0b3BJbmRleCA9IGk7XG4gICAgICBncm91cFNpemUgPSBzbGlkZXNHcmlkW3NsaWRlc0dyaWQubGVuZ3RoIC0gMV0gLSBzbGlkZXNHcmlkW3NsaWRlc0dyaWQubGVuZ3RoIC0gMl07XG4gICAgfVxuICB9XG5cbiAgLy8gRmluZCBjdXJyZW50IHNsaWRlIHNpemVcbiAgY29uc3QgcmF0aW8gPSAoY3VycmVudFBvcyAtIHNsaWRlc0dyaWRbc3RvcEluZGV4XSkgLyBncm91cFNpemU7XG4gIGNvbnN0IGluY3JlbWVudCA9IChzdG9wSW5kZXggPCBwYXJhbXMuc2xpZGVzUGVyR3JvdXBTa2lwIC0gMSA/IDEgOiBwYXJhbXMuc2xpZGVzUGVyR3JvdXApO1xuXG4gIGlmICh0aW1lRGlmZiA+IHBhcmFtcy5sb25nU3dpcGVzTXMpIHtcbiAgICAvLyBMb25nIHRvdWNoZXNcbiAgICBpZiAoIXBhcmFtcy5sb25nU3dpcGVzKSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoc3dpcGVyLnN3aXBlRGlyZWN0aW9uID09PSAnbmV4dCcpIHtcbiAgICAgIGlmIChyYXRpbyA+PSBwYXJhbXMubG9uZ1N3aXBlc1JhdGlvKSBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXggKyBpbmNyZW1lbnQpO1xuICAgICAgZWxzZSBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXgpO1xuICAgIH1cbiAgICBpZiAoc3dpcGVyLnN3aXBlRGlyZWN0aW9uID09PSAncHJldicpIHtcbiAgICAgIGlmIChyYXRpbyA+ICgxIC0gcGFyYW1zLmxvbmdTd2lwZXNSYXRpbykpIHN3aXBlci5zbGlkZVRvKHN0b3BJbmRleCArIGluY3JlbWVudCk7XG4gICAgICBlbHNlIHN3aXBlci5zbGlkZVRvKHN0b3BJbmRleCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFNob3J0IHN3aXBlc1xuICAgIGlmICghcGFyYW1zLnNob3J0U3dpcGVzKSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpc05hdkJ1dHRvblRhcmdldCA9IHN3aXBlci5uYXZpZ2F0aW9uICYmIChlLnRhcmdldCA9PT0gc3dpcGVyLm5hdmlnYXRpb24ubmV4dEVsIHx8IGUudGFyZ2V0ID09PSBzd2lwZXIubmF2aWdhdGlvbi5wcmV2RWwpO1xuICAgIGlmICghaXNOYXZCdXR0b25UYXJnZXQpIHtcbiAgICAgIGlmIChzd2lwZXIuc3dpcGVEaXJlY3Rpb24gPT09ICduZXh0Jykge1xuICAgICAgICBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXggKyBpbmNyZW1lbnQpO1xuICAgICAgfVxuICAgICAgaWYgKHN3aXBlci5zd2lwZURpcmVjdGlvbiA9PT0gJ3ByZXYnKSB7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKHN0b3BJbmRleCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChlLnRhcmdldCA9PT0gc3dpcGVyLm5hdmlnYXRpb24ubmV4dEVsKSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXggKyBpbmNyZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzdG9wSW5kZXgpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBvblJlc2l6ZSAoKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG5cbiAgY29uc3QgeyBwYXJhbXMsIGVsIH0gPSBzd2lwZXI7XG5cbiAgaWYgKGVsICYmIGVsLm9mZnNldFdpZHRoID09PSAwKSByZXR1cm47XG5cbiAgLy8gQnJlYWtwb2ludHNcbiAgaWYgKHBhcmFtcy5icmVha3BvaW50cykge1xuICAgIHN3aXBlci5zZXRCcmVha3BvaW50KCk7XG4gIH1cblxuICAvLyBTYXZlIGxvY2tzXG4gIGNvbnN0IHsgYWxsb3dTbGlkZU5leHQsIGFsbG93U2xpZGVQcmV2LCBzbmFwR3JpZCB9ID0gc3dpcGVyO1xuXG4gIC8vIERpc2FibGUgbG9ja3Mgb24gcmVzaXplXG4gIHN3aXBlci5hbGxvd1NsaWRlTmV4dCA9IHRydWU7XG4gIHN3aXBlci5hbGxvd1NsaWRlUHJldiA9IHRydWU7XG5cbiAgc3dpcGVyLnVwZGF0ZVNpemUoKTtcbiAgc3dpcGVyLnVwZGF0ZVNsaWRlcygpO1xuXG4gIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG4gIGlmICgocGFyYW1zLnNsaWRlc1BlclZpZXcgPT09ICdhdXRvJyB8fCBwYXJhbXMuc2xpZGVzUGVyVmlldyA+IDEpICYmIHN3aXBlci5pc0VuZCAmJiAhc3dpcGVyLnBhcmFtcy5jZW50ZXJlZFNsaWRlcykge1xuICAgIHN3aXBlci5zbGlkZVRvKHN3aXBlci5zbGlkZXMubGVuZ3RoIC0gMSwgMCwgZmFsc2UsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHN3aXBlci5zbGlkZVRvKHN3aXBlci5hY3RpdmVJbmRleCwgMCwgZmFsc2UsIHRydWUpO1xuICB9XG5cbiAgaWYgKHN3aXBlci5hdXRvcGxheSAmJiBzd2lwZXIuYXV0b3BsYXkucnVubmluZyAmJiBzd2lwZXIuYXV0b3BsYXkucGF1c2VkKSB7XG4gICAgc3dpcGVyLmF1dG9wbGF5LnJ1bigpO1xuICB9XG4gIC8vIFJldHVybiBsb2NrcyBhZnRlciByZXNpemVcbiAgc3dpcGVyLmFsbG93U2xpZGVQcmV2ID0gYWxsb3dTbGlkZVByZXY7XG4gIHN3aXBlci5hbGxvd1NsaWRlTmV4dCA9IGFsbG93U2xpZGVOZXh0O1xuXG4gIGlmIChzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc25hcEdyaWQgIT09IHN3aXBlci5zbmFwR3JpZCkge1xuICAgIHN3aXBlci5jaGVja092ZXJmbG93KCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gb25DbGljayAoZSkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBpZiAoIXN3aXBlci5hbGxvd0NsaWNrKSB7XG4gICAgaWYgKHN3aXBlci5wYXJhbXMucHJldmVudENsaWNrcykgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmIChzd2lwZXIucGFyYW1zLnByZXZlbnRDbGlja3NQcm9wYWdhdGlvbiAmJiBzd2lwZXIuYW5pbWF0aW5nKSB7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gb25TY3JvbGwgKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCB7IHdyYXBwZXJFbCwgcnRsVHJhbnNsYXRlIH0gPSBzd2lwZXI7XG4gIHN3aXBlci5wcmV2aW91c1RyYW5zbGF0ZSA9IHN3aXBlci50cmFuc2xhdGU7XG4gIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICBpZiAocnRsVHJhbnNsYXRlKSB7XG4gICAgICBzd2lwZXIudHJhbnNsYXRlID0gKCh3cmFwcGVyRWwuc2Nyb2xsV2lkdGggLSB3cmFwcGVyRWwub2Zmc2V0V2lkdGgpIC0gd3JhcHBlckVsLnNjcm9sbExlZnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIudHJhbnNsYXRlID0gLXdyYXBwZXJFbC5zY3JvbGxMZWZ0O1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBzd2lwZXIudHJhbnNsYXRlID0gLXdyYXBwZXJFbC5zY3JvbGxUb3A7XG4gIH1cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gIGlmIChzd2lwZXIudHJhbnNsYXRlID09PSAtMCkgc3dpcGVyLnRyYW5zbGF0ZSA9IDA7XG5cbiAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG5cbiAgbGV0IG5ld1Byb2dyZXNzO1xuICBjb25zdCB0cmFuc2xhdGVzRGlmZiA9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSAtIHN3aXBlci5taW5UcmFuc2xhdGUoKTtcbiAgaWYgKHRyYW5zbGF0ZXNEaWZmID09PSAwKSB7XG4gICAgbmV3UHJvZ3Jlc3MgPSAwO1xuICB9IGVsc2Uge1xuICAgIG5ld1Byb2dyZXNzID0gKHN3aXBlci50cmFuc2xhdGUgLSBzd2lwZXIubWluVHJhbnNsYXRlKCkpIC8gKHRyYW5zbGF0ZXNEaWZmKTtcbiAgfVxuICBpZiAobmV3UHJvZ3Jlc3MgIT09IHN3aXBlci5wcm9ncmVzcykge1xuICAgIHN3aXBlci51cGRhdGVQcm9ncmVzcyhydGxUcmFuc2xhdGUgPyAtc3dpcGVyLnRyYW5zbGF0ZSA6IHN3aXBlci50cmFuc2xhdGUpO1xuICB9XG5cbiAgc3dpcGVyLmVtaXQoJ3NldFRyYW5zbGF0ZScsIHN3aXBlci50cmFuc2xhdGUsIGZhbHNlKTtcbn1cblxubGV0IGR1bW15RXZlbnRBdHRhY2hlZCA9IGZhbHNlO1xuZnVuY3Rpb24gZHVtbXlFdmVudExpc3RlbmVyKCkge31cblxuZnVuY3Rpb24gYXR0YWNoRXZlbnRzKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCB7XG4gICAgcGFyYW1zLCB0b3VjaEV2ZW50cywgZWwsIHdyYXBwZXJFbCxcbiAgfSA9IHN3aXBlcjtcblxuICBzd2lwZXIub25Ub3VjaFN0YXJ0ID0gb25Ub3VjaFN0YXJ0LmJpbmQoc3dpcGVyKTtcbiAgc3dpcGVyLm9uVG91Y2hNb3ZlID0gb25Ub3VjaE1vdmUuYmluZChzd2lwZXIpO1xuICBzd2lwZXIub25Ub3VjaEVuZCA9IG9uVG91Y2hFbmQuYmluZChzd2lwZXIpO1xuICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICBzd2lwZXIub25TY3JvbGwgPSBvblNjcm9sbC5iaW5kKHN3aXBlcik7XG4gIH1cblxuICBzd2lwZXIub25DbGljayA9IG9uQ2xpY2suYmluZChzd2lwZXIpO1xuXG4gIGNvbnN0IGNhcHR1cmUgPSAhIXBhcmFtcy5uZXN0ZWQ7XG5cbiAgLy8gVG91Y2ggRXZlbnRzXG4gIGlmICghU3VwcG9ydC50b3VjaCAmJiBTdXBwb3J0LnBvaW50ZXJFdmVudHMpIHtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLnN0YXJ0LCBzd2lwZXIub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG4gICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMubW92ZSwgc3dpcGVyLm9uVG91Y2hNb3ZlLCBjYXB0dXJlKTtcbiAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5lbmQsIHN3aXBlci5vblRvdWNoRW5kLCBmYWxzZSk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKFN1cHBvcnQudG91Y2gpIHtcbiAgICAgIGNvbnN0IHBhc3NpdmVMaXN0ZW5lciA9IHRvdWNoRXZlbnRzLnN0YXJ0ID09PSAndG91Y2hzdGFydCcgJiYgU3VwcG9ydC5wYXNzaXZlTGlzdGVuZXIgJiYgcGFyYW1zLnBhc3NpdmVMaXN0ZW5lcnMgPyB7IHBhc3NpdmU6IHRydWUsIGNhcHR1cmU6IGZhbHNlIH0gOiBmYWxzZTtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMuc3RhcnQsIHN3aXBlci5vblRvdWNoU3RhcnQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLm1vdmUsIHN3aXBlci5vblRvdWNoTW92ZSwgU3VwcG9ydC5wYXNzaXZlTGlzdGVuZXIgPyB7IHBhc3NpdmU6IGZhbHNlLCBjYXB0dXJlIH0gOiBjYXB0dXJlKTtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMuZW5kLCBzd2lwZXIub25Ub3VjaEVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIGlmICh0b3VjaEV2ZW50cy5jYW5jZWwpIHtcbiAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5jYW5jZWwsIHN3aXBlci5vblRvdWNoRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgfVxuICAgICAgaWYgKCFkdW1teUV2ZW50QXR0YWNoZWQpIHtcbiAgICAgICAgZG9jLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBkdW1teUV2ZW50TGlzdGVuZXIpO1xuICAgICAgICBkdW1teUV2ZW50QXR0YWNoZWQgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoKHBhcmFtcy5zaW11bGF0ZVRvdWNoICYmICFEZXZpY2UuaW9zICYmICFEZXZpY2UuYW5kcm9pZCkgfHwgKHBhcmFtcy5zaW11bGF0ZVRvdWNoICYmICFTdXBwb3J0LnRvdWNoICYmIERldmljZS5pb3MpKSB7XG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBzd2lwZXIub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG4gICAgICBkb2MuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgc3dpcGVyLm9uVG91Y2hNb3ZlLCBjYXB0dXJlKTtcbiAgICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgc3dpcGVyLm9uVG91Y2hFbmQsIGZhbHNlKTtcbiAgICB9XG4gIH1cbiAgLy8gUHJldmVudCBMaW5rcyBDbGlja3NcbiAgaWYgKHBhcmFtcy5wcmV2ZW50Q2xpY2tzIHx8IHBhcmFtcy5wcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24pIHtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHN3aXBlci5vbkNsaWNrLCB0cnVlKTtcbiAgfVxuICBpZiAocGFyYW1zLmNzc01vZGUpIHtcbiAgICB3cmFwcGVyRWwuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgc3dpcGVyLm9uU2Nyb2xsKTtcbiAgfVxuXG4gIC8vIFJlc2l6ZSBoYW5kbGVyXG4gIGlmIChwYXJhbXMudXBkYXRlT25XaW5kb3dSZXNpemUpIHtcbiAgICBzd2lwZXIub24oKERldmljZS5pb3MgfHwgRGV2aWNlLmFuZHJvaWQgPyAncmVzaXplIG9yaWVudGF0aW9uY2hhbmdlIG9ic2VydmVyVXBkYXRlJyA6ICdyZXNpemUgb2JzZXJ2ZXJVcGRhdGUnKSwgb25SZXNpemUsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHN3aXBlci5vbignb2JzZXJ2ZXJVcGRhdGUnLCBvblJlc2l6ZSwgdHJ1ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZGV0YWNoRXZlbnRzKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuXG4gIGNvbnN0IHtcbiAgICBwYXJhbXMsIHRvdWNoRXZlbnRzLCBlbCwgd3JhcHBlckVsLFxuICB9ID0gc3dpcGVyO1xuXG4gIGNvbnN0IGNhcHR1cmUgPSAhIXBhcmFtcy5uZXN0ZWQ7XG5cbiAgLy8gVG91Y2ggRXZlbnRzXG4gIGlmICghU3VwcG9ydC50b3VjaCAmJiBTdXBwb3J0LnBvaW50ZXJFdmVudHMpIHtcbiAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzLnN0YXJ0LCBzd2lwZXIub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG4gICAgZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMubW92ZSwgc3dpcGVyLm9uVG91Y2hNb3ZlLCBjYXB0dXJlKTtcbiAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5lbmQsIHN3aXBlci5vblRvdWNoRW5kLCBmYWxzZSk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKFN1cHBvcnQudG91Y2gpIHtcbiAgICAgIGNvbnN0IHBhc3NpdmVMaXN0ZW5lciA9IHRvdWNoRXZlbnRzLnN0YXJ0ID09PSAnb25Ub3VjaFN0YXJ0JyAmJiBTdXBwb3J0LnBhc3NpdmVMaXN0ZW5lciAmJiBwYXJhbXMucGFzc2l2ZUxpc3RlbmVycyA/IHsgcGFzc2l2ZTogdHJ1ZSwgY2FwdHVyZTogZmFsc2UgfSA6IGZhbHNlO1xuICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5zdGFydCwgc3dpcGVyLm9uVG91Y2hTdGFydCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMubW92ZSwgc3dpcGVyLm9uVG91Y2hNb3ZlLCBjYXB0dXJlKTtcbiAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHMuZW5kLCBzd2lwZXIub25Ub3VjaEVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIGlmICh0b3VjaEV2ZW50cy5jYW5jZWwpIHtcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50cy5jYW5jZWwsIHN3aXBlci5vblRvdWNoRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoKHBhcmFtcy5zaW11bGF0ZVRvdWNoICYmICFEZXZpY2UuaW9zICYmICFEZXZpY2UuYW5kcm9pZCkgfHwgKHBhcmFtcy5zaW11bGF0ZVRvdWNoICYmICFTdXBwb3J0LnRvdWNoICYmIERldmljZS5pb3MpKSB7XG4gICAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBzd2lwZXIub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG4gICAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgc3dpcGVyLm9uVG91Y2hNb3ZlLCBjYXB0dXJlKTtcbiAgICAgIGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgc3dpcGVyLm9uVG91Y2hFbmQsIGZhbHNlKTtcbiAgICB9XG4gIH1cbiAgLy8gUHJldmVudCBMaW5rcyBDbGlja3NcbiAgaWYgKHBhcmFtcy5wcmV2ZW50Q2xpY2tzIHx8IHBhcmFtcy5wcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24pIHtcbiAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHN3aXBlci5vbkNsaWNrLCB0cnVlKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMuY3NzTW9kZSkge1xuICAgIHdyYXBwZXJFbC5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBzd2lwZXIub25TY3JvbGwpO1xuICB9XG5cbiAgLy8gUmVzaXplIGhhbmRsZXJcbiAgc3dpcGVyLm9mZigoRGV2aWNlLmlvcyB8fCBEZXZpY2UuYW5kcm9pZCA/ICdyZXNpemUgb3JpZW50YXRpb25jaGFuZ2Ugb2JzZXJ2ZXJVcGRhdGUnIDogJ3Jlc2l6ZSBvYnNlcnZlclVwZGF0ZScpLCBvblJlc2l6ZSk7XG59XG5cbnZhciBldmVudHMgPSB7XG4gIGF0dGFjaEV2ZW50cyxcbiAgZGV0YWNoRXZlbnRzLFxufTtcblxuZnVuY3Rpb24gc2V0QnJlYWtwb2ludCAoKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHtcbiAgICBhY3RpdmVJbmRleCwgaW5pdGlhbGl6ZWQsIGxvb3BlZFNsaWRlcyA9IDAsIHBhcmFtcywgJGVsLFxuICB9ID0gc3dpcGVyO1xuICBjb25zdCBicmVha3BvaW50cyA9IHBhcmFtcy5icmVha3BvaW50cztcbiAgaWYgKCFicmVha3BvaW50cyB8fCAoYnJlYWtwb2ludHMgJiYgT2JqZWN0LmtleXMoYnJlYWtwb2ludHMpLmxlbmd0aCA9PT0gMCkpIHJldHVybjtcblxuICAvLyBHZXQgYnJlYWtwb2ludCBmb3Igd2luZG93IHdpZHRoIGFuZCB1cGRhdGUgcGFyYW1ldGVyc1xuICBjb25zdCBicmVha3BvaW50ID0gc3dpcGVyLmdldEJyZWFrcG9pbnQoYnJlYWtwb2ludHMpO1xuXG4gIGlmIChicmVha3BvaW50ICYmIHN3aXBlci5jdXJyZW50QnJlYWtwb2ludCAhPT0gYnJlYWtwb2ludCkge1xuICAgIGNvbnN0IGJyZWFrcG9pbnRPbmx5UGFyYW1zID0gYnJlYWtwb2ludCBpbiBicmVha3BvaW50cyA/IGJyZWFrcG9pbnRzW2JyZWFrcG9pbnRdIDogdW5kZWZpbmVkO1xuICAgIGlmIChicmVha3BvaW50T25seVBhcmFtcykge1xuICAgICAgWydzbGlkZXNQZXJWaWV3JywgJ3NwYWNlQmV0d2VlbicsICdzbGlkZXNQZXJHcm91cCcsICdzbGlkZXNQZXJHcm91cFNraXAnLCAnc2xpZGVzUGVyQ29sdW1uJ10uZm9yRWFjaCgocGFyYW0pID0+IHtcbiAgICAgICAgY29uc3QgcGFyYW1WYWx1ZSA9IGJyZWFrcG9pbnRPbmx5UGFyYW1zW3BhcmFtXTtcbiAgICAgICAgaWYgKHR5cGVvZiBwYXJhbVZhbHVlID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xuICAgICAgICBpZiAocGFyYW0gPT09ICdzbGlkZXNQZXJWaWV3JyAmJiAocGFyYW1WYWx1ZSA9PT0gJ0FVVE8nIHx8IHBhcmFtVmFsdWUgPT09ICdhdXRvJykpIHtcbiAgICAgICAgICBicmVha3BvaW50T25seVBhcmFtc1twYXJhbV0gPSAnYXV0byc7XG4gICAgICAgIH0gZWxzZSBpZiAocGFyYW0gPT09ICdzbGlkZXNQZXJWaWV3Jykge1xuICAgICAgICAgIGJyZWFrcG9pbnRPbmx5UGFyYW1zW3BhcmFtXSA9IHBhcnNlRmxvYXQocGFyYW1WYWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYnJlYWtwb2ludE9ubHlQYXJhbXNbcGFyYW1dID0gcGFyc2VJbnQocGFyYW1WYWx1ZSwgMTApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBicmVha3BvaW50UGFyYW1zID0gYnJlYWtwb2ludE9ubHlQYXJhbXMgfHwgc3dpcGVyLm9yaWdpbmFsUGFyYW1zO1xuICAgIGNvbnN0IHdhc011bHRpUm93ID0gcGFyYW1zLnNsaWRlc1BlckNvbHVtbiA+IDE7XG4gICAgY29uc3QgaXNNdWx0aVJvdyA9IGJyZWFrcG9pbnRQYXJhbXMuc2xpZGVzUGVyQ29sdW1uID4gMTtcbiAgICBpZiAod2FzTXVsdGlSb3cgJiYgIWlzTXVsdGlSb3cpIHtcbiAgICAgICRlbC5yZW1vdmVDbGFzcyhgJHtwYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzc31tdWx0aXJvdyAke3BhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzfW11bHRpcm93LWNvbHVtbmApO1xuICAgIH0gZWxzZSBpZiAoIXdhc011bHRpUm93ICYmIGlzTXVsdGlSb3cpIHtcbiAgICAgICRlbC5hZGRDbGFzcyhgJHtwYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzc31tdWx0aXJvd2ApO1xuICAgICAgaWYgKGJyZWFrcG9pbnRQYXJhbXMuc2xpZGVzUGVyQ29sdW1uRmlsbCA9PT0gJ2NvbHVtbicpIHtcbiAgICAgICAgJGVsLmFkZENsYXNzKGAke3BhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzfW11bHRpcm93LWNvbHVtbmApO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGRpcmVjdGlvbkNoYW5nZWQgPSBicmVha3BvaW50UGFyYW1zLmRpcmVjdGlvbiAmJiBicmVha3BvaW50UGFyYW1zLmRpcmVjdGlvbiAhPT0gcGFyYW1zLmRpcmVjdGlvbjtcbiAgICBjb25zdCBuZWVkc1JlTG9vcCA9IHBhcmFtcy5sb29wICYmIChicmVha3BvaW50UGFyYW1zLnNsaWRlc1BlclZpZXcgIT09IHBhcmFtcy5zbGlkZXNQZXJWaWV3IHx8IGRpcmVjdGlvbkNoYW5nZWQpO1xuXG4gICAgaWYgKGRpcmVjdGlvbkNoYW5nZWQgJiYgaW5pdGlhbGl6ZWQpIHtcbiAgICAgIHN3aXBlci5jaGFuZ2VEaXJlY3Rpb24oKTtcbiAgICB9XG5cbiAgICBVdGlscy5leHRlbmQoc3dpcGVyLnBhcmFtcywgYnJlYWtwb2ludFBhcmFtcyk7XG5cbiAgICBVdGlscy5leHRlbmQoc3dpcGVyLCB7XG4gICAgICBhbGxvd1RvdWNoTW92ZTogc3dpcGVyLnBhcmFtcy5hbGxvd1RvdWNoTW92ZSxcbiAgICAgIGFsbG93U2xpZGVOZXh0OiBzd2lwZXIucGFyYW1zLmFsbG93U2xpZGVOZXh0LFxuICAgICAgYWxsb3dTbGlkZVByZXY6IHN3aXBlci5wYXJhbXMuYWxsb3dTbGlkZVByZXYsXG4gICAgfSk7XG5cbiAgICBzd2lwZXIuY3VycmVudEJyZWFrcG9pbnQgPSBicmVha3BvaW50O1xuXG4gICAgaWYgKG5lZWRzUmVMb29wICYmIGluaXRpYWxpemVkKSB7XG4gICAgICBzd2lwZXIubG9vcERlc3Ryb3koKTtcbiAgICAgIHN3aXBlci5sb29wQ3JlYXRlKCk7XG4gICAgICBzd2lwZXIudXBkYXRlU2xpZGVzKCk7XG4gICAgICBzd2lwZXIuc2xpZGVUbygoYWN0aXZlSW5kZXggLSBsb29wZWRTbGlkZXMpICsgc3dpcGVyLmxvb3BlZFNsaWRlcywgMCwgZmFsc2UpO1xuICAgIH1cblxuICAgIHN3aXBlci5lbWl0KCdicmVha3BvaW50JywgYnJlYWtwb2ludFBhcmFtcyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0QnJlYWtwb2ludCAoYnJlYWtwb2ludHMpIHtcbiAgLy8gR2V0IGJyZWFrcG9pbnQgZm9yIHdpbmRvdyB3aWR0aFxuICBpZiAoIWJyZWFrcG9pbnRzKSByZXR1cm4gdW5kZWZpbmVkO1xuICBsZXQgYnJlYWtwb2ludCA9IGZhbHNlO1xuXG4gIGNvbnN0IHBvaW50cyA9IE9iamVjdC5rZXlzKGJyZWFrcG9pbnRzKS5tYXAoKHBvaW50KSA9PiB7XG4gICAgaWYgKHR5cGVvZiBwb2ludCA9PT0gJ3N0cmluZycgJiYgcG9pbnQuaW5kZXhPZignQCcpID09PSAwKSB7XG4gICAgICBjb25zdCBtaW5SYXRpbyA9IHBhcnNlRmxvYXQocG9pbnQuc3Vic3RyKDEpKTtcbiAgICAgIGNvbnN0IHZhbHVlID0gd2luLmlubmVySGVpZ2h0ICogbWluUmF0aW87XG4gICAgICByZXR1cm4geyB2YWx1ZSwgcG9pbnQgfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgdmFsdWU6IHBvaW50LCBwb2ludCB9O1xuICB9KTtcblxuICBwb2ludHMuc29ydCgoYSwgYikgPT4gcGFyc2VJbnQoYS52YWx1ZSwgMTApIC0gcGFyc2VJbnQoYi52YWx1ZSwgMTApKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb2ludHMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBjb25zdCB7IHBvaW50LCB2YWx1ZSB9ID0gcG9pbnRzW2ldO1xuICAgIGlmICh2YWx1ZSA8PSB3aW4uaW5uZXJXaWR0aCkge1xuICAgICAgYnJlYWtwb2ludCA9IHBvaW50O1xuICAgIH1cbiAgfVxuICByZXR1cm4gYnJlYWtwb2ludCB8fCAnbWF4Jztcbn1cblxudmFyIGJyZWFrcG9pbnRzID0geyBzZXRCcmVha3BvaW50LCBnZXRCcmVha3BvaW50IH07XG5cbmZ1bmN0aW9uIGFkZENsYXNzZXMgKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCB7XG4gICAgY2xhc3NOYW1lcywgcGFyYW1zLCBydGwsICRlbCxcbiAgfSA9IHN3aXBlcjtcbiAgY29uc3Qgc3VmZml4ZXMgPSBbXTtcblxuICBzdWZmaXhlcy5wdXNoKCdpbml0aWFsaXplZCcpO1xuICBzdWZmaXhlcy5wdXNoKHBhcmFtcy5kaXJlY3Rpb24pO1xuXG4gIGlmIChwYXJhbXMuZnJlZU1vZGUpIHtcbiAgICBzdWZmaXhlcy5wdXNoKCdmcmVlLW1vZGUnKTtcbiAgfVxuICBpZiAocGFyYW1zLmF1dG9IZWlnaHQpIHtcbiAgICBzdWZmaXhlcy5wdXNoKCdhdXRvaGVpZ2h0Jyk7XG4gIH1cbiAgaWYgKHJ0bCkge1xuICAgIHN1ZmZpeGVzLnB1c2goJ3J0bCcpO1xuICB9XG4gIGlmIChwYXJhbXMuc2xpZGVzUGVyQ29sdW1uID4gMSkge1xuICAgIHN1ZmZpeGVzLnB1c2goJ211bHRpcm93Jyk7XG4gICAgaWYgKHBhcmFtcy5zbGlkZXNQZXJDb2x1bW5GaWxsID09PSAnY29sdW1uJykge1xuICAgICAgc3VmZml4ZXMucHVzaCgnbXVsdGlyb3ctY29sdW1uJyk7XG4gICAgfVxuICB9XG4gIGlmIChEZXZpY2UuYW5kcm9pZCkge1xuICAgIHN1ZmZpeGVzLnB1c2goJ2FuZHJvaWQnKTtcbiAgfVxuICBpZiAoRGV2aWNlLmlvcykge1xuICAgIHN1ZmZpeGVzLnB1c2goJ2lvcycpO1xuICB9XG5cbiAgaWYgKHBhcmFtcy5jc3NNb2RlKSB7XG4gICAgc3VmZml4ZXMucHVzaCgnY3NzLW1vZGUnKTtcbiAgfVxuXG4gIHN1ZmZpeGVzLmZvckVhY2goKHN1ZmZpeCkgPT4ge1xuICAgIGNsYXNzTmFtZXMucHVzaChwYXJhbXMuY29udGFpbmVyTW9kaWZpZXJDbGFzcyArIHN1ZmZpeCk7XG4gIH0pO1xuXG4gICRlbC5hZGRDbGFzcyhjbGFzc05hbWVzLmpvaW4oJyAnKSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUNsYXNzZXMgKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBjb25zdCB7ICRlbCwgY2xhc3NOYW1lcyB9ID0gc3dpcGVyO1xuXG4gICRlbC5yZW1vdmVDbGFzcyhjbGFzc05hbWVzLmpvaW4oJyAnKSk7XG59XG5cbnZhciBjbGFzc2VzID0geyBhZGRDbGFzc2VzLCByZW1vdmVDbGFzc2VzIH07XG5cbmZ1bmN0aW9uIGxvYWRJbWFnZSAoaW1hZ2VFbCwgc3JjLCBzcmNzZXQsIHNpemVzLCBjaGVja0ZvckNvbXBsZXRlLCBjYWxsYmFjaykge1xuICBsZXQgaW1hZ2U7XG4gIGZ1bmN0aW9uIG9uUmVhZHkoKSB7XG4gICAgaWYgKGNhbGxiYWNrKSBjYWxsYmFjaygpO1xuICB9XG4gIGNvbnN0IGlzUGljdHVyZSA9ICQoaW1hZ2VFbCkucGFyZW50KCdwaWN0dXJlJylbMF07XG5cbiAgaWYgKCFpc1BpY3R1cmUgJiYgKCFpbWFnZUVsLmNvbXBsZXRlIHx8ICFjaGVja0ZvckNvbXBsZXRlKSkge1xuICAgIGlmIChzcmMpIHtcbiAgICAgIGltYWdlID0gbmV3IHdpbi5JbWFnZSgpO1xuICAgICAgaW1hZ2Uub25sb2FkID0gb25SZWFkeTtcbiAgICAgIGltYWdlLm9uZXJyb3IgPSBvblJlYWR5O1xuICAgICAgaWYgKHNpemVzKSB7XG4gICAgICAgIGltYWdlLnNpemVzID0gc2l6ZXM7XG4gICAgICB9XG4gICAgICBpZiAoc3Jjc2V0KSB7XG4gICAgICAgIGltYWdlLnNyY3NldCA9IHNyY3NldDtcbiAgICAgIH1cbiAgICAgIGlmIChzcmMpIHtcbiAgICAgICAgaW1hZ2Uuc3JjID0gc3JjO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBvblJlYWR5KCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIGltYWdlIGFscmVhZHkgbG9hZGVkLi4uXG4gICAgb25SZWFkeSgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHByZWxvYWRJbWFnZXMgKCkge1xuICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICBzd2lwZXIuaW1hZ2VzVG9Mb2FkID0gc3dpcGVyLiRlbC5maW5kKCdpbWcnKTtcbiAgZnVuY3Rpb24gb25SZWFkeSgpIHtcbiAgICBpZiAodHlwZW9mIHN3aXBlciA9PT0gJ3VuZGVmaW5lZCcgfHwgc3dpcGVyID09PSBudWxsIHx8ICFzd2lwZXIgfHwgc3dpcGVyLmRlc3Ryb3llZCkgcmV0dXJuO1xuICAgIGlmIChzd2lwZXIuaW1hZ2VzTG9hZGVkICE9PSB1bmRlZmluZWQpIHN3aXBlci5pbWFnZXNMb2FkZWQgKz0gMTtcbiAgICBpZiAoc3dpcGVyLmltYWdlc0xvYWRlZCA9PT0gc3dpcGVyLmltYWdlc1RvTG9hZC5sZW5ndGgpIHtcbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLnVwZGF0ZU9uSW1hZ2VzUmVhZHkpIHN3aXBlci51cGRhdGUoKTtcbiAgICAgIHN3aXBlci5lbWl0KCdpbWFnZXNSZWFkeScpO1xuICAgIH1cbiAgfVxuICBmb3IgKGxldCBpID0gMDsgaSA8IHN3aXBlci5pbWFnZXNUb0xvYWQubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBjb25zdCBpbWFnZUVsID0gc3dpcGVyLmltYWdlc1RvTG9hZFtpXTtcbiAgICBzd2lwZXIubG9hZEltYWdlKFxuICAgICAgaW1hZ2VFbCxcbiAgICAgIGltYWdlRWwuY3VycmVudFNyYyB8fCBpbWFnZUVsLmdldEF0dHJpYnV0ZSgnc3JjJyksXG4gICAgICBpbWFnZUVsLnNyY3NldCB8fCBpbWFnZUVsLmdldEF0dHJpYnV0ZSgnc3Jjc2V0JyksXG4gICAgICBpbWFnZUVsLnNpemVzIHx8IGltYWdlRWwuZ2V0QXR0cmlidXRlKCdzaXplcycpLFxuICAgICAgdHJ1ZSxcbiAgICAgIG9uUmVhZHlcbiAgICApO1xuICB9XG59XG5cbnZhciBpbWFnZXMgPSB7XG4gIGxvYWRJbWFnZSxcbiAgcHJlbG9hZEltYWdlcyxcbn07XG5cbmZ1bmN0aW9uIGNoZWNrT3ZlcmZsb3coKSB7XG4gIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gIGNvbnN0IHBhcmFtcyA9IHN3aXBlci5wYXJhbXM7XG4gIGNvbnN0IHdhc0xvY2tlZCA9IHN3aXBlci5pc0xvY2tlZDtcbiAgY29uc3QgbGFzdFNsaWRlUG9zaXRpb24gPSBzd2lwZXIuc2xpZGVzLmxlbmd0aCA+IDAgJiYgKHBhcmFtcy5zbGlkZXNPZmZzZXRCZWZvcmUgKyAocGFyYW1zLnNwYWNlQmV0d2VlbiAqIChzd2lwZXIuc2xpZGVzLmxlbmd0aCAtIDEpKSArICgoc3dpcGVyLnNsaWRlc1swXSkub2Zmc2V0V2lkdGgpICogc3dpcGVyLnNsaWRlcy5sZW5ndGgpO1xuXG4gIGlmIChwYXJhbXMuc2xpZGVzT2Zmc2V0QmVmb3JlICYmIHBhcmFtcy5zbGlkZXNPZmZzZXRBZnRlciAmJiBsYXN0U2xpZGVQb3NpdGlvbikge1xuICAgIHN3aXBlci5pc0xvY2tlZCA9IGxhc3RTbGlkZVBvc2l0aW9uIDw9IHN3aXBlci5zaXplO1xuICB9IGVsc2Uge1xuICAgIHN3aXBlci5pc0xvY2tlZCA9IHN3aXBlci5zbmFwR3JpZC5sZW5ndGggPT09IDE7XG4gIH1cblxuICBzd2lwZXIuYWxsb3dTbGlkZU5leHQgPSAhc3dpcGVyLmlzTG9ja2VkO1xuICBzd2lwZXIuYWxsb3dTbGlkZVByZXYgPSAhc3dpcGVyLmlzTG9ja2VkO1xuXG4gIC8vIGV2ZW50c1xuICBpZiAod2FzTG9ja2VkICE9PSBzd2lwZXIuaXNMb2NrZWQpIHN3aXBlci5lbWl0KHN3aXBlci5pc0xvY2tlZCA/ICdsb2NrJyA6ICd1bmxvY2snKTtcblxuICBpZiAod2FzTG9ja2VkICYmIHdhc0xvY2tlZCAhPT0gc3dpcGVyLmlzTG9ja2VkKSB7XG4gICAgc3dpcGVyLmlzRW5kID0gZmFsc2U7XG4gICAgc3dpcGVyLm5hdmlnYXRpb24udXBkYXRlKCk7XG4gIH1cbn1cblxudmFyIGNoZWNrT3ZlcmZsb3ckMSA9IHsgY2hlY2tPdmVyZmxvdyB9O1xuXG52YXIgZGVmYXVsdHMgPSB7XG4gIGluaXQ6IHRydWUsXG4gIGRpcmVjdGlvbjogJ2hvcml6b250YWwnLFxuICB0b3VjaEV2ZW50c1RhcmdldDogJ2NvbnRhaW5lcicsXG4gIGluaXRpYWxTbGlkZTogMCxcbiAgc3BlZWQ6IDMwMCxcbiAgY3NzTW9kZTogZmFsc2UsXG4gIHVwZGF0ZU9uV2luZG93UmVzaXplOiB0cnVlLFxuICAvL1xuICBwcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb246IGZhbHNlLFxuXG4gIC8vIFRvIHN1cHBvcnQgaU9TJ3Mgc3dpcGUtdG8tZ28tYmFjayBnZXN0dXJlICh3aGVuIGJlaW5nIHVzZWQgaW4tYXBwLCB3aXRoIFVJV2ViVmlldykuXG4gIGVkZ2VTd2lwZURldGVjdGlvbjogZmFsc2UsXG4gIGVkZ2VTd2lwZVRocmVzaG9sZDogMjAsXG5cbiAgLy8gRnJlZSBtb2RlXG4gIGZyZWVNb2RlOiBmYWxzZSxcbiAgZnJlZU1vZGVNb21lbnR1bTogdHJ1ZSxcbiAgZnJlZU1vZGVNb21lbnR1bVJhdGlvOiAxLFxuICBmcmVlTW9kZU1vbWVudHVtQm91bmNlOiB0cnVlLFxuICBmcmVlTW9kZU1vbWVudHVtQm91bmNlUmF0aW86IDEsXG4gIGZyZWVNb2RlTW9tZW50dW1WZWxvY2l0eVJhdGlvOiAxLFxuICBmcmVlTW9kZVN0aWNreTogZmFsc2UsXG4gIGZyZWVNb2RlTWluaW11bVZlbG9jaXR5OiAwLjAyLFxuXG4gIC8vIEF1dG9oZWlnaHRcbiAgYXV0b0hlaWdodDogZmFsc2UsXG5cbiAgLy8gU2V0IHdyYXBwZXIgd2lkdGhcbiAgc2V0V3JhcHBlclNpemU6IGZhbHNlLFxuXG4gIC8vIFZpcnR1YWwgVHJhbnNsYXRlXG4gIHZpcnR1YWxUcmFuc2xhdGU6IGZhbHNlLFxuXG4gIC8vIEVmZmVjdHNcbiAgZWZmZWN0OiAnc2xpZGUnLCAvLyAnc2xpZGUnIG9yICdmYWRlJyBvciAnY3ViZScgb3IgJ2NvdmVyZmxvdycgb3IgJ2ZsaXAnXG5cbiAgLy8gQnJlYWtwb2ludHNcbiAgYnJlYWtwb2ludHM6IHVuZGVmaW5lZCxcblxuICAvLyBTbGlkZXMgZ3JpZFxuICBzcGFjZUJldHdlZW46IDAsXG4gIHNsaWRlc1BlclZpZXc6IDEsXG4gIHNsaWRlc1BlckNvbHVtbjogMSxcbiAgc2xpZGVzUGVyQ29sdW1uRmlsbDogJ2NvbHVtbicsXG4gIHNsaWRlc1Blckdyb3VwOiAxLFxuICBzbGlkZXNQZXJHcm91cFNraXA6IDAsXG4gIGNlbnRlcmVkU2xpZGVzOiBmYWxzZSxcbiAgY2VudGVyZWRTbGlkZXNCb3VuZHM6IGZhbHNlLFxuICBzbGlkZXNPZmZzZXRCZWZvcmU6IDAsIC8vIGluIHB4XG4gIHNsaWRlc09mZnNldEFmdGVyOiAwLCAvLyBpbiBweFxuICBub3JtYWxpemVTbGlkZUluZGV4OiB0cnVlLFxuICBjZW50ZXJJbnN1ZmZpY2llbnRTbGlkZXM6IGZhbHNlLFxuXG4gIC8vIERpc2FibGUgc3dpcGVyIGFuZCBoaWRlIG5hdmlnYXRpb24gd2hlbiBjb250YWluZXIgbm90IG92ZXJmbG93XG4gIHdhdGNoT3ZlcmZsb3c6IGZhbHNlLFxuXG4gIC8vIFJvdW5kIGxlbmd0aFxuICByb3VuZExlbmd0aHM6IGZhbHNlLFxuXG4gIC8vIFRvdWNoZXNcbiAgdG91Y2hSYXRpbzogMSxcbiAgdG91Y2hBbmdsZTogNDUsXG4gIHNpbXVsYXRlVG91Y2g6IHRydWUsXG4gIHNob3J0U3dpcGVzOiB0cnVlLFxuICBsb25nU3dpcGVzOiB0cnVlLFxuICBsb25nU3dpcGVzUmF0aW86IDAuNSxcbiAgbG9uZ1N3aXBlc01zOiAzMDAsXG4gIGZvbGxvd0ZpbmdlcjogdHJ1ZSxcbiAgYWxsb3dUb3VjaE1vdmU6IHRydWUsXG4gIHRocmVzaG9sZDogMCxcbiAgdG91Y2hNb3ZlU3RvcFByb3BhZ2F0aW9uOiBmYWxzZSxcbiAgdG91Y2hTdGFydFByZXZlbnREZWZhdWx0OiB0cnVlLFxuICB0b3VjaFN0YXJ0Rm9yY2VQcmV2ZW50RGVmYXVsdDogZmFsc2UsXG4gIHRvdWNoUmVsZWFzZU9uRWRnZXM6IGZhbHNlLFxuXG4gIC8vIFVuaXF1ZSBOYXZpZ2F0aW9uIEVsZW1lbnRzXG4gIHVuaXF1ZU5hdkVsZW1lbnRzOiB0cnVlLFxuXG4gIC8vIFJlc2lzdGFuY2VcbiAgcmVzaXN0YW5jZTogdHJ1ZSxcbiAgcmVzaXN0YW5jZVJhdGlvOiAwLjg1LFxuXG4gIC8vIFByb2dyZXNzXG4gIHdhdGNoU2xpZGVzUHJvZ3Jlc3M6IGZhbHNlLFxuICB3YXRjaFNsaWRlc1Zpc2liaWxpdHk6IGZhbHNlLFxuXG4gIC8vIEN1cnNvclxuICBncmFiQ3Vyc29yOiBmYWxzZSxcblxuICAvLyBDbGlja3NcbiAgcHJldmVudENsaWNrczogdHJ1ZSxcbiAgcHJldmVudENsaWNrc1Byb3BhZ2F0aW9uOiB0cnVlLFxuICBzbGlkZVRvQ2xpY2tlZFNsaWRlOiBmYWxzZSxcblxuICAvLyBJbWFnZXNcbiAgcHJlbG9hZEltYWdlczogdHJ1ZSxcbiAgdXBkYXRlT25JbWFnZXNSZWFkeTogdHJ1ZSxcblxuICAvLyBsb29wXG4gIGxvb3A6IGZhbHNlLFxuICBsb29wQWRkaXRpb25hbFNsaWRlczogMCxcbiAgbG9vcGVkU2xpZGVzOiBudWxsLFxuICBsb29wRmlsbEdyb3VwV2l0aEJsYW5rOiBmYWxzZSxcblxuICAvLyBTd2lwaW5nL25vIHN3aXBpbmdcbiAgYWxsb3dTbGlkZVByZXY6IHRydWUsXG4gIGFsbG93U2xpZGVOZXh0OiB0cnVlLFxuICBzd2lwZUhhbmRsZXI6IG51bGwsIC8vICcuc3dpcGUtaGFuZGxlcicsXG4gIG5vU3dpcGluZzogdHJ1ZSxcbiAgbm9Td2lwaW5nQ2xhc3M6ICdzd2lwZXItbm8tc3dpcGluZycsXG4gIG5vU3dpcGluZ1NlbGVjdG9yOiBudWxsLFxuXG4gIC8vIFBhc3NpdmUgTGlzdGVuZXJzXG4gIHBhc3NpdmVMaXN0ZW5lcnM6IHRydWUsXG5cbiAgLy8gTlNcbiAgY29udGFpbmVyTW9kaWZpZXJDbGFzczogJ3N3aXBlci1jb250YWluZXItJywgLy8gTkVXXG4gIHNsaWRlQ2xhc3M6ICdzd2lwZXItc2xpZGUnLFxuICBzbGlkZUJsYW5rQ2xhc3M6ICdzd2lwZXItc2xpZGUtaW52aXNpYmxlLWJsYW5rJyxcbiAgc2xpZGVBY3RpdmVDbGFzczogJ3N3aXBlci1zbGlkZS1hY3RpdmUnLFxuICBzbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzOiAnc3dpcGVyLXNsaWRlLWR1cGxpY2F0ZS1hY3RpdmUnLFxuICBzbGlkZVZpc2libGVDbGFzczogJ3N3aXBlci1zbGlkZS12aXNpYmxlJyxcbiAgc2xpZGVEdXBsaWNhdGVDbGFzczogJ3N3aXBlci1zbGlkZS1kdXBsaWNhdGUnLFxuICBzbGlkZU5leHRDbGFzczogJ3N3aXBlci1zbGlkZS1uZXh0JyxcbiAgc2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3M6ICdzd2lwZXItc2xpZGUtZHVwbGljYXRlLW5leHQnLFxuICBzbGlkZVByZXZDbGFzczogJ3N3aXBlci1zbGlkZS1wcmV2JyxcbiAgc2xpZGVEdXBsaWNhdGVQcmV2Q2xhc3M6ICdzd2lwZXItc2xpZGUtZHVwbGljYXRlLXByZXYnLFxuICB3cmFwcGVyQ2xhc3M6ICdzd2lwZXItd3JhcHBlcicsXG5cbiAgLy8gQ2FsbGJhY2tzXG4gIHJ1bkNhbGxiYWNrc09uSW5pdDogdHJ1ZSxcbn07XG5cbi8qIGVzbGludCBuby1wYXJhbS1yZWFzc2lnbjogXCJvZmZcIiAqL1xuXG5jb25zdCBwcm90b3R5cGVzID0ge1xuICB1cGRhdGUsXG4gIHRyYW5zbGF0ZSxcbiAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbiQxLFxuICBzbGlkZSxcbiAgbG9vcCxcbiAgZ3JhYkN1cnNvcixcbiAgbWFuaXB1bGF0aW9uLFxuICBldmVudHMsXG4gIGJyZWFrcG9pbnRzLFxuICBjaGVja092ZXJmbG93OiBjaGVja092ZXJmbG93JDEsXG4gIGNsYXNzZXMsXG4gIGltYWdlcyxcbn07XG5cbmNvbnN0IGV4dGVuZGVkRGVmYXVsdHMgPSB7fTtcblxuY2xhc3MgU3dpcGVyIGV4dGVuZHMgU3dpcGVyQ2xhc3Mge1xuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgbGV0IGVsO1xuICAgIGxldCBwYXJhbXM7XG4gICAgaWYgKGFyZ3MubGVuZ3RoID09PSAxICYmIGFyZ3NbMF0uY29uc3RydWN0b3IgJiYgYXJnc1swXS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0KSB7XG4gICAgICBwYXJhbXMgPSBhcmdzWzBdO1xuICAgIH0gZWxzZSB7XG4gICAgICBbZWwsIHBhcmFtc10gPSBhcmdzO1xuICAgIH1cbiAgICBpZiAoIXBhcmFtcykgcGFyYW1zID0ge307XG5cbiAgICBwYXJhbXMgPSBVdGlscy5leHRlbmQoe30sIHBhcmFtcyk7XG4gICAgaWYgKGVsICYmICFwYXJhbXMuZWwpIHBhcmFtcy5lbCA9IGVsO1xuXG4gICAgc3VwZXIocGFyYW1zKTtcblxuICAgIE9iamVjdC5rZXlzKHByb3RvdHlwZXMpLmZvckVhY2goKHByb3RvdHlwZUdyb3VwKSA9PiB7XG4gICAgICBPYmplY3Qua2V5cyhwcm90b3R5cGVzW3Byb3RvdHlwZUdyb3VwXSkuZm9yRWFjaCgocHJvdG9NZXRob2QpID0+IHtcbiAgICAgICAgaWYgKCFTd2lwZXIucHJvdG90eXBlW3Byb3RvTWV0aG9kXSkge1xuICAgICAgICAgIFN3aXBlci5wcm90b3R5cGVbcHJvdG9NZXRob2RdID0gcHJvdG90eXBlc1twcm90b3R5cGVHcm91cF1bcHJvdG9NZXRob2RdO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIC8vIFN3aXBlciBJbnN0YW5jZVxuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgaWYgKHR5cGVvZiBzd2lwZXIubW9kdWxlcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHN3aXBlci5tb2R1bGVzID0ge307XG4gICAgfVxuICAgIE9iamVjdC5rZXlzKHN3aXBlci5tb2R1bGVzKS5mb3JFYWNoKChtb2R1bGVOYW1lKSA9PiB7XG4gICAgICBjb25zdCBtb2R1bGUgPSBzd2lwZXIubW9kdWxlc1ttb2R1bGVOYW1lXTtcbiAgICAgIGlmIChtb2R1bGUucGFyYW1zKSB7XG4gICAgICAgIGNvbnN0IG1vZHVsZVBhcmFtTmFtZSA9IE9iamVjdC5rZXlzKG1vZHVsZS5wYXJhbXMpWzBdO1xuICAgICAgICBjb25zdCBtb2R1bGVQYXJhbXMgPSBtb2R1bGUucGFyYW1zW21vZHVsZVBhcmFtTmFtZV07XG4gICAgICAgIGlmICh0eXBlb2YgbW9kdWxlUGFyYW1zICE9PSAnb2JqZWN0JyB8fCBtb2R1bGVQYXJhbXMgPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgaWYgKCEobW9kdWxlUGFyYW1OYW1lIGluIHBhcmFtcyAmJiAnZW5hYmxlZCcgaW4gbW9kdWxlUGFyYW1zKSkgcmV0dXJuO1xuICAgICAgICBpZiAocGFyYW1zW21vZHVsZVBhcmFtTmFtZV0gPT09IHRydWUpIHtcbiAgICAgICAgICBwYXJhbXNbbW9kdWxlUGFyYW1OYW1lXSA9IHsgZW5hYmxlZDogdHJ1ZSB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChcbiAgICAgICAgICB0eXBlb2YgcGFyYW1zW21vZHVsZVBhcmFtTmFtZV0gPT09ICdvYmplY3QnXG4gICAgICAgICAgJiYgISgnZW5hYmxlZCcgaW4gcGFyYW1zW21vZHVsZVBhcmFtTmFtZV0pXG4gICAgICAgICkge1xuICAgICAgICAgIHBhcmFtc1ttb2R1bGVQYXJhbU5hbWVdLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcGFyYW1zW21vZHVsZVBhcmFtTmFtZV0pIHBhcmFtc1ttb2R1bGVQYXJhbU5hbWVdID0geyBlbmFibGVkOiBmYWxzZSB9O1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gRXh0ZW5kIGRlZmF1bHRzIHdpdGggbW9kdWxlcyBwYXJhbXNcbiAgICBjb25zdCBzd2lwZXJQYXJhbXMgPSBVdGlscy5leHRlbmQoe30sIGRlZmF1bHRzKTtcbiAgICBzd2lwZXIudXNlTW9kdWxlc1BhcmFtcyhzd2lwZXJQYXJhbXMpO1xuXG4gICAgLy8gRXh0ZW5kIGRlZmF1bHRzIHdpdGggcGFzc2VkIHBhcmFtc1xuICAgIHN3aXBlci5wYXJhbXMgPSBVdGlscy5leHRlbmQoe30sIHN3aXBlclBhcmFtcywgZXh0ZW5kZWREZWZhdWx0cywgcGFyYW1zKTtcbiAgICBzd2lwZXIub3JpZ2luYWxQYXJhbXMgPSBVdGlscy5leHRlbmQoe30sIHN3aXBlci5wYXJhbXMpO1xuICAgIHN3aXBlci5wYXNzZWRQYXJhbXMgPSBVdGlscy5leHRlbmQoe30sIHBhcmFtcyk7XG5cbiAgICAvLyBTYXZlIERvbSBsaWJcbiAgICBzd2lwZXIuJCA9ICQ7XG5cbiAgICAvLyBGaW5kIGVsXG4gICAgY29uc3QgJGVsID0gJChzd2lwZXIucGFyYW1zLmVsKTtcbiAgICBlbCA9ICRlbFswXTtcblxuICAgIGlmICghZWwpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgaWYgKCRlbC5sZW5ndGggPiAxKSB7XG4gICAgICBjb25zdCBzd2lwZXJzID0gW107XG4gICAgICAkZWwuZWFjaCgoaW5kZXgsIGNvbnRhaW5lckVsKSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld1BhcmFtcyA9IFV0aWxzLmV4dGVuZCh7fSwgcGFyYW1zLCB7IGVsOiBjb250YWluZXJFbCB9KTtcbiAgICAgICAgc3dpcGVycy5wdXNoKG5ldyBTd2lwZXIobmV3UGFyYW1zKSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzd2lwZXJzO1xuICAgIH1cblxuICAgIGVsLnN3aXBlciA9IHN3aXBlcjtcbiAgICAkZWwuZGF0YSgnc3dpcGVyJywgc3dpcGVyKTtcblxuICAgIC8vIEZpbmQgV3JhcHBlclxuICAgIGxldCAkd3JhcHBlckVsO1xuICAgIGlmIChlbCAmJiBlbC5zaGFkb3dSb290ICYmIGVsLnNoYWRvd1Jvb3QucXVlcnlTZWxlY3Rvcikge1xuICAgICAgJHdyYXBwZXJFbCA9ICQoZWwuc2hhZG93Um9vdC5xdWVyeVNlbGVjdG9yKGAuJHtzd2lwZXIucGFyYW1zLndyYXBwZXJDbGFzc31gKSk7XG4gICAgICAvLyBDaGlsZHJlbiBuZWVkcyB0byByZXR1cm4gc2xvdCBpdGVtc1xuICAgICAgJHdyYXBwZXJFbC5jaGlsZHJlbiA9IChvcHRpb25zKSA9PiAkZWwuY2hpbGRyZW4ob3B0aW9ucyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICR3cmFwcGVyRWwgPSAkZWwuY2hpbGRyZW4oYC4ke3N3aXBlci5wYXJhbXMud3JhcHBlckNsYXNzfWApO1xuICAgIH1cbiAgICAvLyBFeHRlbmQgU3dpcGVyXG4gICAgVXRpbHMuZXh0ZW5kKHN3aXBlciwge1xuICAgICAgJGVsLFxuICAgICAgZWwsXG4gICAgICAkd3JhcHBlckVsLFxuICAgICAgd3JhcHBlckVsOiAkd3JhcHBlckVsWzBdLFxuXG4gICAgICAvLyBDbGFzc2VzXG4gICAgICBjbGFzc05hbWVzOiBbXSxcblxuICAgICAgLy8gU2xpZGVzXG4gICAgICBzbGlkZXM6ICQoKSxcbiAgICAgIHNsaWRlc0dyaWQ6IFtdLFxuICAgICAgc25hcEdyaWQ6IFtdLFxuICAgICAgc2xpZGVzU2l6ZXNHcmlkOiBbXSxcblxuICAgICAgLy8gaXNEaXJlY3Rpb25cbiAgICAgIGlzSG9yaXpvbnRhbCgpIHtcbiAgICAgICAgcmV0dXJuIHN3aXBlci5wYXJhbXMuZGlyZWN0aW9uID09PSAnaG9yaXpvbnRhbCc7XG4gICAgICB9LFxuICAgICAgaXNWZXJ0aWNhbCgpIHtcbiAgICAgICAgcmV0dXJuIHN3aXBlci5wYXJhbXMuZGlyZWN0aW9uID09PSAndmVydGljYWwnO1xuICAgICAgfSxcbiAgICAgIC8vIFJUTFxuICAgICAgcnRsOiAoZWwuZGlyLnRvTG93ZXJDYXNlKCkgPT09ICdydGwnIHx8ICRlbC5jc3MoJ2RpcmVjdGlvbicpID09PSAncnRsJyksXG4gICAgICBydGxUcmFuc2xhdGU6IHN3aXBlci5wYXJhbXMuZGlyZWN0aW9uID09PSAnaG9yaXpvbnRhbCcgJiYgKGVsLmRpci50b0xvd2VyQ2FzZSgpID09PSAncnRsJyB8fCAkZWwuY3NzKCdkaXJlY3Rpb24nKSA9PT0gJ3J0bCcpLFxuICAgICAgd3JvbmdSVEw6ICR3cmFwcGVyRWwuY3NzKCdkaXNwbGF5JykgPT09ICctd2Via2l0LWJveCcsXG5cbiAgICAgIC8vIEluZGV4ZXNcbiAgICAgIGFjdGl2ZUluZGV4OiAwLFxuICAgICAgcmVhbEluZGV4OiAwLFxuXG4gICAgICAvL1xuICAgICAgaXNCZWdpbm5pbmc6IHRydWUsXG4gICAgICBpc0VuZDogZmFsc2UsXG5cbiAgICAgIC8vIFByb3BzXG4gICAgICB0cmFuc2xhdGU6IDAsXG4gICAgICBwcmV2aW91c1RyYW5zbGF0ZTogMCxcbiAgICAgIHByb2dyZXNzOiAwLFxuICAgICAgdmVsb2NpdHk6IDAsXG4gICAgICBhbmltYXRpbmc6IGZhbHNlLFxuXG4gICAgICAvLyBMb2Nrc1xuICAgICAgYWxsb3dTbGlkZU5leHQ6IHN3aXBlci5wYXJhbXMuYWxsb3dTbGlkZU5leHQsXG4gICAgICBhbGxvd1NsaWRlUHJldjogc3dpcGVyLnBhcmFtcy5hbGxvd1NsaWRlUHJldixcblxuICAgICAgLy8gVG91Y2ggRXZlbnRzXG4gICAgICB0b3VjaEV2ZW50czogKGZ1bmN0aW9uIHRvdWNoRXZlbnRzKCkge1xuICAgICAgICBjb25zdCB0b3VjaCA9IFsndG91Y2hzdGFydCcsICd0b3VjaG1vdmUnLCAndG91Y2hlbmQnLCAndG91Y2hjYW5jZWwnXTtcbiAgICAgICAgbGV0IGRlc2t0b3AgPSBbJ21vdXNlZG93bicsICdtb3VzZW1vdmUnLCAnbW91c2V1cCddO1xuICAgICAgICBpZiAoU3VwcG9ydC5wb2ludGVyRXZlbnRzKSB7XG4gICAgICAgICAgZGVza3RvcCA9IFsncG9pbnRlcmRvd24nLCAncG9pbnRlcm1vdmUnLCAncG9pbnRlcnVwJ107XG4gICAgICAgIH1cbiAgICAgICAgc3dpcGVyLnRvdWNoRXZlbnRzVG91Y2ggPSB7XG4gICAgICAgICAgc3RhcnQ6IHRvdWNoWzBdLFxuICAgICAgICAgIG1vdmU6IHRvdWNoWzFdLFxuICAgICAgICAgIGVuZDogdG91Y2hbMl0sXG4gICAgICAgICAgY2FuY2VsOiB0b3VjaFszXSxcbiAgICAgICAgfTtcbiAgICAgICAgc3dpcGVyLnRvdWNoRXZlbnRzRGVza3RvcCA9IHtcbiAgICAgICAgICBzdGFydDogZGVza3RvcFswXSxcbiAgICAgICAgICBtb3ZlOiBkZXNrdG9wWzFdLFxuICAgICAgICAgIGVuZDogZGVza3RvcFsyXSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIFN1cHBvcnQudG91Y2ggfHwgIXN3aXBlci5wYXJhbXMuc2ltdWxhdGVUb3VjaCA/IHN3aXBlci50b3VjaEV2ZW50c1RvdWNoIDogc3dpcGVyLnRvdWNoRXZlbnRzRGVza3RvcDtcbiAgICAgIH0oKSksXG4gICAgICB0b3VjaEV2ZW50c0RhdGE6IHtcbiAgICAgICAgaXNUb3VjaGVkOiB1bmRlZmluZWQsXG4gICAgICAgIGlzTW92ZWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgYWxsb3dUb3VjaENhbGxiYWNrczogdW5kZWZpbmVkLFxuICAgICAgICB0b3VjaFN0YXJ0VGltZTogdW5kZWZpbmVkLFxuICAgICAgICBpc1Njcm9sbGluZzogdW5kZWZpbmVkLFxuICAgICAgICBjdXJyZW50VHJhbnNsYXRlOiB1bmRlZmluZWQsXG4gICAgICAgIHN0YXJ0VHJhbnNsYXRlOiB1bmRlZmluZWQsXG4gICAgICAgIGFsbG93VGhyZXNob2xkTW92ZTogdW5kZWZpbmVkLFxuICAgICAgICAvLyBGb3JtIGVsZW1lbnRzIHRvIG1hdGNoXG4gICAgICAgIGZvcm1FbGVtZW50czogJ2lucHV0LCBzZWxlY3QsIG9wdGlvbiwgdGV4dGFyZWEsIGJ1dHRvbiwgdmlkZW8sIGxhYmVsJyxcbiAgICAgICAgLy8gTGFzdCBjbGljayB0aW1lXG4gICAgICAgIGxhc3RDbGlja1RpbWU6IFV0aWxzLm5vdygpLFxuICAgICAgICBjbGlja1RpbWVvdXQ6IHVuZGVmaW5lZCxcbiAgICAgICAgLy8gVmVsb2NpdGllc1xuICAgICAgICB2ZWxvY2l0aWVzOiBbXSxcbiAgICAgICAgYWxsb3dNb21lbnR1bUJvdW5jZTogdW5kZWZpbmVkLFxuICAgICAgICBpc1RvdWNoRXZlbnQ6IHVuZGVmaW5lZCxcbiAgICAgICAgc3RhcnRNb3Zpbmc6IHVuZGVmaW5lZCxcbiAgICAgIH0sXG5cbiAgICAgIC8vIENsaWNrc1xuICAgICAgYWxsb3dDbGljazogdHJ1ZSxcblxuICAgICAgLy8gVG91Y2hlc1xuICAgICAgYWxsb3dUb3VjaE1vdmU6IHN3aXBlci5wYXJhbXMuYWxsb3dUb3VjaE1vdmUsXG5cbiAgICAgIHRvdWNoZXM6IHtcbiAgICAgICAgc3RhcnRYOiAwLFxuICAgICAgICBzdGFydFk6IDAsXG4gICAgICAgIGN1cnJlbnRYOiAwLFxuICAgICAgICBjdXJyZW50WTogMCxcbiAgICAgICAgZGlmZjogMCxcbiAgICAgIH0sXG5cbiAgICAgIC8vIEltYWdlc1xuICAgICAgaW1hZ2VzVG9Mb2FkOiBbXSxcbiAgICAgIGltYWdlc0xvYWRlZDogMCxcblxuICAgIH0pO1xuXG4gICAgLy8gSW5zdGFsbCBNb2R1bGVzXG4gICAgc3dpcGVyLnVzZU1vZHVsZXMoKTtcblxuICAgIC8vIEluaXRcbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5pbml0KSB7XG4gICAgICBzd2lwZXIuaW5pdCgpO1xuICAgIH1cblxuICAgIC8vIFJldHVybiBhcHAgaW5zdGFuY2VcbiAgICByZXR1cm4gc3dpcGVyO1xuICB9XG5cbiAgc2xpZGVzUGVyVmlld0R5bmFtaWMoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBjb25zdCB7XG4gICAgICBwYXJhbXMsIHNsaWRlcywgc2xpZGVzR3JpZCwgc2l6ZTogc3dpcGVyU2l6ZSwgYWN0aXZlSW5kZXgsXG4gICAgfSA9IHN3aXBlcjtcbiAgICBsZXQgc3B2ID0gMTtcbiAgICBpZiAocGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICBsZXQgc2xpZGVTaXplID0gc2xpZGVzW2FjdGl2ZUluZGV4XS5zd2lwZXJTbGlkZVNpemU7XG4gICAgICBsZXQgYnJlYWtMb29wO1xuICAgICAgZm9yIChsZXQgaSA9IGFjdGl2ZUluZGV4ICsgMTsgaSA8IHNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoc2xpZGVzW2ldICYmICFicmVha0xvb3ApIHtcbiAgICAgICAgICBzbGlkZVNpemUgKz0gc2xpZGVzW2ldLnN3aXBlclNsaWRlU2l6ZTtcbiAgICAgICAgICBzcHYgKz0gMTtcbiAgICAgICAgICBpZiAoc2xpZGVTaXplID4gc3dpcGVyU2l6ZSkgYnJlYWtMb29wID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZm9yIChsZXQgaSA9IGFjdGl2ZUluZGV4IC0gMTsgaSA+PSAwOyBpIC09IDEpIHtcbiAgICAgICAgaWYgKHNsaWRlc1tpXSAmJiAhYnJlYWtMb29wKSB7XG4gICAgICAgICAgc2xpZGVTaXplICs9IHNsaWRlc1tpXS5zd2lwZXJTbGlkZVNpemU7XG4gICAgICAgICAgc3B2ICs9IDE7XG4gICAgICAgICAgaWYgKHNsaWRlU2l6ZSA+IHN3aXBlclNpemUpIGJyZWFrTG9vcCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChsZXQgaSA9IGFjdGl2ZUluZGV4ICsgMTsgaSA8IHNsaWRlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoc2xpZGVzR3JpZFtpXSAtIHNsaWRlc0dyaWRbYWN0aXZlSW5kZXhdIDwgc3dpcGVyU2l6ZSkge1xuICAgICAgICAgIHNwdiArPSAxO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzcHY7XG4gIH1cblxuICB1cGRhdGUoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkKSByZXR1cm47XG4gICAgY29uc3QgeyBzbmFwR3JpZCwgcGFyYW1zIH0gPSBzd2lwZXI7XG4gICAgLy8gQnJlYWtwb2ludHNcbiAgICBpZiAocGFyYW1zLmJyZWFrcG9pbnRzKSB7XG4gICAgICBzd2lwZXIuc2V0QnJlYWtwb2ludCgpO1xuICAgIH1cbiAgICBzd2lwZXIudXBkYXRlU2l6ZSgpO1xuICAgIHN3aXBlci51cGRhdGVTbGlkZXMoKTtcbiAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MoKTtcbiAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuXG4gICAgZnVuY3Rpb24gc2V0VHJhbnNsYXRlKCkge1xuICAgICAgY29uc3QgdHJhbnNsYXRlVmFsdWUgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gc3dpcGVyLnRyYW5zbGF0ZSAqIC0xIDogc3dpcGVyLnRyYW5zbGF0ZTtcbiAgICAgIGNvbnN0IG5ld1RyYW5zbGF0ZSA9IE1hdGgubWluKE1hdGgubWF4KHRyYW5zbGF0ZVZhbHVlLCBzd2lwZXIubWF4VHJhbnNsYXRlKCkpLCBzd2lwZXIubWluVHJhbnNsYXRlKCkpO1xuICAgICAgc3dpcGVyLnNldFRyYW5zbGF0ZShuZXdUcmFuc2xhdGUpO1xuICAgICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICAgIH1cbiAgICBsZXQgdHJhbnNsYXRlZDtcbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5mcmVlTW9kZSkge1xuICAgICAgc2V0VHJhbnNsYXRlKCk7XG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5hdXRvSGVpZ2h0KSB7XG4gICAgICAgIHN3aXBlci51cGRhdGVBdXRvSGVpZ2h0KCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICgoc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJWaWV3ID09PSAnYXV0bycgfHwgc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJWaWV3ID4gMSkgJiYgc3dpcGVyLmlzRW5kICYmICFzd2lwZXIucGFyYW1zLmNlbnRlcmVkU2xpZGVzKSB7XG4gICAgICAgIHRyYW5zbGF0ZWQgPSBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuc2xpZGVzLmxlbmd0aCAtIDEsIDAsIGZhbHNlLCB0cnVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRyYW5zbGF0ZWQgPSBzd2lwZXIuc2xpZGVUbyhzd2lwZXIuYWN0aXZlSW5kZXgsIDAsIGZhbHNlLCB0cnVlKTtcbiAgICAgIH1cbiAgICAgIGlmICghdHJhbnNsYXRlZCkge1xuICAgICAgICBzZXRUcmFuc2xhdGUoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHBhcmFtcy53YXRjaE92ZXJmbG93ICYmIHNuYXBHcmlkICE9PSBzd2lwZXIuc25hcEdyaWQpIHtcbiAgICAgIHN3aXBlci5jaGVja092ZXJmbG93KCk7XG4gICAgfVxuICAgIHN3aXBlci5lbWl0KCd1cGRhdGUnKTtcbiAgfVxuXG4gIGNoYW5nZURpcmVjdGlvbihuZXdEaXJlY3Rpb24sIG5lZWRVcGRhdGUgPSB0cnVlKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBjb25zdCBjdXJyZW50RGlyZWN0aW9uID0gc3dpcGVyLnBhcmFtcy5kaXJlY3Rpb247XG4gICAgaWYgKCFuZXdEaXJlY3Rpb24pIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgbmV3RGlyZWN0aW9uID0gY3VycmVudERpcmVjdGlvbiA9PT0gJ2hvcml6b250YWwnID8gJ3ZlcnRpY2FsJyA6ICdob3Jpem9udGFsJztcbiAgICB9XG4gICAgaWYgKChuZXdEaXJlY3Rpb24gPT09IGN1cnJlbnREaXJlY3Rpb24pIHx8IChuZXdEaXJlY3Rpb24gIT09ICdob3Jpem9udGFsJyAmJiBuZXdEaXJlY3Rpb24gIT09ICd2ZXJ0aWNhbCcpKSB7XG4gICAgICByZXR1cm4gc3dpcGVyO1xuICAgIH1cblxuICAgIHN3aXBlci4kZWxcbiAgICAgIC5yZW1vdmVDbGFzcyhgJHtzd2lwZXIucGFyYW1zLmNvbnRhaW5lck1vZGlmaWVyQ2xhc3N9JHtjdXJyZW50RGlyZWN0aW9ufWApXG4gICAgICAuYWRkQ2xhc3MoYCR7c3dpcGVyLnBhcmFtcy5jb250YWluZXJNb2RpZmllckNsYXNzfSR7bmV3RGlyZWN0aW9ufWApO1xuXG4gICAgc3dpcGVyLnBhcmFtcy5kaXJlY3Rpb24gPSBuZXdEaXJlY3Rpb247XG5cbiAgICBzd2lwZXIuc2xpZGVzLmVhY2goKHNsaWRlSW5kZXgsIHNsaWRlRWwpID0+IHtcbiAgICAgIGlmIChuZXdEaXJlY3Rpb24gPT09ICd2ZXJ0aWNhbCcpIHtcbiAgICAgICAgc2xpZGVFbC5zdHlsZS53aWR0aCA9ICcnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2xpZGVFbC5zdHlsZS5oZWlnaHQgPSAnJztcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHN3aXBlci5lbWl0KCdjaGFuZ2VEaXJlY3Rpb24nKTtcbiAgICBpZiAobmVlZFVwZGF0ZSkgc3dpcGVyLnVwZGF0ZSgpO1xuXG4gICAgcmV0dXJuIHN3aXBlcjtcbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBpZiAoc3dpcGVyLmluaXRpYWxpemVkKSByZXR1cm47XG5cbiAgICBzd2lwZXIuZW1pdCgnYmVmb3JlSW5pdCcpO1xuXG4gICAgLy8gU2V0IGJyZWFrcG9pbnRcbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5icmVha3BvaW50cykge1xuICAgICAgc3dpcGVyLnNldEJyZWFrcG9pbnQoKTtcbiAgICB9XG5cbiAgICAvLyBBZGQgQ2xhc3Nlc1xuICAgIHN3aXBlci5hZGRDbGFzc2VzKCk7XG5cbiAgICAvLyBDcmVhdGUgbG9vcFxuICAgIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIHtcbiAgICAgIHN3aXBlci5sb29wQ3JlYXRlKCk7XG4gICAgfVxuXG4gICAgLy8gVXBkYXRlIHNpemVcbiAgICBzd2lwZXIudXBkYXRlU2l6ZSgpO1xuXG4gICAgLy8gVXBkYXRlIHNsaWRlc1xuICAgIHN3aXBlci51cGRhdGVTbGlkZXMoKTtcblxuICAgIGlmIChzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cpIHtcbiAgICAgIHN3aXBlci5jaGVja092ZXJmbG93KCk7XG4gICAgfVxuXG4gICAgLy8gU2V0IEdyYWIgQ3Vyc29yXG4gICAgaWYgKHN3aXBlci5wYXJhbXMuZ3JhYkN1cnNvcikge1xuICAgICAgc3dpcGVyLnNldEdyYWJDdXJzb3IoKTtcbiAgICB9XG5cbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5wcmVsb2FkSW1hZ2VzKSB7XG4gICAgICBzd2lwZXIucHJlbG9hZEltYWdlcygpO1xuICAgIH1cblxuICAgIC8vIFNsaWRlIFRvIEluaXRpYWwgU2xpZGVcbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICBzd2lwZXIuc2xpZGVUbyhzd2lwZXIucGFyYW1zLmluaXRpYWxTbGlkZSArIHN3aXBlci5sb29wZWRTbGlkZXMsIDAsIHN3aXBlci5wYXJhbXMucnVuQ2FsbGJhY2tzT25Jbml0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLnNsaWRlVG8oc3dpcGVyLnBhcmFtcy5pbml0aWFsU2xpZGUsIDAsIHN3aXBlci5wYXJhbXMucnVuQ2FsbGJhY2tzT25Jbml0KTtcbiAgICB9XG5cbiAgICAvLyBBdHRhY2ggZXZlbnRzXG4gICAgc3dpcGVyLmF0dGFjaEV2ZW50cygpO1xuXG4gICAgLy8gSW5pdCBGbGFnXG4gICAgc3dpcGVyLmluaXRpYWxpemVkID0gdHJ1ZTtcblxuICAgIC8vIEVtaXRcbiAgICBzd2lwZXIuZW1pdCgnaW5pdCcpO1xuICB9XG5cbiAgZGVzdHJveShkZWxldGVJbnN0YW5jZSA9IHRydWUsIGNsZWFuU3R5bGVzID0gdHJ1ZSkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgY29uc3Qge1xuICAgICAgcGFyYW1zLCAkZWwsICR3cmFwcGVyRWwsIHNsaWRlcyxcbiAgICB9ID0gc3dpcGVyO1xuXG4gICAgaWYgKHR5cGVvZiBzd2lwZXIucGFyYW1zID09PSAndW5kZWZpbmVkJyB8fCBzd2lwZXIuZGVzdHJveWVkKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBzd2lwZXIuZW1pdCgnYmVmb3JlRGVzdHJveScpO1xuXG4gICAgLy8gSW5pdCBGbGFnXG4gICAgc3dpcGVyLmluaXRpYWxpemVkID0gZmFsc2U7XG5cbiAgICAvLyBEZXRhY2ggZXZlbnRzXG4gICAgc3dpcGVyLmRldGFjaEV2ZW50cygpO1xuXG4gICAgLy8gRGVzdHJveSBsb29wXG4gICAgaWYgKHBhcmFtcy5sb29wKSB7XG4gICAgICBzd2lwZXIubG9vcERlc3Ryb3koKTtcbiAgICB9XG5cbiAgICAvLyBDbGVhbnVwIHN0eWxlc1xuICAgIGlmIChjbGVhblN0eWxlcykge1xuICAgICAgc3dpcGVyLnJlbW92ZUNsYXNzZXMoKTtcbiAgICAgICRlbC5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgICAgJHdyYXBwZXJFbC5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgICAgaWYgKHNsaWRlcyAmJiBzbGlkZXMubGVuZ3RoKSB7XG4gICAgICAgIHNsaWRlc1xuICAgICAgICAgIC5yZW1vdmVDbGFzcyhbXG4gICAgICAgICAgICBwYXJhbXMuc2xpZGVWaXNpYmxlQ2xhc3MsXG4gICAgICAgICAgICBwYXJhbXMuc2xpZGVBY3RpdmVDbGFzcyxcbiAgICAgICAgICAgIHBhcmFtcy5zbGlkZU5leHRDbGFzcyxcbiAgICAgICAgICAgIHBhcmFtcy5zbGlkZVByZXZDbGFzcyxcbiAgICAgICAgICBdLmpvaW4oJyAnKSlcbiAgICAgICAgICAucmVtb3ZlQXR0cignc3R5bGUnKVxuICAgICAgICAgIC5yZW1vdmVBdHRyKCdkYXRhLXN3aXBlci1zbGlkZS1pbmRleCcpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHN3aXBlci5lbWl0KCdkZXN0cm95Jyk7XG5cbiAgICAvLyBEZXRhY2ggZW1pdHRlciBldmVudHNcbiAgICBPYmplY3Qua2V5cyhzd2lwZXIuZXZlbnRzTGlzdGVuZXJzKS5mb3JFYWNoKChldmVudE5hbWUpID0+IHtcbiAgICAgIHN3aXBlci5vZmYoZXZlbnROYW1lKTtcbiAgICB9KTtcblxuICAgIGlmIChkZWxldGVJbnN0YW5jZSAhPT0gZmFsc2UpIHtcbiAgICAgIHN3aXBlci4kZWxbMF0uc3dpcGVyID0gbnVsbDtcbiAgICAgIHN3aXBlci4kZWwuZGF0YSgnc3dpcGVyJywgbnVsbCk7XG4gICAgICBVdGlscy5kZWxldGVQcm9wcyhzd2lwZXIpO1xuICAgIH1cbiAgICBzd2lwZXIuZGVzdHJveWVkID0gdHJ1ZTtcblxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgc3RhdGljIGV4dGVuZERlZmF1bHRzKG5ld0RlZmF1bHRzKSB7XG4gICAgVXRpbHMuZXh0ZW5kKGV4dGVuZGVkRGVmYXVsdHMsIG5ld0RlZmF1bHRzKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZXh0ZW5kZWREZWZhdWx0cygpIHtcbiAgICByZXR1cm4gZXh0ZW5kZWREZWZhdWx0cztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZGVmYXVsdHMoKSB7XG4gICAgcmV0dXJuIGRlZmF1bHRzO1xuICB9XG5cbiAgc3RhdGljIGdldCBDbGFzcygpIHtcbiAgICByZXR1cm4gU3dpcGVyQ2xhc3M7XG4gIH1cblxuICBzdGF0aWMgZ2V0ICQoKSB7XG4gICAgcmV0dXJuICQ7XG4gIH1cbn1cblxudmFyIERldmljZSQxID0ge1xuICBuYW1lOiAnZGV2aWNlJyxcbiAgcHJvdG86IHtcbiAgICBkZXZpY2U6IERldmljZSxcbiAgfSxcbiAgc3RhdGljOiB7XG4gICAgZGV2aWNlOiBEZXZpY2UsXG4gIH0sXG59O1xuXG52YXIgU3VwcG9ydCQxID0ge1xuICBuYW1lOiAnc3VwcG9ydCcsXG4gIHByb3RvOiB7XG4gICAgc3VwcG9ydDogU3VwcG9ydCxcbiAgfSxcbiAgc3RhdGljOiB7XG4gICAgc3VwcG9ydDogU3VwcG9ydCxcbiAgfSxcbn07XG5cbmNvbnN0IEJyb3dzZXIgPSAoZnVuY3Rpb24gQnJvd3NlcigpIHtcbiAgZnVuY3Rpb24gaXNTYWZhcmkoKSB7XG4gICAgY29uc3QgdWEgPSB3aW4ubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpO1xuICAgIHJldHVybiAodWEuaW5kZXhPZignc2FmYXJpJykgPj0gMCAmJiB1YS5pbmRleE9mKCdjaHJvbWUnKSA8IDAgJiYgdWEuaW5kZXhPZignYW5kcm9pZCcpIDwgMCk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBpc0VkZ2U6ICEhd2luLm5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0VkZ2UvZyksXG4gICAgaXNTYWZhcmk6IGlzU2FmYXJpKCksXG4gICAgaXNVaVdlYlZpZXc6IC8oaVBob25lfGlQb2R8aVBhZCkuKkFwcGxlV2ViS2l0KD8hLipTYWZhcmkpL2kudGVzdCh3aW4ubmF2aWdhdG9yLnVzZXJBZ2VudCksXG4gIH07XG59KCkpO1xuXG52YXIgQnJvd3NlciQxID0ge1xuICBuYW1lOiAnYnJvd3NlcicsXG4gIHByb3RvOiB7XG4gICAgYnJvd3NlcjogQnJvd3NlcixcbiAgfSxcbiAgc3RhdGljOiB7XG4gICAgYnJvd3NlcjogQnJvd3NlcixcbiAgfSxcbn07XG5cbnZhciBSZXNpemUgPSB7XG4gIG5hbWU6ICdyZXNpemUnLFxuICBjcmVhdGUoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBVdGlscy5leHRlbmQoc3dpcGVyLCB7XG4gICAgICByZXNpemU6IHtcbiAgICAgICAgcmVzaXplSGFuZGxlcigpIHtcbiAgICAgICAgICBpZiAoIXN3aXBlciB8fCBzd2lwZXIuZGVzdHJveWVkIHx8ICFzd2lwZXIuaW5pdGlhbGl6ZWQpIHJldHVybjtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgnYmVmb3JlUmVzaXplJyk7XG4gICAgICAgICAgc3dpcGVyLmVtaXQoJ3Jlc2l6ZScpO1xuICAgICAgICB9LFxuICAgICAgICBvcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIoKSB7XG4gICAgICAgICAgaWYgKCFzd2lwZXIgfHwgc3dpcGVyLmRlc3Ryb3llZCB8fCAhc3dpcGVyLmluaXRpYWxpemVkKSByZXR1cm47XG4gICAgICAgICAgc3dpcGVyLmVtaXQoJ29yaWVudGF0aW9uY2hhbmdlJyk7XG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pO1xuICB9LFxuICBvbjoge1xuICAgIGluaXQoKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgLy8gRW1pdCByZXNpemVcbiAgICAgIHdpbi5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBzd2lwZXIucmVzaXplLnJlc2l6ZUhhbmRsZXIpO1xuXG4gICAgICAvLyBFbWl0IG9yaWVudGF0aW9uY2hhbmdlXG4gICAgICB3aW4uYWRkRXZlbnRMaXN0ZW5lcignb3JpZW50YXRpb25jaGFuZ2UnLCBzd2lwZXIucmVzaXplLm9yaWVudGF0aW9uQ2hhbmdlSGFuZGxlcik7XG4gICAgfSxcbiAgICBkZXN0cm95KCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIHdpbi5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBzd2lwZXIucmVzaXplLnJlc2l6ZUhhbmRsZXIpO1xuICAgICAgd2luLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ29yaWVudGF0aW9uY2hhbmdlJywgc3dpcGVyLnJlc2l6ZS5vcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIpO1xuICAgIH0sXG4gIH0sXG59O1xuXG5jb25zdCBPYnNlcnZlciA9IHtcbiAgZnVuYzogd2luLk11dGF0aW9uT2JzZXJ2ZXIgfHwgd2luLldlYmtpdE11dGF0aW9uT2JzZXJ2ZXIsXG4gIGF0dGFjaCh0YXJnZXQsIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG5cbiAgICBjb25zdCBPYnNlcnZlckZ1bmMgPSBPYnNlcnZlci5mdW5jO1xuICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IE9ic2VydmVyRnVuYygobXV0YXRpb25zKSA9PiB7XG4gICAgICAvLyBUaGUgb2JzZXJ2ZXJVcGRhdGUgZXZlbnQgc2hvdWxkIG9ubHkgYmUgdHJpZ2dlcmVkXG4gICAgICAvLyBvbmNlIGRlc3BpdGUgdGhlIG51bWJlciBvZiBtdXRhdGlvbnMuICBBZGRpdGlvbmFsXG4gICAgICAvLyB0cmlnZ2VycyBhcmUgcmVkdW5kYW50IGFuZCBhcmUgdmVyeSBjb3N0bHlcbiAgICAgIGlmIChtdXRhdGlvbnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHN3aXBlci5lbWl0KCdvYnNlcnZlclVwZGF0ZScsIG11dGF0aW9uc1swXSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG9ic2VydmVyVXBkYXRlID0gZnVuY3Rpb24gb2JzZXJ2ZXJVcGRhdGUoKSB7XG4gICAgICAgIHN3aXBlci5lbWl0KCdvYnNlcnZlclVwZGF0ZScsIG11dGF0aW9uc1swXSk7XG4gICAgICB9O1xuXG4gICAgICBpZiAod2luLnJlcXVlc3RBbmltYXRpb25GcmFtZSkge1xuICAgICAgICB3aW4ucmVxdWVzdEFuaW1hdGlvbkZyYW1lKG9ic2VydmVyVXBkYXRlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbi5zZXRUaW1lb3V0KG9ic2VydmVyVXBkYXRlLCAwKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIG9ic2VydmVyLm9ic2VydmUodGFyZ2V0LCB7XG4gICAgICBhdHRyaWJ1dGVzOiB0eXBlb2Ygb3B0aW9ucy5hdHRyaWJ1dGVzID09PSAndW5kZWZpbmVkJyA/IHRydWUgOiBvcHRpb25zLmF0dHJpYnV0ZXMsXG4gICAgICBjaGlsZExpc3Q6IHR5cGVvZiBvcHRpb25zLmNoaWxkTGlzdCA9PT0gJ3VuZGVmaW5lZCcgPyB0cnVlIDogb3B0aW9ucy5jaGlsZExpc3QsXG4gICAgICBjaGFyYWN0ZXJEYXRhOiB0eXBlb2Ygb3B0aW9ucy5jaGFyYWN0ZXJEYXRhID09PSAndW5kZWZpbmVkJyA/IHRydWUgOiBvcHRpb25zLmNoYXJhY3RlckRhdGEsXG4gICAgfSk7XG5cbiAgICBzd2lwZXIub2JzZXJ2ZXIub2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpO1xuICB9LFxuICBpbml0KCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgaWYgKCFTdXBwb3J0Lm9ic2VydmVyIHx8ICFzd2lwZXIucGFyYW1zLm9ic2VydmVyKSByZXR1cm47XG4gICAgaWYgKHN3aXBlci5wYXJhbXMub2JzZXJ2ZVBhcmVudHMpIHtcbiAgICAgIGNvbnN0IGNvbnRhaW5lclBhcmVudHMgPSBzd2lwZXIuJGVsLnBhcmVudHMoKTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29udGFpbmVyUGFyZW50cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBzd2lwZXIub2JzZXJ2ZXIuYXR0YWNoKGNvbnRhaW5lclBhcmVudHNbaV0pO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBPYnNlcnZlIGNvbnRhaW5lclxuICAgIHN3aXBlci5vYnNlcnZlci5hdHRhY2goc3dpcGVyLiRlbFswXSwgeyBjaGlsZExpc3Q6IHN3aXBlci5wYXJhbXMub2JzZXJ2ZVNsaWRlQ2hpbGRyZW4gfSk7XG5cbiAgICAvLyBPYnNlcnZlIHdyYXBwZXJcbiAgICBzd2lwZXIub2JzZXJ2ZXIuYXR0YWNoKHN3aXBlci4kd3JhcHBlckVsWzBdLCB7IGF0dHJpYnV0ZXM6IGZhbHNlIH0pO1xuICB9LFxuICBkZXN0cm95KCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgc3dpcGVyLm9ic2VydmVyLm9ic2VydmVycy5mb3JFYWNoKChvYnNlcnZlcikgPT4ge1xuICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIH0pO1xuICAgIHN3aXBlci5vYnNlcnZlci5vYnNlcnZlcnMgPSBbXTtcbiAgfSxcbn07XG5cbnZhciBPYnNlcnZlciQxID0ge1xuICBuYW1lOiAnb2JzZXJ2ZXInLFxuICBwYXJhbXM6IHtcbiAgICBvYnNlcnZlcjogZmFsc2UsXG4gICAgb2JzZXJ2ZVBhcmVudHM6IGZhbHNlLFxuICAgIG9ic2VydmVTbGlkZUNoaWxkcmVuOiBmYWxzZSxcbiAgfSxcbiAgY3JlYXRlKCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgVXRpbHMuZXh0ZW5kKHN3aXBlciwge1xuICAgICAgb2JzZXJ2ZXI6IHtcbiAgICAgICAgaW5pdDogT2JzZXJ2ZXIuaW5pdC5iaW5kKHN3aXBlciksXG4gICAgICAgIGF0dGFjaDogT2JzZXJ2ZXIuYXR0YWNoLmJpbmQoc3dpcGVyKSxcbiAgICAgICAgZGVzdHJveTogT2JzZXJ2ZXIuZGVzdHJveS5iaW5kKHN3aXBlciksXG4gICAgICAgIG9ic2VydmVyczogW10sXG4gICAgICB9LFxuICAgIH0pO1xuICB9LFxuICBvbjoge1xuICAgIGluaXQoKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgc3dpcGVyLm9ic2VydmVyLmluaXQoKTtcbiAgICB9LFxuICAgIGRlc3Ryb3koKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgc3dpcGVyLm9ic2VydmVyLmRlc3Ryb3koKTtcbiAgICB9LFxuICB9LFxufTtcblxuY29uc3QgS2V5Ym9hcmQgPSB7XG4gIGhhbmRsZShldmVudCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgY29uc3QgeyBydGxUcmFuc2xhdGU6IHJ0bCB9ID0gc3dpcGVyO1xuICAgIGxldCBlID0gZXZlbnQ7XG4gICAgaWYgKGUub3JpZ2luYWxFdmVudCkgZSA9IGUub3JpZ2luYWxFdmVudDsgLy8ganF1ZXJ5IGZpeFxuICAgIGNvbnN0IGtjID0gZS5rZXlDb2RlIHx8IGUuY2hhckNvZGU7XG4gICAgLy8gRGlyZWN0aW9ucyBsb2Nrc1xuICAgIGlmICghc3dpcGVyLmFsbG93U2xpZGVOZXh0ICYmICgoc3dpcGVyLmlzSG9yaXpvbnRhbCgpICYmIGtjID09PSAzOSkgfHwgKHN3aXBlci5pc1ZlcnRpY2FsKCkgJiYga2MgPT09IDQwKSB8fCBrYyA9PT0gMzQpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmICghc3dpcGVyLmFsbG93U2xpZGVQcmV2ICYmICgoc3dpcGVyLmlzSG9yaXpvbnRhbCgpICYmIGtjID09PSAzNykgfHwgKHN3aXBlci5pc1ZlcnRpY2FsKCkgJiYga2MgPT09IDM4KSB8fCBrYyA9PT0gMzMpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChlLnNoaWZ0S2V5IHx8IGUuYWx0S2V5IHx8IGUuY3RybEtleSB8fCBlLm1ldGFLZXkpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmIChkb2MuYWN0aXZlRWxlbWVudCAmJiBkb2MuYWN0aXZlRWxlbWVudC5ub2RlTmFtZSAmJiAoZG9jLmFjdGl2ZUVsZW1lbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2lucHV0JyB8fCBkb2MuYWN0aXZlRWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAndGV4dGFyZWEnKSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHN3aXBlci5wYXJhbXMua2V5Ym9hcmQub25seUluVmlld3BvcnQgJiYgKGtjID09PSAzMyB8fCBrYyA9PT0gMzQgfHwga2MgPT09IDM3IHx8IGtjID09PSAzOSB8fCBrYyA9PT0gMzggfHwga2MgPT09IDQwKSkge1xuICAgICAgbGV0IGluVmlldyA9IGZhbHNlO1xuICAgICAgLy8gQ2hlY2sgdGhhdCBzd2lwZXIgc2hvdWxkIGJlIGluc2lkZSBvZiB2aXNpYmxlIGFyZWEgb2Ygd2luZG93XG4gICAgICBpZiAoc3dpcGVyLiRlbC5wYXJlbnRzKGAuJHtzd2lwZXIucGFyYW1zLnNsaWRlQ2xhc3N9YCkubGVuZ3RoID4gMCAmJiBzd2lwZXIuJGVsLnBhcmVudHMoYC4ke3N3aXBlci5wYXJhbXMuc2xpZGVBY3RpdmVDbGFzc31gKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHdpbmRvd1dpZHRoID0gd2luLmlubmVyV2lkdGg7XG4gICAgICBjb25zdCB3aW5kb3dIZWlnaHQgPSB3aW4uaW5uZXJIZWlnaHQ7XG4gICAgICBjb25zdCBzd2lwZXJPZmZzZXQgPSBzd2lwZXIuJGVsLm9mZnNldCgpO1xuICAgICAgaWYgKHJ0bCkgc3dpcGVyT2Zmc2V0LmxlZnQgLT0gc3dpcGVyLiRlbFswXS5zY3JvbGxMZWZ0O1xuICAgICAgY29uc3Qgc3dpcGVyQ29vcmQgPSBbXG4gICAgICAgIFtzd2lwZXJPZmZzZXQubGVmdCwgc3dpcGVyT2Zmc2V0LnRvcF0sXG4gICAgICAgIFtzd2lwZXJPZmZzZXQubGVmdCArIHN3aXBlci53aWR0aCwgc3dpcGVyT2Zmc2V0LnRvcF0sXG4gICAgICAgIFtzd2lwZXJPZmZzZXQubGVmdCwgc3dpcGVyT2Zmc2V0LnRvcCArIHN3aXBlci5oZWlnaHRdLFxuICAgICAgICBbc3dpcGVyT2Zmc2V0LmxlZnQgKyBzd2lwZXIud2lkdGgsIHN3aXBlck9mZnNldC50b3AgKyBzd2lwZXIuaGVpZ2h0XSxcbiAgICAgIF07XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN3aXBlckNvb3JkLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IHBvaW50ID0gc3dpcGVyQ29vcmRbaV07XG4gICAgICAgIGlmIChcbiAgICAgICAgICBwb2ludFswXSA+PSAwICYmIHBvaW50WzBdIDw9IHdpbmRvd1dpZHRoXG4gICAgICAgICAgJiYgcG9pbnRbMV0gPj0gMCAmJiBwb2ludFsxXSA8PSB3aW5kb3dIZWlnaHRcbiAgICAgICAgKSB7XG4gICAgICAgICAgaW5WaWV3ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKCFpblZpZXcpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgIGlmIChrYyA9PT0gMzMgfHwga2MgPT09IDM0IHx8IGtjID09PSAzNyB8fCBrYyA9PT0gMzkpIHtcbiAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZWxzZSBlLnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICB9XG4gICAgICBpZiAoKChrYyA9PT0gMzQgfHwga2MgPT09IDM5KSAmJiAhcnRsKSB8fCAoKGtjID09PSAzMyB8fCBrYyA9PT0gMzcpICYmIHJ0bCkpIHN3aXBlci5zbGlkZU5leHQoKTtcbiAgICAgIGlmICgoKGtjID09PSAzMyB8fCBrYyA9PT0gMzcpICYmICFydGwpIHx8ICgoa2MgPT09IDM0IHx8IGtjID09PSAzOSkgJiYgcnRsKSkgc3dpcGVyLnNsaWRlUHJldigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoa2MgPT09IDMzIHx8IGtjID09PSAzNCB8fCBrYyA9PT0gMzggfHwga2MgPT09IDQwKSB7XG4gICAgICAgIGlmIChlLnByZXZlbnREZWZhdWx0KSBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGVsc2UgZS5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGtjID09PSAzNCB8fCBrYyA9PT0gNDApIHN3aXBlci5zbGlkZU5leHQoKTtcbiAgICAgIGlmIChrYyA9PT0gMzMgfHwga2MgPT09IDM4KSBzd2lwZXIuc2xpZGVQcmV2KCk7XG4gICAgfVxuICAgIHN3aXBlci5lbWl0KCdrZXlQcmVzcycsIGtjKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9LFxuICBlbmFibGUoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBpZiAoc3dpcGVyLmtleWJvYXJkLmVuYWJsZWQpIHJldHVybjtcbiAgICAkKGRvYykub24oJ2tleWRvd24nLCBzd2lwZXIua2V5Ym9hcmQuaGFuZGxlKTtcbiAgICBzd2lwZXIua2V5Ym9hcmQuZW5hYmxlZCA9IHRydWU7XG4gIH0sXG4gIGRpc2FibGUoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBpZiAoIXN3aXBlci5rZXlib2FyZC5lbmFibGVkKSByZXR1cm47XG4gICAgJChkb2MpLm9mZigna2V5ZG93bicsIHN3aXBlci5rZXlib2FyZC5oYW5kbGUpO1xuICAgIHN3aXBlci5rZXlib2FyZC5lbmFibGVkID0gZmFsc2U7XG4gIH0sXG59O1xuXG52YXIga2V5Ym9hcmQgPSB7XG4gIG5hbWU6ICdrZXlib2FyZCcsXG4gIHBhcmFtczoge1xuICAgIGtleWJvYXJkOiB7XG4gICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgIG9ubHlJblZpZXdwb3J0OiB0cnVlLFxuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZSgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIFV0aWxzLmV4dGVuZChzd2lwZXIsIHtcbiAgICAgIGtleWJvYXJkOiB7XG4gICAgICAgIGVuYWJsZWQ6IGZhbHNlLFxuICAgICAgICBlbmFibGU6IEtleWJvYXJkLmVuYWJsZS5iaW5kKHN3aXBlciksXG4gICAgICAgIGRpc2FibGU6IEtleWJvYXJkLmRpc2FibGUuYmluZChzd2lwZXIpLFxuICAgICAgICBoYW5kbGU6IEtleWJvYXJkLmhhbmRsZS5iaW5kKHN3aXBlciksXG4gICAgICB9LFxuICAgIH0pO1xuICB9LFxuICBvbjoge1xuICAgIGluaXQoKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKHN3aXBlci5wYXJhbXMua2V5Ym9hcmQuZW5hYmxlZCkge1xuICAgICAgICBzd2lwZXIua2V5Ym9hcmQuZW5hYmxlKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBkZXN0cm95KCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmIChzd2lwZXIua2V5Ym9hcmQuZW5hYmxlZCkge1xuICAgICAgICBzd2lwZXIua2V5Ym9hcmQuZGlzYWJsZSgpO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59O1xuXG5mdW5jdGlvbiBpc0V2ZW50U3VwcG9ydGVkKCkge1xuICBjb25zdCBldmVudE5hbWUgPSAnb253aGVlbCc7XG4gIGxldCBpc1N1cHBvcnRlZCA9IGV2ZW50TmFtZSBpbiBkb2M7XG5cbiAgaWYgKCFpc1N1cHBvcnRlZCkge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBkb2MuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoZXZlbnROYW1lLCAncmV0dXJuOycpO1xuICAgIGlzU3VwcG9ydGVkID0gdHlwZW9mIGVsZW1lbnRbZXZlbnROYW1lXSA9PT0gJ2Z1bmN0aW9uJztcbiAgfVxuXG4gIGlmICghaXNTdXBwb3J0ZWRcbiAgICAmJiBkb2MuaW1wbGVtZW50YXRpb25cbiAgICAmJiBkb2MuaW1wbGVtZW50YXRpb24uaGFzRmVhdHVyZVxuICAgIC8vIGFsd2F5cyByZXR1cm5zIHRydWUgaW4gbmV3ZXIgYnJvd3NlcnMgYXMgcGVyIHRoZSBzdGFuZGFyZC5cbiAgICAvLyBAc2VlIGh0dHA6Ly9kb20uc3BlYy53aGF0d2cub3JnLyNkb20tZG9taW1wbGVtZW50YXRpb24taGFzZmVhdHVyZVxuICAgICYmIGRvYy5pbXBsZW1lbnRhdGlvbi5oYXNGZWF0dXJlKCcnLCAnJykgIT09IHRydWVcbiAgKSB7XG4gICAgLy8gVGhpcyBpcyB0aGUgb25seSB3YXkgdG8gdGVzdCBzdXBwb3J0IGZvciB0aGUgYHdoZWVsYCBldmVudCBpbiBJRTkrLlxuICAgIGlzU3VwcG9ydGVkID0gZG9jLmltcGxlbWVudGF0aW9uLmhhc0ZlYXR1cmUoJ0V2ZW50cy53aGVlbCcsICczLjAnKTtcbiAgfVxuXG4gIHJldHVybiBpc1N1cHBvcnRlZDtcbn1cbmNvbnN0IE1vdXNld2hlZWwgPSB7XG4gIGxhc3RTY3JvbGxUaW1lOiBVdGlscy5ub3coKSxcbiAgbGFzdEV2ZW50QmVmb3JlU25hcDogdW5kZWZpbmVkLFxuICByZWNlbnRXaGVlbEV2ZW50czogW10sXG4gIGV2ZW50KCkge1xuICAgIGlmICh3aW4ubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdmaXJlZm94JykgPiAtMSkgcmV0dXJuICdET01Nb3VzZVNjcm9sbCc7XG4gICAgcmV0dXJuIGlzRXZlbnRTdXBwb3J0ZWQoKSA/ICd3aGVlbCcgOiAnbW91c2V3aGVlbCc7XG4gIH0sXG4gIG5vcm1hbGl6ZShlKSB7XG4gICAgLy8gUmVhc29uYWJsZSBkZWZhdWx0c1xuICAgIGNvbnN0IFBJWEVMX1NURVAgPSAxMDtcbiAgICBjb25zdCBMSU5FX0hFSUdIVCA9IDQwO1xuICAgIGNvbnN0IFBBR0VfSEVJR0hUID0gODAwO1xuXG4gICAgbGV0IHNYID0gMDtcbiAgICBsZXQgc1kgPSAwOyAvLyBzcGluWCwgc3BpbllcbiAgICBsZXQgcFggPSAwO1xuICAgIGxldCBwWSA9IDA7IC8vIHBpeGVsWCwgcGl4ZWxZXG5cbiAgICAvLyBMZWdhY3lcbiAgICBpZiAoJ2RldGFpbCcgaW4gZSkge1xuICAgICAgc1kgPSBlLmRldGFpbDtcbiAgICB9XG4gICAgaWYgKCd3aGVlbERlbHRhJyBpbiBlKSB7XG4gICAgICBzWSA9IC1lLndoZWVsRGVsdGEgLyAxMjA7XG4gICAgfVxuICAgIGlmICgnd2hlZWxEZWx0YVknIGluIGUpIHtcbiAgICAgIHNZID0gLWUud2hlZWxEZWx0YVkgLyAxMjA7XG4gICAgfVxuICAgIGlmICgnd2hlZWxEZWx0YVgnIGluIGUpIHtcbiAgICAgIHNYID0gLWUud2hlZWxEZWx0YVggLyAxMjA7XG4gICAgfVxuXG4gICAgLy8gc2lkZSBzY3JvbGxpbmcgb24gRkYgd2l0aCBET01Nb3VzZVNjcm9sbFxuICAgIGlmICgnYXhpcycgaW4gZSAmJiBlLmF4aXMgPT09IGUuSE9SSVpPTlRBTF9BWElTKSB7XG4gICAgICBzWCA9IHNZO1xuICAgICAgc1kgPSAwO1xuICAgIH1cblxuICAgIHBYID0gc1ggKiBQSVhFTF9TVEVQO1xuICAgIHBZID0gc1kgKiBQSVhFTF9TVEVQO1xuXG4gICAgaWYgKCdkZWx0YVknIGluIGUpIHtcbiAgICAgIHBZID0gZS5kZWx0YVk7XG4gICAgfVxuICAgIGlmICgnZGVsdGFYJyBpbiBlKSB7XG4gICAgICBwWCA9IGUuZGVsdGFYO1xuICAgIH1cblxuICAgIGlmIChlLnNoaWZ0S2V5ICYmICFwWCkgeyAvLyBpZiB1c2VyIHNjcm9sbHMgd2l0aCBzaGlmdCBoZSB3YW50cyBob3Jpem9udGFsIHNjcm9sbFxuICAgICAgcFggPSBwWTtcbiAgICAgIHBZID0gMDtcbiAgICB9XG5cbiAgICBpZiAoKHBYIHx8IHBZKSAmJiBlLmRlbHRhTW9kZSkge1xuICAgICAgaWYgKGUuZGVsdGFNb2RlID09PSAxKSB7IC8vIGRlbHRhIGluIExJTkUgdW5pdHNcbiAgICAgICAgcFggKj0gTElORV9IRUlHSFQ7XG4gICAgICAgIHBZICo9IExJTkVfSEVJR0hUO1xuICAgICAgfSBlbHNlIHsgLy8gZGVsdGEgaW4gUEFHRSB1bml0c1xuICAgICAgICBwWCAqPSBQQUdFX0hFSUdIVDtcbiAgICAgICAgcFkgKj0gUEFHRV9IRUlHSFQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRmFsbC1iYWNrIGlmIHNwaW4gY2Fubm90IGJlIGRldGVybWluZWRcbiAgICBpZiAocFggJiYgIXNYKSB7XG4gICAgICBzWCA9IChwWCA8IDEpID8gLTEgOiAxO1xuICAgIH1cbiAgICBpZiAocFkgJiYgIXNZKSB7XG4gICAgICBzWSA9IChwWSA8IDEpID8gLTEgOiAxO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBzcGluWDogc1gsXG4gICAgICBzcGluWTogc1ksXG4gICAgICBwaXhlbFg6IHBYLFxuICAgICAgcGl4ZWxZOiBwWSxcbiAgICB9O1xuICB9LFxuICBoYW5kbGVNb3VzZUVudGVyKCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgc3dpcGVyLm1vdXNlRW50ZXJlZCA9IHRydWU7XG4gIH0sXG4gIGhhbmRsZU1vdXNlTGVhdmUoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBzd2lwZXIubW91c2VFbnRlcmVkID0gZmFsc2U7XG4gIH0sXG4gIGhhbmRsZShldmVudCkge1xuICAgIGxldCBlID0gZXZlbnQ7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBjb25zdCBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLm1vdXNld2hlZWw7XG5cbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuXG4gICAgbGV0IHRhcmdldCA9IHN3aXBlci4kZWw7XG4gICAgaWYgKHN3aXBlci5wYXJhbXMubW91c2V3aGVlbC5ldmVudHNUYXJnZWQgIT09ICdjb250YWluZXInKSB7XG4gICAgICB0YXJnZXQgPSAkKHN3aXBlci5wYXJhbXMubW91c2V3aGVlbC5ldmVudHNUYXJnZWQpO1xuICAgIH1cbiAgICBpZiAoIXN3aXBlci5tb3VzZUVudGVyZWQgJiYgIXRhcmdldFswXS5jb250YWlucyhlLnRhcmdldCkgJiYgIXBhcmFtcy5yZWxlYXNlT25FZGdlcykgcmV0dXJuIHRydWU7XG5cbiAgICBpZiAoZS5vcmlnaW5hbEV2ZW50KSBlID0gZS5vcmlnaW5hbEV2ZW50OyAvLyBqcXVlcnkgZml4XG4gICAgbGV0IGRlbHRhID0gMDtcbiAgICBjb25zdCBydGxGYWN0b3IgPSBzd2lwZXIucnRsVHJhbnNsYXRlID8gLTEgOiAxO1xuXG4gICAgY29uc3QgZGF0YSA9IE1vdXNld2hlZWwubm9ybWFsaXplKGUpO1xuXG4gICAgaWYgKHBhcmFtcy5mb3JjZVRvQXhpcykge1xuICAgICAgaWYgKHN3aXBlci5pc0hvcml6b250YWwoKSkge1xuICAgICAgICBpZiAoTWF0aC5hYnMoZGF0YS5waXhlbFgpID4gTWF0aC5hYnMoZGF0YS5waXhlbFkpKSBkZWx0YSA9IGRhdGEucGl4ZWxYICogcnRsRmFjdG9yO1xuICAgICAgICBlbHNlIHJldHVybiB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChNYXRoLmFicyhkYXRhLnBpeGVsWSkgPiBNYXRoLmFicyhkYXRhLnBpeGVsWCkpIGRlbHRhID0gZGF0YS5waXhlbFk7XG4gICAgICBlbHNlIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZWx0YSA9IE1hdGguYWJzKGRhdGEucGl4ZWxYKSA+IE1hdGguYWJzKGRhdGEucGl4ZWxZKSA/IC1kYXRhLnBpeGVsWCAqIHJ0bEZhY3RvciA6IC1kYXRhLnBpeGVsWTtcbiAgICB9XG5cbiAgICBpZiAoZGVsdGEgPT09IDApIHJldHVybiB0cnVlO1xuXG4gICAgaWYgKHBhcmFtcy5pbnZlcnQpIGRlbHRhID0gLWRlbHRhO1xuXG4gICAgaWYgKCFzd2lwZXIucGFyYW1zLmZyZWVNb2RlKSB7XG4gICAgICAvLyBSZWdpc3RlciB0aGUgbmV3IGV2ZW50IGluIGEgdmFyaWFibGUgd2hpY2ggc3RvcmVzIHRoZSByZWxldmFudCBkYXRhXG4gICAgICBjb25zdCBuZXdFdmVudCA9IHtcbiAgICAgICAgdGltZTogVXRpbHMubm93KCksXG4gICAgICAgIGRlbHRhOiBNYXRoLmFicyhkZWx0YSksXG4gICAgICAgIGRpcmVjdGlvbjogTWF0aC5zaWduKGRlbHRhKSxcbiAgICAgICAgcmF3OiBldmVudCxcbiAgICAgIH07XG5cbiAgICAgIC8vIEtlZXAgdGhlIG1vc3QgcmVjZW50IGV2ZW50c1xuICAgICAgY29uc3QgcmVjZW50V2hlZWxFdmVudHMgPSBzd2lwZXIubW91c2V3aGVlbC5yZWNlbnRXaGVlbEV2ZW50cztcbiAgICAgIGlmIChyZWNlbnRXaGVlbEV2ZW50cy5sZW5ndGggPj0gMikge1xuICAgICAgICByZWNlbnRXaGVlbEV2ZW50cy5zaGlmdCgpOyAvLyBvbmx5IHN0b3JlIHRoZSBsYXN0IE4gZXZlbnRzXG4gICAgICB9XG4gICAgICBjb25zdCBwcmV2RXZlbnQgPSByZWNlbnRXaGVlbEV2ZW50cy5sZW5ndGggPyByZWNlbnRXaGVlbEV2ZW50c1tyZWNlbnRXaGVlbEV2ZW50cy5sZW5ndGggLSAxXSA6IHVuZGVmaW5lZDtcbiAgICAgIHJlY2VudFdoZWVsRXZlbnRzLnB1c2gobmV3RXZlbnQpO1xuXG4gICAgICAvLyBJZiB0aGVyZSBpcyBhdCBsZWFzdCBvbmUgcHJldmlvdXMgcmVjb3JkZWQgZXZlbnQ6XG4gICAgICAvLyAgIElmIGRpcmVjdGlvbiBoYXMgY2hhbmdlZCBvclxuICAgICAgLy8gICBpZiB0aGUgc2Nyb2xsIGlzIHF1aWNrZXIgdGhhbiB0aGUgcHJldmlvdXMgb25lOlxuICAgICAgLy8gICAgIEFuaW1hdGUgdGhlIHNsaWRlci5cbiAgICAgIC8vIEVsc2UgKHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgdGhlIHdoZWVsIGlzIG1vdmVkKTpcbiAgICAgIC8vICAgICBBbmltYXRlIHRoZSBzbGlkZXIuXG4gICAgICBpZiAocHJldkV2ZW50KSB7XG4gICAgICAgIGlmIChuZXdFdmVudC5kaXJlY3Rpb24gIT09IHByZXZFdmVudC5kaXJlY3Rpb24gfHwgbmV3RXZlbnQuZGVsdGEgPiBwcmV2RXZlbnQuZGVsdGEgfHwgbmV3RXZlbnQudGltZSA+IHByZXZFdmVudC50aW1lICsgMTUwKSB7XG4gICAgICAgICAgc3dpcGVyLm1vdXNld2hlZWwuYW5pbWF0ZVNsaWRlcihuZXdFdmVudCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN3aXBlci5tb3VzZXdoZWVsLmFuaW1hdGVTbGlkZXIobmV3RXZlbnQpO1xuICAgICAgfVxuXG4gICAgICAvLyBJZiBpdCdzIHRpbWUgdG8gcmVsZWFzZSB0aGUgc2Nyb2xsOlxuICAgICAgLy8gICBSZXR1cm4gbm93IHNvIHlvdSBkb24ndCBoaXQgdGhlIHByZXZlbnREZWZhdWx0LlxuICAgICAgaWYgKHN3aXBlci5tb3VzZXdoZWVsLnJlbGVhc2VTY3JvbGwobmV3RXZlbnQpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBGcmVlbW9kZSBvciBzY3JvbGxDb250YWluZXI6XG5cbiAgICAgIC8vIElmIHdlIHJlY2VudGx5IHNuYXBwZWQgYWZ0ZXIgYSBtb21lbnR1bSBzY3JvbGwsIHRoZW4gaWdub3JlIHdoZWVsIGV2ZW50c1xuICAgICAgLy8gdG8gZ2l2ZSB0aW1lIGZvciB0aGUgZGVjZWxlcmF0aW9uIHRvIGZpbmlzaC4gU3RvcCBpZ25vcmluZyBhZnRlciA1MDAgbXNlY3NcbiAgICAgIC8vIG9yIGlmIGl0J3MgYSBuZXcgc2Nyb2xsIChsYXJnZXIgZGVsdGEgb3IgaW52ZXJzZSBzaWduIGFzIGxhc3QgZXZlbnQgYmVmb3JlXG4gICAgICAvLyBhbiBlbmQtb2YtbW9tZW50dW0gc25hcCkuXG4gICAgICBjb25zdCBuZXdFdmVudCA9IHsgdGltZTogVXRpbHMubm93KCksIGRlbHRhOiBNYXRoLmFicyhkZWx0YSksIGRpcmVjdGlvbjogTWF0aC5zaWduKGRlbHRhKSB9O1xuICAgICAgY29uc3QgeyBsYXN0RXZlbnRCZWZvcmVTbmFwIH0gPSBzd2lwZXIubW91c2V3aGVlbDtcbiAgICAgIGNvbnN0IGlnbm9yZVdoZWVsRXZlbnRzID0gbGFzdEV2ZW50QmVmb3JlU25hcFxuICAgICAgICAmJiBuZXdFdmVudC50aW1lIDwgbGFzdEV2ZW50QmVmb3JlU25hcC50aW1lICsgNTAwXG4gICAgICAgICYmIG5ld0V2ZW50LmRlbHRhIDw9IGxhc3RFdmVudEJlZm9yZVNuYXAuZGVsdGFcbiAgICAgICAgJiYgbmV3RXZlbnQuZGlyZWN0aW9uID09PSBsYXN0RXZlbnRCZWZvcmVTbmFwLmRpcmVjdGlvbjtcbiAgICAgIGlmICghaWdub3JlV2hlZWxFdmVudHMpIHtcbiAgICAgICAgc3dpcGVyLm1vdXNld2hlZWwubGFzdEV2ZW50QmVmb3JlU25hcCA9IHVuZGVmaW5lZDtcblxuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgc3dpcGVyLmxvb3BGaXgoKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcG9zaXRpb24gPSBzd2lwZXIuZ2V0VHJhbnNsYXRlKCkgKyAoZGVsdGEgKiBwYXJhbXMuc2Vuc2l0aXZpdHkpO1xuICAgICAgICBjb25zdCB3YXNCZWdpbm5pbmcgPSBzd2lwZXIuaXNCZWdpbm5pbmc7XG4gICAgICAgIGNvbnN0IHdhc0VuZCA9IHN3aXBlci5pc0VuZDtcblxuICAgICAgICBpZiAocG9zaXRpb24gPj0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSBwb3NpdGlvbiA9IHN3aXBlci5taW5UcmFuc2xhdGUoKTtcbiAgICAgICAgaWYgKHBvc2l0aW9uIDw9IHN3aXBlci5tYXhUcmFuc2xhdGUoKSkgcG9zaXRpb24gPSBzd2lwZXIubWF4VHJhbnNsYXRlKCk7XG5cbiAgICAgICAgc3dpcGVyLnNldFRyYW5zaXRpb24oMCk7XG4gICAgICAgIHN3aXBlci5zZXRUcmFuc2xhdGUocG9zaXRpb24pO1xuICAgICAgICBzd2lwZXIudXBkYXRlUHJvZ3Jlc3MoKTtcbiAgICAgICAgc3dpcGVyLnVwZGF0ZUFjdGl2ZUluZGV4KCk7XG4gICAgICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG5cbiAgICAgICAgaWYgKCghd2FzQmVnaW5uaW5nICYmIHN3aXBlci5pc0JlZ2lubmluZykgfHwgKCF3YXNFbmQgJiYgc3dpcGVyLmlzRW5kKSkge1xuICAgICAgICAgIHN3aXBlci51cGRhdGVTbGlkZXNDbGFzc2VzKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5mcmVlTW9kZVN0aWNreSkge1xuICAgICAgICAgIC8vIFdoZW4gd2hlZWwgc2Nyb2xsaW5nIHN0YXJ0cyB3aXRoIHN0aWNreSAoYWthIHNuYXApIGVuYWJsZWQsIHRoZW4gZGV0ZWN0XG4gICAgICAgICAgLy8gdGhlIGVuZCBvZiBhIG1vbWVudHVtIHNjcm9sbCBieSBzdG9yaW5nIHJlY2VudCAoTj0xNT8pIHdoZWVsIGV2ZW50cy5cbiAgICAgICAgICAvLyAxLiBkbyBhbGwgTiBldmVudHMgaGF2ZSBkZWNyZWFzaW5nIG9yIHNhbWUgKGFic29sdXRlIHZhbHVlKSBkZWx0YT9cbiAgICAgICAgICAvLyAyLiBkaWQgYWxsIE4gZXZlbnRzIGFycml2ZSBpbiB0aGUgbGFzdCBNIChNPTUwMD8pIG1zZWNzP1xuICAgICAgICAgIC8vIDMuIGRvZXMgdGhlIGVhcmxpZXN0IGV2ZW50IGhhdmUgYW4gKGFic29sdXRlIHZhbHVlKSBkZWx0YSB0aGF0J3NcbiAgICAgICAgICAvLyAgICBhdCBsZWFzdCBQIChQPTE/KSBsYXJnZXIgdGhhbiB0aGUgbW9zdCByZWNlbnQgZXZlbnQncyBkZWx0YT9cbiAgICAgICAgICAvLyA0LiBkb2VzIHRoZSBsYXRlc3QgZXZlbnQgaGF2ZSBhIGRlbHRhIHRoYXQncyBzbWFsbGVyIHRoYW4gUSAoUT02PykgcGl4ZWxzP1xuICAgICAgICAgIC8vIElmIDEtNCBhcmUgXCJ5ZXNcIiB0aGVuIHdlJ3JlIG5lYXIgdGhlIGVuZCBvZiBhIG1vbXVudHVtIHNjcm9sbCBkZWNlbGVyYXRpb24uXG4gICAgICAgICAgLy8gU25hcCBpbW1lZGlhdGVseSBhbmQgaWdub3JlIHJlbWFpbmluZyB3aGVlbCBldmVudHMgaW4gdGhpcyBzY3JvbGwuXG4gICAgICAgICAgLy8gU2VlIGNvbW1lbnQgYWJvdmUgZm9yIFwicmVtYWluaW5nIHdoZWVsIGV2ZW50cyBpbiB0aGlzIHNjcm9sbFwiIGRldGVybWluYXRpb24uXG4gICAgICAgICAgLy8gSWYgMS00IGFyZW4ndCBzYXRpc2ZpZWQsIHRoZW4gd2FpdCB0byBzbmFwIHVudGlsIDUwMG1zIGFmdGVyIHRoZSBsYXN0IGV2ZW50LlxuICAgICAgICAgIGNsZWFyVGltZW91dChzd2lwZXIubW91c2V3aGVlbC50aW1lb3V0KTtcbiAgICAgICAgICBzd2lwZXIubW91c2V3aGVlbC50aW1lb3V0ID0gdW5kZWZpbmVkO1xuICAgICAgICAgIGNvbnN0IHJlY2VudFdoZWVsRXZlbnRzID0gc3dpcGVyLm1vdXNld2hlZWwucmVjZW50V2hlZWxFdmVudHM7XG4gICAgICAgICAgaWYgKHJlY2VudFdoZWVsRXZlbnRzLmxlbmd0aCA+PSAxNSkge1xuICAgICAgICAgICAgcmVjZW50V2hlZWxFdmVudHMuc2hpZnQoKTsgLy8gb25seSBzdG9yZSB0aGUgbGFzdCBOIGV2ZW50c1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBwcmV2RXZlbnQgPSByZWNlbnRXaGVlbEV2ZW50cy5sZW5ndGggPyByZWNlbnRXaGVlbEV2ZW50c1tyZWNlbnRXaGVlbEV2ZW50cy5sZW5ndGggLSAxXSA6IHVuZGVmaW5lZDtcbiAgICAgICAgICBjb25zdCBmaXJzdEV2ZW50ID0gcmVjZW50V2hlZWxFdmVudHNbMF07XG4gICAgICAgICAgcmVjZW50V2hlZWxFdmVudHMucHVzaChuZXdFdmVudCk7XG4gICAgICAgICAgaWYgKHByZXZFdmVudCAmJiAobmV3RXZlbnQuZGVsdGEgPiBwcmV2RXZlbnQuZGVsdGEgfHwgbmV3RXZlbnQuZGlyZWN0aW9uICE9PSBwcmV2RXZlbnQuZGlyZWN0aW9uKSkge1xuICAgICAgICAgICAgLy8gSW5jcmVhc2luZyBvciByZXZlcnNlLXNpZ24gZGVsdGEgbWVhbnMgdGhlIHVzZXIgc3RhcnRlZCBzY3JvbGxpbmcgYWdhaW4uIENsZWFyIHRoZSB3aGVlbCBldmVudCBsb2cuXG4gICAgICAgICAgICByZWNlbnRXaGVlbEV2ZW50cy5zcGxpY2UoMCk7XG4gICAgICAgICAgfSBlbHNlIGlmIChyZWNlbnRXaGVlbEV2ZW50cy5sZW5ndGggPj0gMTVcbiAgICAgICAgICAgICAgJiYgbmV3RXZlbnQudGltZSAtIGZpcnN0RXZlbnQudGltZSA8IDUwMFxuICAgICAgICAgICAgICAmJiBmaXJzdEV2ZW50LmRlbHRhIC0gbmV3RXZlbnQuZGVsdGEgPj0gMVxuICAgICAgICAgICAgICAmJiBuZXdFdmVudC5kZWx0YSA8PSA2XG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICAvLyBXZSdyZSBhdCB0aGUgZW5kIG9mIHRoZSBkZWNlbGVyYXRpb24gb2YgYSBtb21lbnR1bSBzY3JvbGwsIHNvIHRoZXJlJ3Mgbm8gbmVlZFxuICAgICAgICAgICAgLy8gdG8gd2FpdCBmb3IgbW9yZSBldmVudHMuIFNuYXAgQVNBUCBvbiB0aGUgbmV4dCB0aWNrLlxuICAgICAgICAgICAgLy8gQWxzbywgYmVjYXVzZSB0aGVyZSdzIHNvbWUgcmVtYWluaW5nIG1vbWVudHVtIHdlJ2xsIGJpYXMgdGhlIHNuYXAgaW4gdGhlXG4gICAgICAgICAgICAvLyBkaXJlY3Rpb24gb2YgdGhlIG9uZ29pbmcgc2Nyb2xsIGJlY2F1c2UgaXQncyBiZXR0ZXIgVVggZm9yIHRoZSBzY3JvbGwgdG8gc25hcFxuICAgICAgICAgICAgLy8gaW4gdGhlIHNhbWUgZGlyZWN0aW9uIGFzIHRoZSBzY3JvbGwgaW5zdGVhZCBvZiByZXZlcnNpbmcgdG8gc25hcC4gIFRoZXJlZm9yZSxcbiAgICAgICAgICAgIC8vIGlmIGl0J3MgYWxyZWFkeSBzY3JvbGxlZCBtb3JlIHRoYW4gMjAlIGluIHRoZSBjdXJyZW50IGRpcmVjdGlvbiwga2VlcCBnb2luZy5cbiAgICAgICAgICAgIGNvbnN0IHNuYXBUb1RocmVzaG9sZCA9IGRlbHRhID4gMCA/IDAuOCA6IDAuMjtcbiAgICAgICAgICAgIHN3aXBlci5tb3VzZXdoZWVsLmxhc3RFdmVudEJlZm9yZVNuYXAgPSBuZXdFdmVudDtcbiAgICAgICAgICAgIHJlY2VudFdoZWVsRXZlbnRzLnNwbGljZSgwKTtcbiAgICAgICAgICAgIHN3aXBlci5tb3VzZXdoZWVsLnRpbWVvdXQgPSBVdGlscy5uZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgICAgIHN3aXBlci5zbGlkZVRvQ2xvc2VzdChzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB1bmRlZmluZWQsIHNuYXBUb1RocmVzaG9sZCk7XG4gICAgICAgICAgICB9LCAwKTsgLy8gbm8gZGVsYXk7IG1vdmUgb24gbmV4dCB0aWNrXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICghc3dpcGVyLm1vdXNld2hlZWwudGltZW91dCkge1xuICAgICAgICAgICAgLy8gaWYgd2UgZ2V0IGhlcmUsIHRoZW4gd2UgaGF2ZW4ndCBkZXRlY3RlZCB0aGUgZW5kIG9mIGEgbW9tZW50dW0gc2Nyb2xsLCBzb1xuICAgICAgICAgICAgLy8gd2UnbGwgY29uc2lkZXIgYSBzY3JvbGwgXCJjb21wbGV0ZVwiIHdoZW4gdGhlcmUgaGF2ZW4ndCBiZWVuIGFueSB3aGVlbCBldmVudHNcbiAgICAgICAgICAgIC8vIGZvciA1MDBtcy5cbiAgICAgICAgICAgIHN3aXBlci5tb3VzZXdoZWVsLnRpbWVvdXQgPSBVdGlscy5uZXh0VGljaygoKSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IHNuYXBUb1RocmVzaG9sZCA9IDAuNTtcbiAgICAgICAgICAgICAgc3dpcGVyLm1vdXNld2hlZWwubGFzdEV2ZW50QmVmb3JlU25hcCA9IG5ld0V2ZW50O1xuICAgICAgICAgICAgICByZWNlbnRXaGVlbEV2ZW50cy5zcGxpY2UoMCk7XG4gICAgICAgICAgICAgIHN3aXBlci5zbGlkZVRvQ2xvc2VzdChzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB1bmRlZmluZWQsIHNuYXBUb1RocmVzaG9sZCk7XG4gICAgICAgICAgICB9LCA1MDApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEVtaXQgZXZlbnRcbiAgICAgICAgaWYgKCFpZ25vcmVXaGVlbEV2ZW50cykgc3dpcGVyLmVtaXQoJ3Njcm9sbCcsIGUpO1xuXG4gICAgICAgIC8vIFN0b3AgYXV0b3BsYXlcbiAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMuYXV0b3BsYXkgJiYgc3dpcGVyLnBhcmFtcy5hdXRvcGxheURpc2FibGVPbkludGVyYWN0aW9uKSBzd2lwZXIuYXV0b3BsYXkuc3RvcCgpO1xuICAgICAgICAvLyBSZXR1cm4gcGFnZSBzY3JvbGwgb24gZWRnZSBwb3NpdGlvbnNcbiAgICAgICAgaWYgKHBvc2l0aW9uID09PSBzd2lwZXIubWluVHJhbnNsYXRlKCkgfHwgcG9zaXRpb24gPT09IHN3aXBlci5tYXhUcmFuc2xhdGUoKSkgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGUucHJldmVudERlZmF1bHQpIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBlbHNlIGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIGFuaW1hdGVTbGlkZXIobmV3RXZlbnQpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIC8vIElmIHRoZSBtb3ZlbWVudCBpcyBOT1QgYmlnIGVub3VnaCBhbmRcbiAgICAvLyBpZiB0aGUgbGFzdCB0aW1lIHRoZSB1c2VyIHNjcm9sbGVkIHdhcyB0b28gY2xvc2UgdG8gdGhlIGN1cnJlbnQgb25lIChhdm9pZCBjb250aW51b3VzbHkgdHJpZ2dlcmluZyB0aGUgc2xpZGVyKTpcbiAgICAvLyAgIERvbid0IGdvIGFueSBmdXJ0aGVyIChhdm9pZCBpbnNpZ25pZmljYW50IHNjcm9sbCBtb3ZlbWVudCkuXG4gICAgaWYgKG5ld0V2ZW50LmRlbHRhID49IDYgJiYgVXRpbHMubm93KCkgLSBzd2lwZXIubW91c2V3aGVlbC5sYXN0U2Nyb2xsVGltZSA8IDYwKSB7XG4gICAgICAvLyBSZXR1cm4gZmFsc2UgYXMgYSBkZWZhdWx0XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgLy8gSWYgdXNlciBpcyBzY3JvbGxpbmcgdG93YXJkcyB0aGUgZW5kOlxuICAgIC8vICAgSWYgdGhlIHNsaWRlciBoYXNuJ3QgaGl0IHRoZSBsYXRlc3Qgc2xpZGUgb3JcbiAgICAvLyAgIGlmIHRoZSBzbGlkZXIgaXMgYSBsb29wIGFuZFxuICAgIC8vICAgaWYgdGhlIHNsaWRlciBpc24ndCBtb3ZpbmcgcmlnaHQgbm93OlxuICAgIC8vICAgICBHbyB0byBuZXh0IHNsaWRlIGFuZFxuICAgIC8vICAgICBlbWl0IGEgc2Nyb2xsIGV2ZW50LlxuICAgIC8vIEVsc2UgKHRoZSB1c2VyIGlzIHNjcm9sbGluZyB0b3dhcmRzIHRoZSBiZWdpbm5pbmcpIGFuZFxuICAgIC8vIGlmIHRoZSBzbGlkZXIgaGFzbid0IGhpdCB0aGUgZmlyc3Qgc2xpZGUgb3JcbiAgICAvLyBpZiB0aGUgc2xpZGVyIGlzIGEgbG9vcCBhbmRcbiAgICAvLyBpZiB0aGUgc2xpZGVyIGlzbid0IG1vdmluZyByaWdodCBub3c6XG4gICAgLy8gICBHbyB0byBwcmV2IHNsaWRlIGFuZFxuICAgIC8vICAgZW1pdCBhIHNjcm9sbCBldmVudC5cbiAgICBpZiAobmV3RXZlbnQuZGlyZWN0aW9uIDwgMCkge1xuICAgICAgaWYgKCghc3dpcGVyLmlzRW5kIHx8IHN3aXBlci5wYXJhbXMubG9vcCkgJiYgIXN3aXBlci5hbmltYXRpbmcpIHtcbiAgICAgICAgc3dpcGVyLnNsaWRlTmV4dCgpO1xuICAgICAgICBzd2lwZXIuZW1pdCgnc2Nyb2xsJywgbmV3RXZlbnQucmF3KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCghc3dpcGVyLmlzQmVnaW5uaW5nIHx8IHN3aXBlci5wYXJhbXMubG9vcCkgJiYgIXN3aXBlci5hbmltYXRpbmcpIHtcbiAgICAgIHN3aXBlci5zbGlkZVByZXYoKTtcbiAgICAgIHN3aXBlci5lbWl0KCdzY3JvbGwnLCBuZXdFdmVudC5yYXcpO1xuICAgIH1cbiAgICAvLyBJZiB5b3UgZ290IGhlcmUgaXMgYmVjYXVzZSBhbiBhbmltYXRpb24gaGFzIGJlZW4gdHJpZ2dlcmVkIHNvIHN0b3JlIHRoZSBjdXJyZW50IHRpbWVcbiAgICBzd2lwZXIubW91c2V3aGVlbC5sYXN0U2Nyb2xsVGltZSA9IChuZXcgd2luLkRhdGUoKSkuZ2V0VGltZSgpO1xuICAgIC8vIFJldHVybiBmYWxzZSBhcyBhIGRlZmF1bHRcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIHJlbGVhc2VTY3JvbGwobmV3RXZlbnQpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IHBhcmFtcyA9IHN3aXBlci5wYXJhbXMubW91c2V3aGVlbDtcbiAgICBpZiAobmV3RXZlbnQuZGlyZWN0aW9uIDwgMCkge1xuICAgICAgaWYgKHN3aXBlci5pc0VuZCAmJiAhc3dpcGVyLnBhcmFtcy5sb29wICYmIHBhcmFtcy5yZWxlYXNlT25FZGdlcykge1xuICAgICAgICAvLyBSZXR1cm4gdHJ1ZSB0byBhbmltYXRlIHNjcm9sbCBvbiBlZGdlc1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHN3aXBlci5pc0JlZ2lubmluZyAmJiAhc3dpcGVyLnBhcmFtcy5sb29wICYmIHBhcmFtcy5yZWxlYXNlT25FZGdlcykge1xuICAgICAgLy8gUmV0dXJuIHRydWUgdG8gYW5pbWF0ZSBzY3JvbGwgb24gZWRnZXNcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIGVuYWJsZSgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IGV2ZW50ID0gTW91c2V3aGVlbC5ldmVudCgpO1xuICAgIGlmIChzd2lwZXIucGFyYW1zLmNzc01vZGUpIHtcbiAgICAgIHN3aXBlci53cmFwcGVyRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudCwgc3dpcGVyLm1vdXNld2hlZWwuaGFuZGxlKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoIWV2ZW50KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHN3aXBlci5tb3VzZXdoZWVsLmVuYWJsZWQpIHJldHVybiBmYWxzZTtcbiAgICBsZXQgdGFyZ2V0ID0gc3dpcGVyLiRlbDtcbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5tb3VzZXdoZWVsLmV2ZW50c1RhcmdlZCAhPT0gJ2NvbnRhaW5lcicpIHtcbiAgICAgIHRhcmdldCA9ICQoc3dpcGVyLnBhcmFtcy5tb3VzZXdoZWVsLmV2ZW50c1RhcmdlZCk7XG4gICAgfVxuICAgIHRhcmdldC5vbignbW91c2VlbnRlcicsIHN3aXBlci5tb3VzZXdoZWVsLmhhbmRsZU1vdXNlRW50ZXIpO1xuICAgIHRhcmdldC5vbignbW91c2VsZWF2ZScsIHN3aXBlci5tb3VzZXdoZWVsLmhhbmRsZU1vdXNlTGVhdmUpO1xuICAgIHRhcmdldC5vbihldmVudCwgc3dpcGVyLm1vdXNld2hlZWwuaGFuZGxlKTtcbiAgICBzd2lwZXIubW91c2V3aGVlbC5lbmFibGVkID0gdHJ1ZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgZGlzYWJsZSgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IGV2ZW50ID0gTW91c2V3aGVlbC5ldmVudCgpO1xuICAgIGlmIChzd2lwZXIucGFyYW1zLmNzc01vZGUpIHtcbiAgICAgIHN3aXBlci53cmFwcGVyRWwuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgc3dpcGVyLm1vdXNld2hlZWwuaGFuZGxlKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoIWV2ZW50KSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCFzd2lwZXIubW91c2V3aGVlbC5lbmFibGVkKSByZXR1cm4gZmFsc2U7XG4gICAgbGV0IHRhcmdldCA9IHN3aXBlci4kZWw7XG4gICAgaWYgKHN3aXBlci5wYXJhbXMubW91c2V3aGVlbC5ldmVudHNUYXJnZWQgIT09ICdjb250YWluZXInKSB7XG4gICAgICB0YXJnZXQgPSAkKHN3aXBlci5wYXJhbXMubW91c2V3aGVlbC5ldmVudHNUYXJnZWQpO1xuICAgIH1cbiAgICB0YXJnZXQub2ZmKGV2ZW50LCBzd2lwZXIubW91c2V3aGVlbC5oYW5kbGUpO1xuICAgIHN3aXBlci5tb3VzZXdoZWVsLmVuYWJsZWQgPSBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbn07XG5cbmNvbnN0IFBhZ2luYXRpb24gPSB7XG4gIHVwZGF0ZSgpIHtcbiAgICAvLyBSZW5kZXIgfHwgVXBkYXRlIFBhZ2luYXRpb24gYnVsbGV0cy9pdGVtc1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgY29uc3QgcnRsID0gc3dpcGVyLnJ0bDtcbiAgICBjb25zdCBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnBhZ2luYXRpb247XG4gICAgaWYgKCFwYXJhbXMuZWwgfHwgIXN3aXBlci5wYWdpbmF0aW9uLmVsIHx8ICFzd2lwZXIucGFnaW5hdGlvbi4kZWwgfHwgc3dpcGVyLnBhZ2luYXRpb24uJGVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIGNvbnN0IHNsaWRlc0xlbmd0aCA9IHN3aXBlci52aXJ0dWFsICYmIHN3aXBlci5wYXJhbXMudmlydHVhbC5lbmFibGVkID8gc3dpcGVyLnZpcnR1YWwuc2xpZGVzLmxlbmd0aCA6IHN3aXBlci5zbGlkZXMubGVuZ3RoO1xuICAgIGNvbnN0ICRlbCA9IHN3aXBlci5wYWdpbmF0aW9uLiRlbDtcbiAgICAvLyBDdXJyZW50L1RvdGFsXG4gICAgbGV0IGN1cnJlbnQ7XG4gICAgY29uc3QgdG90YWwgPSBzd2lwZXIucGFyYW1zLmxvb3AgPyBNYXRoLmNlaWwoKHNsaWRlc0xlbmd0aCAtIChzd2lwZXIubG9vcGVkU2xpZGVzICogMikpIC8gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cCkgOiBzd2lwZXIuc25hcEdyaWQubGVuZ3RoO1xuICAgIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIHtcbiAgICAgIGN1cnJlbnQgPSBNYXRoLmNlaWwoKHN3aXBlci5hY3RpdmVJbmRleCAtIHN3aXBlci5sb29wZWRTbGlkZXMpIC8gc3dpcGVyLnBhcmFtcy5zbGlkZXNQZXJHcm91cCk7XG4gICAgICBpZiAoY3VycmVudCA+IHNsaWRlc0xlbmd0aCAtIDEgLSAoc3dpcGVyLmxvb3BlZFNsaWRlcyAqIDIpKSB7XG4gICAgICAgIGN1cnJlbnQgLT0gKHNsaWRlc0xlbmd0aCAtIChzd2lwZXIubG9vcGVkU2xpZGVzICogMikpO1xuICAgICAgfVxuICAgICAgaWYgKGN1cnJlbnQgPiB0b3RhbCAtIDEpIGN1cnJlbnQgLT0gdG90YWw7XG4gICAgICBpZiAoY3VycmVudCA8IDAgJiYgc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uVHlwZSAhPT0gJ2J1bGxldHMnKSBjdXJyZW50ID0gdG90YWwgKyBjdXJyZW50O1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHN3aXBlci5zbmFwSW5kZXggIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjdXJyZW50ID0gc3dpcGVyLnNuYXBJbmRleDtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VycmVudCA9IHN3aXBlci5hY3RpdmVJbmRleCB8fCAwO1xuICAgIH1cbiAgICAvLyBUeXBlc1xuICAgIGlmIChwYXJhbXMudHlwZSA9PT0gJ2J1bGxldHMnICYmIHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldHMgJiYgc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0cy5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zdCBidWxsZXRzID0gc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0cztcbiAgICAgIGxldCBmaXJzdEluZGV4O1xuICAgICAgbGV0IGxhc3RJbmRleDtcbiAgICAgIGxldCBtaWRJbmRleDtcbiAgICAgIGlmIChwYXJhbXMuZHluYW1pY0J1bGxldHMpIHtcbiAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0U2l6ZSA9IGJ1bGxldHMuZXEoMClbc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ291dGVyV2lkdGgnIDogJ291dGVySGVpZ2h0J10odHJ1ZSk7XG4gICAgICAgICRlbC5jc3Moc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ3dpZHRoJyA6ICdoZWlnaHQnLCBgJHtzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRTaXplICogKHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMgKyA0KX1weGApO1xuICAgICAgICBpZiAocGFyYW1zLmR5bmFtaWNNYWluQnVsbGV0cyA+IDEgJiYgc3dpcGVyLnByZXZpb3VzSW5kZXggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLmR5bmFtaWNCdWxsZXRJbmRleCArPSAoY3VycmVudCAtIHN3aXBlci5wcmV2aW91c0luZGV4KTtcbiAgICAgICAgICBpZiAoc3dpcGVyLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4ID4gKHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMgLSAxKSkge1xuICAgICAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4ID0gcGFyYW1zLmR5bmFtaWNNYWluQnVsbGV0cyAtIDE7XG4gICAgICAgICAgfSBlbHNlIGlmIChzd2lwZXIucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXggPCAwKSB7XG4gICAgICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi5keW5hbWljQnVsbGV0SW5kZXggPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmaXJzdEluZGV4ID0gY3VycmVudCAtIHN3aXBlci5wYWdpbmF0aW9uLmR5bmFtaWNCdWxsZXRJbmRleDtcbiAgICAgICAgbGFzdEluZGV4ID0gZmlyc3RJbmRleCArIChNYXRoLm1pbihidWxsZXRzLmxlbmd0aCwgcGFyYW1zLmR5bmFtaWNNYWluQnVsbGV0cykgLSAxKTtcbiAgICAgICAgbWlkSW5kZXggPSAobGFzdEluZGV4ICsgZmlyc3RJbmRleCkgLyAyO1xuICAgICAgfVxuICAgICAgYnVsbGV0cy5yZW1vdmVDbGFzcyhgJHtwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3N9ICR7cGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzfS1uZXh0ICR7cGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzfS1uZXh0LW5leHQgJHtwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3N9LXByZXYgJHtwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3N9LXByZXYtcHJldiAke3BhcmFtcy5idWxsZXRBY3RpdmVDbGFzc30tbWFpbmApO1xuICAgICAgaWYgKCRlbC5sZW5ndGggPiAxKSB7XG4gICAgICAgIGJ1bGxldHMuZWFjaCgoaW5kZXgsIGJ1bGxldCkgPT4ge1xuICAgICAgICAgIGNvbnN0ICRidWxsZXQgPSAkKGJ1bGxldCk7XG4gICAgICAgICAgY29uc3QgYnVsbGV0SW5kZXggPSAkYnVsbGV0LmluZGV4KCk7XG4gICAgICAgICAgaWYgKGJ1bGxldEluZGV4ID09PSBjdXJyZW50KSB7XG4gICAgICAgICAgICAkYnVsbGV0LmFkZENsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChwYXJhbXMuZHluYW1pY0J1bGxldHMpIHtcbiAgICAgICAgICAgIGlmIChidWxsZXRJbmRleCA+PSBmaXJzdEluZGV4ICYmIGJ1bGxldEluZGV4IDw9IGxhc3RJbmRleCkge1xuICAgICAgICAgICAgICAkYnVsbGV0LmFkZENsYXNzKGAke3BhcmFtcy5idWxsZXRBY3RpdmVDbGFzc30tbWFpbmApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGJ1bGxldEluZGV4ID09PSBmaXJzdEluZGV4KSB7XG4gICAgICAgICAgICAgICRidWxsZXRcbiAgICAgICAgICAgICAgICAucHJldigpXG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKGAke3BhcmFtcy5idWxsZXRBY3RpdmVDbGFzc30tcHJldmApXG4gICAgICAgICAgICAgICAgLnByZXYoKVxuICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhgJHtwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3N9LXByZXYtcHJldmApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGJ1bGxldEluZGV4ID09PSBsYXN0SW5kZXgpIHtcbiAgICAgICAgICAgICAgJGJ1bGxldFxuICAgICAgICAgICAgICAgIC5uZXh0KClcbiAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoYCR7cGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzfS1uZXh0YClcbiAgICAgICAgICAgICAgICAubmV4dCgpXG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKGAke3BhcmFtcy5idWxsZXRBY3RpdmVDbGFzc30tbmV4dC1uZXh0YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0ICRidWxsZXQgPSBidWxsZXRzLmVxKGN1cnJlbnQpO1xuICAgICAgICBjb25zdCBidWxsZXRJbmRleCA9ICRidWxsZXQuaW5kZXgoKTtcbiAgICAgICAgJGJ1bGxldC5hZGRDbGFzcyhwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3MpO1xuICAgICAgICBpZiAocGFyYW1zLmR5bmFtaWNCdWxsZXRzKSB7XG4gICAgICAgICAgY29uc3QgJGZpcnN0RGlzcGxheWVkQnVsbGV0ID0gYnVsbGV0cy5lcShmaXJzdEluZGV4KTtcbiAgICAgICAgICBjb25zdCAkbGFzdERpc3BsYXllZEJ1bGxldCA9IGJ1bGxldHMuZXEobGFzdEluZGV4KTtcbiAgICAgICAgICBmb3IgKGxldCBpID0gZmlyc3RJbmRleDsgaSA8PSBsYXN0SW5kZXg7IGkgKz0gMSkge1xuICAgICAgICAgICAgYnVsbGV0cy5lcShpKS5hZGRDbGFzcyhgJHtwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3N9LW1haW5gKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICAgICAgaWYgKGJ1bGxldEluZGV4ID49IGJ1bGxldHMubGVuZ3RoIC0gcGFyYW1zLmR5bmFtaWNNYWluQnVsbGV0cykge1xuICAgICAgICAgICAgICBmb3IgKGxldCBpID0gcGFyYW1zLmR5bmFtaWNNYWluQnVsbGV0czsgaSA+PSAwOyBpIC09IDEpIHtcbiAgICAgICAgICAgICAgICBidWxsZXRzLmVxKGJ1bGxldHMubGVuZ3RoIC0gaSkuYWRkQ2xhc3MoYCR7cGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzfS1tYWluYCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnVsbGV0cy5lcShidWxsZXRzLmxlbmd0aCAtIHBhcmFtcy5keW5hbWljTWFpbkJ1bGxldHMgLSAxKS5hZGRDbGFzcyhgJHtwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3N9LXByZXZgKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICRmaXJzdERpc3BsYXllZEJ1bGxldFxuICAgICAgICAgICAgICAgIC5wcmV2KClcbiAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoYCR7cGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzfS1wcmV2YClcbiAgICAgICAgICAgICAgICAucHJldigpXG4gICAgICAgICAgICAgICAgLmFkZENsYXNzKGAke3BhcmFtcy5idWxsZXRBY3RpdmVDbGFzc30tcHJldi1wcmV2YCk7XG4gICAgICAgICAgICAgICRsYXN0RGlzcGxheWVkQnVsbGV0XG4gICAgICAgICAgICAgICAgLm5leHQoKVxuICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhgJHtwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3N9LW5leHRgKVxuICAgICAgICAgICAgICAgIC5uZXh0KClcbiAgICAgICAgICAgICAgICAuYWRkQ2xhc3MoYCR7cGFyYW1zLmJ1bGxldEFjdGl2ZUNsYXNzfS1uZXh0LW5leHRgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgJGZpcnN0RGlzcGxheWVkQnVsbGV0XG4gICAgICAgICAgICAgIC5wcmV2KClcbiAgICAgICAgICAgICAgLmFkZENsYXNzKGAke3BhcmFtcy5idWxsZXRBY3RpdmVDbGFzc30tcHJldmApXG4gICAgICAgICAgICAgIC5wcmV2KClcbiAgICAgICAgICAgICAgLmFkZENsYXNzKGAke3BhcmFtcy5idWxsZXRBY3RpdmVDbGFzc30tcHJldi1wcmV2YCk7XG4gICAgICAgICAgICAkbGFzdERpc3BsYXllZEJ1bGxldFxuICAgICAgICAgICAgICAubmV4dCgpXG4gICAgICAgICAgICAgIC5hZGRDbGFzcyhgJHtwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3N9LW5leHRgKVxuICAgICAgICAgICAgICAubmV4dCgpXG4gICAgICAgICAgICAgIC5hZGRDbGFzcyhgJHtwYXJhbXMuYnVsbGV0QWN0aXZlQ2xhc3N9LW5leHQtbmV4dGApO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHBhcmFtcy5keW5hbWljQnVsbGV0cykge1xuICAgICAgICBjb25zdCBkeW5hbWljQnVsbGV0c0xlbmd0aCA9IE1hdGgubWluKGJ1bGxldHMubGVuZ3RoLCBwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzICsgNCk7XG4gICAgICAgIGNvbnN0IGJ1bGxldHNPZmZzZXQgPSAoKChzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRTaXplICogZHluYW1pY0J1bGxldHNMZW5ndGgpIC0gKHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldFNpemUpKSAvIDIpIC0gKG1pZEluZGV4ICogc3dpcGVyLnBhZ2luYXRpb24uYnVsbGV0U2l6ZSk7XG4gICAgICAgIGNvbnN0IG9mZnNldFByb3AgPSBydGwgPyAncmlnaHQnIDogJ2xlZnQnO1xuICAgICAgICBidWxsZXRzLmNzcyhzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyBvZmZzZXRQcm9wIDogJ3RvcCcsIGAke2J1bGxldHNPZmZzZXR9cHhgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHBhcmFtcy50eXBlID09PSAnZnJhY3Rpb24nKSB7XG4gICAgICAkZWwuZmluZChgLiR7cGFyYW1zLmN1cnJlbnRDbGFzc31gKS50ZXh0KHBhcmFtcy5mb3JtYXRGcmFjdGlvbkN1cnJlbnQoY3VycmVudCArIDEpKTtcbiAgICAgICRlbC5maW5kKGAuJHtwYXJhbXMudG90YWxDbGFzc31gKS50ZXh0KHBhcmFtcy5mb3JtYXRGcmFjdGlvblRvdGFsKHRvdGFsKSk7XG4gICAgfVxuICAgIGlmIChwYXJhbXMudHlwZSA9PT0gJ3Byb2dyZXNzYmFyJykge1xuICAgICAgbGV0IHByb2dyZXNzYmFyRGlyZWN0aW9uO1xuICAgICAgaWYgKHBhcmFtcy5wcm9ncmVzc2Jhck9wcG9zaXRlKSB7XG4gICAgICAgIHByb2dyZXNzYmFyRGlyZWN0aW9uID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ3ZlcnRpY2FsJyA6ICdob3Jpem9udGFsJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByb2dyZXNzYmFyRGlyZWN0aW9uID0gc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ2hvcml6b250YWwnIDogJ3ZlcnRpY2FsJztcbiAgICAgIH1cbiAgICAgIGNvbnN0IHNjYWxlID0gKGN1cnJlbnQgKyAxKSAvIHRvdGFsO1xuICAgICAgbGV0IHNjYWxlWCA9IDE7XG4gICAgICBsZXQgc2NhbGVZID0gMTtcbiAgICAgIGlmIChwcm9ncmVzc2JhckRpcmVjdGlvbiA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICAgIHNjYWxlWCA9IHNjYWxlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2NhbGVZID0gc2NhbGU7XG4gICAgICB9XG4gICAgICAkZWwuZmluZChgLiR7cGFyYW1zLnByb2dyZXNzYmFyRmlsbENsYXNzfWApLnRyYW5zZm9ybShgdHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlWCgke3NjYWxlWH0pIHNjYWxlWSgke3NjYWxlWX0pYCkudHJhbnNpdGlvbihzd2lwZXIucGFyYW1zLnNwZWVkKTtcbiAgICB9XG4gICAgaWYgKHBhcmFtcy50eXBlID09PSAnY3VzdG9tJyAmJiBwYXJhbXMucmVuZGVyQ3VzdG9tKSB7XG4gICAgICAkZWwuaHRtbChwYXJhbXMucmVuZGVyQ3VzdG9tKHN3aXBlciwgY3VycmVudCArIDEsIHRvdGFsKSk7XG4gICAgICBzd2lwZXIuZW1pdCgncGFnaW5hdGlvblJlbmRlcicsIHN3aXBlciwgJGVsWzBdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3dpcGVyLmVtaXQoJ3BhZ2luYXRpb25VcGRhdGUnLCBzd2lwZXIsICRlbFswXSk7XG4gICAgfVxuICAgICRlbFtzd2lwZXIucGFyYW1zLndhdGNoT3ZlcmZsb3cgJiYgc3dpcGVyLmlzTG9ja2VkID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcyddKHBhcmFtcy5sb2NrQ2xhc3MpO1xuICB9LFxuICByZW5kZXIoKSB7XG4gICAgLy8gUmVuZGVyIENvbnRhaW5lclxuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgY29uc3QgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uO1xuICAgIGlmICghcGFyYW1zLmVsIHx8ICFzd2lwZXIucGFnaW5hdGlvbi5lbCB8fCAhc3dpcGVyLnBhZ2luYXRpb24uJGVsIHx8IHN3aXBlci5wYWdpbmF0aW9uLiRlbC5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICBjb25zdCBzbGlkZXNMZW5ndGggPSBzd2lwZXIudmlydHVhbCAmJiBzd2lwZXIucGFyYW1zLnZpcnR1YWwuZW5hYmxlZCA/IHN3aXBlci52aXJ0dWFsLnNsaWRlcy5sZW5ndGggOiBzd2lwZXIuc2xpZGVzLmxlbmd0aDtcblxuICAgIGNvbnN0ICRlbCA9IHN3aXBlci5wYWdpbmF0aW9uLiRlbDtcbiAgICBsZXQgcGFnaW5hdGlvbkhUTUwgPSAnJztcbiAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdidWxsZXRzJykge1xuICAgICAgY29uc3QgbnVtYmVyT2ZCdWxsZXRzID0gc3dpcGVyLnBhcmFtcy5sb29wID8gTWF0aC5jZWlsKChzbGlkZXNMZW5ndGggLSAoc3dpcGVyLmxvb3BlZFNsaWRlcyAqIDIpKSAvIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXApIDogc3dpcGVyLnNuYXBHcmlkLmxlbmd0aDtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZCdWxsZXRzOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKHBhcmFtcy5yZW5kZXJCdWxsZXQpIHtcbiAgICAgICAgICBwYWdpbmF0aW9uSFRNTCArPSBwYXJhbXMucmVuZGVyQnVsbGV0LmNhbGwoc3dpcGVyLCBpLCBwYXJhbXMuYnVsbGV0Q2xhc3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBhZ2luYXRpb25IVE1MICs9IGA8JHtwYXJhbXMuYnVsbGV0RWxlbWVudH0gY2xhc3M9XCIke3BhcmFtcy5idWxsZXRDbGFzc31cIj48LyR7cGFyYW1zLmJ1bGxldEVsZW1lbnR9PmA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgICRlbC5odG1sKHBhZ2luYXRpb25IVE1MKTtcbiAgICAgIHN3aXBlci5wYWdpbmF0aW9uLmJ1bGxldHMgPSAkZWwuZmluZChgLiR7cGFyYW1zLmJ1bGxldENsYXNzfWApO1xuICAgIH1cbiAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdmcmFjdGlvbicpIHtcbiAgICAgIGlmIChwYXJhbXMucmVuZGVyRnJhY3Rpb24pIHtcbiAgICAgICAgcGFnaW5hdGlvbkhUTUwgPSBwYXJhbXMucmVuZGVyRnJhY3Rpb24uY2FsbChzd2lwZXIsIHBhcmFtcy5jdXJyZW50Q2xhc3MsIHBhcmFtcy50b3RhbENsYXNzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhZ2luYXRpb25IVE1MID0gYDxzcGFuIGNsYXNzPVwiJHtwYXJhbXMuY3VycmVudENsYXNzfVwiPjwvc3Bhbj5gXG4gICAgICAgICsgJyAvICdcbiAgICAgICAgKyBgPHNwYW4gY2xhc3M9XCIke3BhcmFtcy50b3RhbENsYXNzfVwiPjwvc3Bhbj5gO1xuICAgICAgfVxuICAgICAgJGVsLmh0bWwocGFnaW5hdGlvbkhUTUwpO1xuICAgIH1cbiAgICBpZiAocGFyYW1zLnR5cGUgPT09ICdwcm9ncmVzc2JhcicpIHtcbiAgICAgIGlmIChwYXJhbXMucmVuZGVyUHJvZ3Jlc3NiYXIpIHtcbiAgICAgICAgcGFnaW5hdGlvbkhUTUwgPSBwYXJhbXMucmVuZGVyUHJvZ3Jlc3NiYXIuY2FsbChzd2lwZXIsIHBhcmFtcy5wcm9ncmVzc2JhckZpbGxDbGFzcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYWdpbmF0aW9uSFRNTCA9IGA8c3BhbiBjbGFzcz1cIiR7cGFyYW1zLnByb2dyZXNzYmFyRmlsbENsYXNzfVwiPjwvc3Bhbj5gO1xuICAgICAgfVxuICAgICAgJGVsLmh0bWwocGFnaW5hdGlvbkhUTUwpO1xuICAgIH1cbiAgICBpZiAocGFyYW1zLnR5cGUgIT09ICdjdXN0b20nKSB7XG4gICAgICBzd2lwZXIuZW1pdCgncGFnaW5hdGlvblJlbmRlcicsIHN3aXBlci5wYWdpbmF0aW9uLiRlbFswXSk7XG4gICAgfVxuICB9LFxuICBpbml0KCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgY29uc3QgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uO1xuICAgIGlmICghcGFyYW1zLmVsKSByZXR1cm47XG5cbiAgICBsZXQgJGVsID0gJChwYXJhbXMuZWwpO1xuICAgIGlmICgkZWwubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICBpZiAoXG4gICAgICBzd2lwZXIucGFyYW1zLnVuaXF1ZU5hdkVsZW1lbnRzXG4gICAgICAmJiB0eXBlb2YgcGFyYW1zLmVsID09PSAnc3RyaW5nJ1xuICAgICAgJiYgJGVsLmxlbmd0aCA+IDFcbiAgICAgICYmIHN3aXBlci4kZWwuZmluZChwYXJhbXMuZWwpLmxlbmd0aCA9PT0gMVxuICAgICkge1xuICAgICAgJGVsID0gc3dpcGVyLiRlbC5maW5kKHBhcmFtcy5lbCk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy50eXBlID09PSAnYnVsbGV0cycgJiYgcGFyYW1zLmNsaWNrYWJsZSkge1xuICAgICAgJGVsLmFkZENsYXNzKHBhcmFtcy5jbGlja2FibGVDbGFzcyk7XG4gICAgfVxuXG4gICAgJGVsLmFkZENsYXNzKHBhcmFtcy5tb2RpZmllckNsYXNzICsgcGFyYW1zLnR5cGUpO1xuXG4gICAgaWYgKHBhcmFtcy50eXBlID09PSAnYnVsbGV0cycgJiYgcGFyYW1zLmR5bmFtaWNCdWxsZXRzKSB7XG4gICAgICAkZWwuYWRkQ2xhc3MoYCR7cGFyYW1zLm1vZGlmaWVyQ2xhc3N9JHtwYXJhbXMudHlwZX0tZHluYW1pY2ApO1xuICAgICAgc3dpcGVyLnBhZ2luYXRpb24uZHluYW1pY0J1bGxldEluZGV4ID0gMDtcbiAgICAgIGlmIChwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzIDwgMSkge1xuICAgICAgICBwYXJhbXMuZHluYW1pY01haW5CdWxsZXRzID0gMTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHBhcmFtcy50eXBlID09PSAncHJvZ3Jlc3NiYXInICYmIHBhcmFtcy5wcm9ncmVzc2Jhck9wcG9zaXRlKSB7XG4gICAgICAkZWwuYWRkQ2xhc3MocGFyYW1zLnByb2dyZXNzYmFyT3Bwb3NpdGVDbGFzcyk7XG4gICAgfVxuXG4gICAgaWYgKHBhcmFtcy5jbGlja2FibGUpIHtcbiAgICAgICRlbC5vbignY2xpY2snLCBgLiR7cGFyYW1zLmJ1bGxldENsYXNzfWAsIGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGxldCBpbmRleCA9ICQodGhpcykuaW5kZXgoKSAqIHN3aXBlci5wYXJhbXMuc2xpZGVzUGVyR3JvdXA7XG4gICAgICAgIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIGluZGV4ICs9IHN3aXBlci5sb29wZWRTbGlkZXM7XG4gICAgICAgIHN3aXBlci5zbGlkZVRvKGluZGV4KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIFV0aWxzLmV4dGVuZChzd2lwZXIucGFnaW5hdGlvbiwge1xuICAgICAgJGVsLFxuICAgICAgZWw6ICRlbFswXSxcbiAgICB9KTtcbiAgfSxcbiAgZGVzdHJveSgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IHBhcmFtcyA9IHN3aXBlci5wYXJhbXMucGFnaW5hdGlvbjtcbiAgICBpZiAoIXBhcmFtcy5lbCB8fCAhc3dpcGVyLnBhZ2luYXRpb24uZWwgfHwgIXN3aXBlci5wYWdpbmF0aW9uLiRlbCB8fCBzd2lwZXIucGFnaW5hdGlvbi4kZWwubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgY29uc3QgJGVsID0gc3dpcGVyLnBhZ2luYXRpb24uJGVsO1xuXG4gICAgJGVsLnJlbW92ZUNsYXNzKHBhcmFtcy5oaWRkZW5DbGFzcyk7XG4gICAgJGVsLnJlbW92ZUNsYXNzKHBhcmFtcy5tb2RpZmllckNsYXNzICsgcGFyYW1zLnR5cGUpO1xuICAgIGlmIChzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzKSBzd2lwZXIucGFnaW5hdGlvbi5idWxsZXRzLnJlbW92ZUNsYXNzKHBhcmFtcy5idWxsZXRBY3RpdmVDbGFzcyk7XG4gICAgaWYgKHBhcmFtcy5jbGlja2FibGUpIHtcbiAgICAgICRlbC5vZmYoJ2NsaWNrJywgYC4ke3BhcmFtcy5idWxsZXRDbGFzc31gKTtcbiAgICB9XG4gIH0sXG59O1xuXG52YXIgcGFnaW5hdGlvbiA9IHtcbiAgbmFtZTogJ3BhZ2luYXRpb24nLFxuICBwYXJhbXM6IHtcbiAgICBwYWdpbmF0aW9uOiB7XG4gICAgICBlbDogbnVsbCxcbiAgICAgIGJ1bGxldEVsZW1lbnQ6ICdzcGFuJyxcbiAgICAgIGNsaWNrYWJsZTogZmFsc2UsXG4gICAgICBoaWRlT25DbGljazogZmFsc2UsXG4gICAgICByZW5kZXJCdWxsZXQ6IG51bGwsXG4gICAgICByZW5kZXJQcm9ncmVzc2JhcjogbnVsbCxcbiAgICAgIHJlbmRlckZyYWN0aW9uOiBudWxsLFxuICAgICAgcmVuZGVyQ3VzdG9tOiBudWxsLFxuICAgICAgcHJvZ3Jlc3NiYXJPcHBvc2l0ZTogZmFsc2UsXG4gICAgICB0eXBlOiAnYnVsbGV0cycsIC8vICdidWxsZXRzJyBvciAncHJvZ3Jlc3NiYXInIG9yICdmcmFjdGlvbicgb3IgJ2N1c3RvbSdcbiAgICAgIGR5bmFtaWNCdWxsZXRzOiBmYWxzZSxcbiAgICAgIGR5bmFtaWNNYWluQnVsbGV0czogMSxcbiAgICAgIGZvcm1hdEZyYWN0aW9uQ3VycmVudDogKG51bWJlcikgPT4gbnVtYmVyLFxuICAgICAgZm9ybWF0RnJhY3Rpb25Ub3RhbDogKG51bWJlcikgPT4gbnVtYmVyLFxuICAgICAgYnVsbGV0Q2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1idWxsZXQnLFxuICAgICAgYnVsbGV0QWN0aXZlQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlJyxcbiAgICAgIG1vZGlmaWVyQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi0nLCAvLyBORVdcbiAgICAgIGN1cnJlbnRDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLWN1cnJlbnQnLFxuICAgICAgdG90YWxDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLXRvdGFsJyxcbiAgICAgIGhpZGRlbkNsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24taGlkZGVuJyxcbiAgICAgIHByb2dyZXNzYmFyRmlsbENsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItZmlsbCcsXG4gICAgICBwcm9ncmVzc2Jhck9wcG9zaXRlQ2xhc3M6ICdzd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1vcHBvc2l0ZScsXG4gICAgICBjbGlja2FibGVDbGFzczogJ3N3aXBlci1wYWdpbmF0aW9uLWNsaWNrYWJsZScsIC8vIE5FV1xuICAgICAgbG9ja0NsYXNzOiAnc3dpcGVyLXBhZ2luYXRpb24tbG9jaycsXG4gICAgfSxcbiAgfSxcbiAgY3JlYXRlKCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgVXRpbHMuZXh0ZW5kKHN3aXBlciwge1xuICAgICAgcGFnaW5hdGlvbjoge1xuICAgICAgICBpbml0OiBQYWdpbmF0aW9uLmluaXQuYmluZChzd2lwZXIpLFxuICAgICAgICByZW5kZXI6IFBhZ2luYXRpb24ucmVuZGVyLmJpbmQoc3dpcGVyKSxcbiAgICAgICAgdXBkYXRlOiBQYWdpbmF0aW9uLnVwZGF0ZS5iaW5kKHN3aXBlciksXG4gICAgICAgIGRlc3Ryb3k6IFBhZ2luYXRpb24uZGVzdHJveS5iaW5kKHN3aXBlciksXG4gICAgICAgIGR5bmFtaWNCdWxsZXRJbmRleDogMCxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0sXG4gIG9uOiB7XG4gICAgaW5pdCgpIHtcbiAgICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgICBzd2lwZXIucGFnaW5hdGlvbi5pbml0KCk7XG4gICAgICBzd2lwZXIucGFnaW5hdGlvbi5yZW5kZXIoKTtcbiAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgIH0sXG4gICAgYWN0aXZlSW5kZXhDaGFuZ2UoKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKHN3aXBlci5wYXJhbXMubG9vcCkge1xuICAgICAgICBzd2lwZXIucGFnaW5hdGlvbi51cGRhdGUoKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHN3aXBlci5zbmFwSW5kZXggPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc25hcEluZGV4Q2hhbmdlKCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmICghc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2xpZGVzTGVuZ3RoQ2hhbmdlKCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIHtcbiAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24ucmVuZGVyKCk7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc25hcEdyaWRMZW5ndGhDaGFuZ2UoKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKCFzd2lwZXIucGFyYW1zLmxvb3ApIHtcbiAgICAgICAgc3dpcGVyLnBhZ2luYXRpb24ucmVuZGVyKCk7XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLnVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZGVzdHJveSgpIHtcbiAgICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgICBzd2lwZXIucGFnaW5hdGlvbi5kZXN0cm95KCk7XG4gICAgfSxcbiAgICBjbGljayhlKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKFxuICAgICAgICBzd2lwZXIucGFyYW1zLnBhZ2luYXRpb24uZWxcbiAgICAgICAgJiYgc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uLmhpZGVPbkNsaWNrXG4gICAgICAgICYmIHN3aXBlci5wYWdpbmF0aW9uLiRlbC5sZW5ndGggPiAwXG4gICAgICAgICYmICEkKGUudGFyZ2V0KS5oYXNDbGFzcyhzd2lwZXIucGFyYW1zLnBhZ2luYXRpb24uYnVsbGV0Q2xhc3MpXG4gICAgICApIHtcbiAgICAgICAgY29uc3QgaXNIaWRkZW4gPSBzd2lwZXIucGFnaW5hdGlvbi4kZWwuaGFzQ2xhc3Moc3dpcGVyLnBhcmFtcy5wYWdpbmF0aW9uLmhpZGRlbkNsYXNzKTtcbiAgICAgICAgaWYgKGlzSGlkZGVuID09PSB0cnVlKSB7XG4gICAgICAgICAgc3dpcGVyLmVtaXQoJ3BhZ2luYXRpb25TaG93Jywgc3dpcGVyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzd2lwZXIuZW1pdCgncGFnaW5hdGlvbkhpZGUnLCBzd2lwZXIpO1xuICAgICAgICB9XG4gICAgICAgIHN3aXBlci5wYWdpbmF0aW9uLiRlbC50b2dnbGVDbGFzcyhzd2lwZXIucGFyYW1zLnBhZ2luYXRpb24uaGlkZGVuQ2xhc3MpO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59O1xuXG5jb25zdCBTY3JvbGxiYXIgPSB7XG4gIHNldFRyYW5zbGF0ZSgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGlmICghc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXIuZWwgfHwgIXN3aXBlci5zY3JvbGxiYXIuZWwpIHJldHVybjtcbiAgICBjb25zdCB7IHNjcm9sbGJhciwgcnRsVHJhbnNsYXRlOiBydGwsIHByb2dyZXNzIH0gPSBzd2lwZXI7XG4gICAgY29uc3Qge1xuICAgICAgZHJhZ1NpemUsIHRyYWNrU2l6ZSwgJGRyYWdFbCwgJGVsLFxuICAgIH0gPSBzY3JvbGxiYXI7XG4gICAgY29uc3QgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXI7XG5cbiAgICBsZXQgbmV3U2l6ZSA9IGRyYWdTaXplO1xuICAgIGxldCBuZXdQb3MgPSAodHJhY2tTaXplIC0gZHJhZ1NpemUpICogcHJvZ3Jlc3M7XG4gICAgaWYgKHJ0bCkge1xuICAgICAgbmV3UG9zID0gLW5ld1BvcztcbiAgICAgIGlmIChuZXdQb3MgPiAwKSB7XG4gICAgICAgIG5ld1NpemUgPSBkcmFnU2l6ZSAtIG5ld1BvcztcbiAgICAgICAgbmV3UG9zID0gMDtcbiAgICAgIH0gZWxzZSBpZiAoLW5ld1BvcyArIGRyYWdTaXplID4gdHJhY2tTaXplKSB7XG4gICAgICAgIG5ld1NpemUgPSB0cmFja1NpemUgKyBuZXdQb3M7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChuZXdQb3MgPCAwKSB7XG4gICAgICBuZXdTaXplID0gZHJhZ1NpemUgKyBuZXdQb3M7XG4gICAgICBuZXdQb3MgPSAwO1xuICAgIH0gZWxzZSBpZiAobmV3UG9zICsgZHJhZ1NpemUgPiB0cmFja1NpemUpIHtcbiAgICAgIG5ld1NpemUgPSB0cmFja1NpemUgLSBuZXdQb3M7XG4gICAgfVxuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICRkcmFnRWwudHJhbnNmb3JtKGB0cmFuc2xhdGUzZCgke25ld1Bvc31weCwgMCwgMClgKTtcbiAgICAgICRkcmFnRWxbMF0uc3R5bGUud2lkdGggPSBgJHtuZXdTaXplfXB4YDtcbiAgICB9IGVsc2Uge1xuICAgICAgJGRyYWdFbC50cmFuc2Zvcm0oYHRyYW5zbGF0ZTNkKDBweCwgJHtuZXdQb3N9cHgsIDApYCk7XG4gICAgICAkZHJhZ0VsWzBdLnN0eWxlLmhlaWdodCA9IGAke25ld1NpemV9cHhgO1xuICAgIH1cbiAgICBpZiAocGFyYW1zLmhpZGUpIHtcbiAgICAgIGNsZWFyVGltZW91dChzd2lwZXIuc2Nyb2xsYmFyLnRpbWVvdXQpO1xuICAgICAgJGVsWzBdLnN0eWxlLm9wYWNpdHkgPSAxO1xuICAgICAgc3dpcGVyLnNjcm9sbGJhci50aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICRlbFswXS5zdHlsZS5vcGFjaXR5ID0gMDtcbiAgICAgICAgJGVsLnRyYW5zaXRpb24oNDAwKTtcbiAgICAgIH0sIDEwMDApO1xuICAgIH1cbiAgfSxcbiAgc2V0VHJhbnNpdGlvbihkdXJhdGlvbikge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgaWYgKCFzd2lwZXIucGFyYW1zLnNjcm9sbGJhci5lbCB8fCAhc3dpcGVyLnNjcm9sbGJhci5lbCkgcmV0dXJuO1xuICAgIHN3aXBlci5zY3JvbGxiYXIuJGRyYWdFbC50cmFuc2l0aW9uKGR1cmF0aW9uKTtcbiAgfSxcbiAgdXBkYXRlU2l6ZSgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGlmICghc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXIuZWwgfHwgIXN3aXBlci5zY3JvbGxiYXIuZWwpIHJldHVybjtcblxuICAgIGNvbnN0IHsgc2Nyb2xsYmFyIH0gPSBzd2lwZXI7XG4gICAgY29uc3QgeyAkZHJhZ0VsLCAkZWwgfSA9IHNjcm9sbGJhcjtcblxuICAgICRkcmFnRWxbMF0uc3R5bGUud2lkdGggPSAnJztcbiAgICAkZHJhZ0VsWzBdLnN0eWxlLmhlaWdodCA9ICcnO1xuICAgIGNvbnN0IHRyYWNrU2l6ZSA9IHN3aXBlci5pc0hvcml6b250YWwoKSA/ICRlbFswXS5vZmZzZXRXaWR0aCA6ICRlbFswXS5vZmZzZXRIZWlnaHQ7XG5cbiAgICBjb25zdCBkaXZpZGVyID0gc3dpcGVyLnNpemUgLyBzd2lwZXIudmlydHVhbFNpemU7XG4gICAgY29uc3QgbW92ZURpdmlkZXIgPSBkaXZpZGVyICogKHRyYWNrU2l6ZSAvIHN3aXBlci5zaXplKTtcbiAgICBsZXQgZHJhZ1NpemU7XG4gICAgaWYgKHN3aXBlci5wYXJhbXMuc2Nyb2xsYmFyLmRyYWdTaXplID09PSAnYXV0bycpIHtcbiAgICAgIGRyYWdTaXplID0gdHJhY2tTaXplICogZGl2aWRlcjtcbiAgICB9IGVsc2Uge1xuICAgICAgZHJhZ1NpemUgPSBwYXJzZUludChzd2lwZXIucGFyYW1zLnNjcm9sbGJhci5kcmFnU2l6ZSwgMTApO1xuICAgIH1cblxuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgICRkcmFnRWxbMF0uc3R5bGUud2lkdGggPSBgJHtkcmFnU2l6ZX1weGA7XG4gICAgfSBlbHNlIHtcbiAgICAgICRkcmFnRWxbMF0uc3R5bGUuaGVpZ2h0ID0gYCR7ZHJhZ1NpemV9cHhgO1xuICAgIH1cblxuICAgIGlmIChkaXZpZGVyID49IDEpIHtcbiAgICAgICRlbFswXS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIH0gZWxzZSB7XG4gICAgICAkZWxbMF0uc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgIH1cbiAgICBpZiAoc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXIuaGlkZSkge1xuICAgICAgJGVsWzBdLnN0eWxlLm9wYWNpdHkgPSAwO1xuICAgIH1cbiAgICBVdGlscy5leHRlbmQoc2Nyb2xsYmFyLCB7XG4gICAgICB0cmFja1NpemUsXG4gICAgICBkaXZpZGVyLFxuICAgICAgbW92ZURpdmlkZXIsXG4gICAgICBkcmFnU2l6ZSxcbiAgICB9KTtcbiAgICBzY3JvbGxiYXIuJGVsW3N3aXBlci5wYXJhbXMud2F0Y2hPdmVyZmxvdyAmJiBzd2lwZXIuaXNMb2NrZWQgPyAnYWRkQ2xhc3MnIDogJ3JlbW92ZUNsYXNzJ10oc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXIubG9ja0NsYXNzKTtcbiAgfSxcbiAgZ2V0UG9pbnRlclBvc2l0aW9uKGUpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGlmIChzd2lwZXIuaXNIb3Jpem9udGFsKCkpIHtcbiAgICAgIHJldHVybiAoKGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnIHx8IGUudHlwZSA9PT0gJ3RvdWNobW92ZScpID8gZS50YXJnZXRUb3VjaGVzWzBdLmNsaWVudFggOiBlLmNsaWVudFgpO1xuICAgIH1cbiAgICByZXR1cm4gKChlLnR5cGUgPT09ICd0b3VjaHN0YXJ0JyB8fCBlLnR5cGUgPT09ICd0b3VjaG1vdmUnKSA/IGUudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRZIDogZS5jbGllbnRZKTtcbiAgfSxcbiAgc2V0RHJhZ1Bvc2l0aW9uKGUpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IHsgc2Nyb2xsYmFyLCBydGxUcmFuc2xhdGU6IHJ0bCB9ID0gc3dpcGVyO1xuICAgIGNvbnN0IHtcbiAgICAgICRlbCxcbiAgICAgIGRyYWdTaXplLFxuICAgICAgdHJhY2tTaXplLFxuICAgICAgZHJhZ1N0YXJ0UG9zLFxuICAgIH0gPSBzY3JvbGxiYXI7XG5cbiAgICBsZXQgcG9zaXRpb25SYXRpbztcbiAgICBwb3NpdGlvblJhdGlvID0gKChzY3JvbGxiYXIuZ2V0UG9pbnRlclBvc2l0aW9uKGUpKSAtICRlbC5vZmZzZXQoKVtzd2lwZXIuaXNIb3Jpem9udGFsKCkgPyAnbGVmdCcgOiAndG9wJ11cbiAgICAgIC0gKGRyYWdTdGFydFBvcyAhPT0gbnVsbCA/IGRyYWdTdGFydFBvcyA6IGRyYWdTaXplIC8gMikpIC8gKHRyYWNrU2l6ZSAtIGRyYWdTaXplKTtcbiAgICBwb3NpdGlvblJhdGlvID0gTWF0aC5tYXgoTWF0aC5taW4ocG9zaXRpb25SYXRpbywgMSksIDApO1xuICAgIGlmIChydGwpIHtcbiAgICAgIHBvc2l0aW9uUmF0aW8gPSAxIC0gcG9zaXRpb25SYXRpbztcbiAgICB9XG5cbiAgICBjb25zdCBwb3NpdGlvbiA9IHN3aXBlci5taW5UcmFuc2xhdGUoKSArICgoc3dpcGVyLm1heFRyYW5zbGF0ZSgpIC0gc3dpcGVyLm1pblRyYW5zbGF0ZSgpKSAqIHBvc2l0aW9uUmF0aW8pO1xuXG4gICAgc3dpcGVyLnVwZGF0ZVByb2dyZXNzKHBvc2l0aW9uKTtcbiAgICBzd2lwZXIuc2V0VHJhbnNsYXRlKHBvc2l0aW9uKTtcbiAgICBzd2lwZXIudXBkYXRlQWN0aXZlSW5kZXgoKTtcbiAgICBzd2lwZXIudXBkYXRlU2xpZGVzQ2xhc3NlcygpO1xuICB9LFxuICBvbkRyYWdTdGFydChlKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBjb25zdCBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnNjcm9sbGJhcjtcbiAgICBjb25zdCB7IHNjcm9sbGJhciwgJHdyYXBwZXJFbCB9ID0gc3dpcGVyO1xuICAgIGNvbnN0IHsgJGVsLCAkZHJhZ0VsIH0gPSBzY3JvbGxiYXI7XG4gICAgc3dpcGVyLnNjcm9sbGJhci5pc1RvdWNoZWQgPSB0cnVlO1xuICAgIHN3aXBlci5zY3JvbGxiYXIuZHJhZ1N0YXJ0UG9zID0gKGUudGFyZ2V0ID09PSAkZHJhZ0VsWzBdIHx8IGUudGFyZ2V0ID09PSAkZHJhZ0VsKVxuICAgICAgPyBzY3JvbGxiYXIuZ2V0UG9pbnRlclBvc2l0aW9uKGUpIC0gZS50YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClbc3dpcGVyLmlzSG9yaXpvbnRhbCgpID8gJ2xlZnQnIDogJ3RvcCddIDogbnVsbDtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICR3cmFwcGVyRWwudHJhbnNpdGlvbigxMDApO1xuICAgICRkcmFnRWwudHJhbnNpdGlvbigxMDApO1xuICAgIHNjcm9sbGJhci5zZXREcmFnUG9zaXRpb24oZSk7XG5cbiAgICBjbGVhclRpbWVvdXQoc3dpcGVyLnNjcm9sbGJhci5kcmFnVGltZW91dCk7XG5cbiAgICAkZWwudHJhbnNpdGlvbigwKTtcbiAgICBpZiAocGFyYW1zLmhpZGUpIHtcbiAgICAgICRlbC5jc3MoJ29wYWNpdHknLCAxKTtcbiAgICB9XG4gICAgaWYgKHN3aXBlci5wYXJhbXMuY3NzTW9kZSkge1xuICAgICAgc3dpcGVyLiR3cmFwcGVyRWwuY3NzKCdzY3JvbGwtc25hcC10eXBlJywgJ25vbmUnKTtcbiAgICB9XG4gICAgc3dpcGVyLmVtaXQoJ3Njcm9sbGJhckRyYWdTdGFydCcsIGUpO1xuICB9LFxuICBvbkRyYWdNb3ZlKGUpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IHsgc2Nyb2xsYmFyLCAkd3JhcHBlckVsIH0gPSBzd2lwZXI7XG4gICAgY29uc3QgeyAkZWwsICRkcmFnRWwgfSA9IHNjcm9sbGJhcjtcblxuICAgIGlmICghc3dpcGVyLnNjcm9sbGJhci5pc1RvdWNoZWQpIHJldHVybjtcbiAgICBpZiAoZS5wcmV2ZW50RGVmYXVsdCkgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGVsc2UgZS5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuICAgIHNjcm9sbGJhci5zZXREcmFnUG9zaXRpb24oZSk7XG4gICAgJHdyYXBwZXJFbC50cmFuc2l0aW9uKDApO1xuICAgICRlbC50cmFuc2l0aW9uKDApO1xuICAgICRkcmFnRWwudHJhbnNpdGlvbigwKTtcbiAgICBzd2lwZXIuZW1pdCgnc2Nyb2xsYmFyRHJhZ01vdmUnLCBlKTtcbiAgfSxcbiAgb25EcmFnRW5kKGUpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuXG4gICAgY29uc3QgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXI7XG4gICAgY29uc3QgeyBzY3JvbGxiYXIsICR3cmFwcGVyRWwgfSA9IHN3aXBlcjtcbiAgICBjb25zdCB7ICRlbCB9ID0gc2Nyb2xsYmFyO1xuXG4gICAgaWYgKCFzd2lwZXIuc2Nyb2xsYmFyLmlzVG91Y2hlZCkgcmV0dXJuO1xuICAgIHN3aXBlci5zY3JvbGxiYXIuaXNUb3VjaGVkID0gZmFsc2U7XG4gICAgaWYgKHN3aXBlci5wYXJhbXMuY3NzTW9kZSkge1xuICAgICAgc3dpcGVyLiR3cmFwcGVyRWwuY3NzKCdzY3JvbGwtc25hcC10eXBlJywgJycpO1xuICAgICAgJHdyYXBwZXJFbC50cmFuc2l0aW9uKCcnKTtcbiAgICB9XG4gICAgaWYgKHBhcmFtcy5oaWRlKSB7XG4gICAgICBjbGVhclRpbWVvdXQoc3dpcGVyLnNjcm9sbGJhci5kcmFnVGltZW91dCk7XG4gICAgICBzd2lwZXIuc2Nyb2xsYmFyLmRyYWdUaW1lb3V0ID0gVXRpbHMubmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAkZWwuY3NzKCdvcGFjaXR5JywgMCk7XG4gICAgICAgICRlbC50cmFuc2l0aW9uKDQwMCk7XG4gICAgICB9LCAxMDAwKTtcbiAgICB9XG4gICAgc3dpcGVyLmVtaXQoJ3Njcm9sbGJhckRyYWdFbmQnLCBlKTtcbiAgICBpZiAocGFyYW1zLnNuYXBPblJlbGVhc2UpIHtcbiAgICAgIHN3aXBlci5zbGlkZVRvQ2xvc2VzdCgpO1xuICAgIH1cbiAgfSxcbiAgZW5hYmxlRHJhZ2dhYmxlKCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgaWYgKCFzd2lwZXIucGFyYW1zLnNjcm9sbGJhci5lbCkgcmV0dXJuO1xuICAgIGNvbnN0IHtcbiAgICAgIHNjcm9sbGJhciwgdG91Y2hFdmVudHNUb3VjaCwgdG91Y2hFdmVudHNEZXNrdG9wLCBwYXJhbXMsXG4gICAgfSA9IHN3aXBlcjtcbiAgICBjb25zdCAkZWwgPSBzY3JvbGxiYXIuJGVsO1xuICAgIGNvbnN0IHRhcmdldCA9ICRlbFswXTtcbiAgICBjb25zdCBhY3RpdmVMaXN0ZW5lciA9IFN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHBhcmFtcy5wYXNzaXZlTGlzdGVuZXJzID8geyBwYXNzaXZlOiBmYWxzZSwgY2FwdHVyZTogZmFsc2UgfSA6IGZhbHNlO1xuICAgIGNvbnN0IHBhc3NpdmVMaXN0ZW5lciA9IFN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyICYmIHBhcmFtcy5wYXNzaXZlTGlzdGVuZXJzID8geyBwYXNzaXZlOiB0cnVlLCBjYXB0dXJlOiBmYWxzZSB9IDogZmFsc2U7XG4gICAgaWYgKCFTdXBwb3J0LnRvdWNoKSB7XG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50c0Rlc2t0b3Auc3RhcnQsIHN3aXBlci5zY3JvbGxiYXIub25EcmFnU3RhcnQsIGFjdGl2ZUxpc3RlbmVyKTtcbiAgICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzRGVza3RvcC5tb3ZlLCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ01vdmUsIGFjdGl2ZUxpc3RlbmVyKTtcbiAgICAgIGRvYy5hZGRFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzRGVza3RvcC5lbmQsIHN3aXBlci5zY3JvbGxiYXIub25EcmFnRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50c1RvdWNoLnN0YXJ0LCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ1N0YXJ0LCBhY3RpdmVMaXN0ZW5lcik7XG4gICAgICB0YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50c1RvdWNoLm1vdmUsIHN3aXBlci5zY3JvbGxiYXIub25EcmFnTW92ZSwgYWN0aXZlTGlzdGVuZXIpO1xuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHNUb3VjaC5lbmQsIHN3aXBlci5zY3JvbGxiYXIub25EcmFnRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgIH1cbiAgfSxcbiAgZGlzYWJsZURyYWdnYWJsZSgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGlmICghc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXIuZWwpIHJldHVybjtcbiAgICBjb25zdCB7XG4gICAgICBzY3JvbGxiYXIsIHRvdWNoRXZlbnRzVG91Y2gsIHRvdWNoRXZlbnRzRGVza3RvcCwgcGFyYW1zLFxuICAgIH0gPSBzd2lwZXI7XG4gICAgY29uc3QgJGVsID0gc2Nyb2xsYmFyLiRlbDtcbiAgICBjb25zdCB0YXJnZXQgPSAkZWxbMF07XG4gICAgY29uc3QgYWN0aXZlTGlzdGVuZXIgPSBTdXBwb3J0LnBhc3NpdmVMaXN0ZW5lciAmJiBwYXJhbXMucGFzc2l2ZUxpc3RlbmVycyA/IHsgcGFzc2l2ZTogZmFsc2UsIGNhcHR1cmU6IGZhbHNlIH0gOiBmYWxzZTtcbiAgICBjb25zdCBwYXNzaXZlTGlzdGVuZXIgPSBTdXBwb3J0LnBhc3NpdmVMaXN0ZW5lciAmJiBwYXJhbXMucGFzc2l2ZUxpc3RlbmVycyA/IHsgcGFzc2l2ZTogdHJ1ZSwgY2FwdHVyZTogZmFsc2UgfSA6IGZhbHNlO1xuICAgIGlmICghU3VwcG9ydC50b3VjaCkge1xuICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHNEZXNrdG9wLnN0YXJ0LCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ1N0YXJ0LCBhY3RpdmVMaXN0ZW5lcik7XG4gICAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50c0Rlc2t0b3AubW92ZSwgc3dpcGVyLnNjcm9sbGJhci5vbkRyYWdNb3ZlLCBhY3RpdmVMaXN0ZW5lcik7XG4gICAgICBkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lcih0b3VjaEV2ZW50c0Rlc2t0b3AuZW5kLCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ0VuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHNUb3VjaC5zdGFydCwgc3dpcGVyLnNjcm9sbGJhci5vbkRyYWdTdGFydCwgYWN0aXZlTGlzdGVuZXIpO1xuICAgICAgdGFyZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIodG91Y2hFdmVudHNUb3VjaC5tb3ZlLCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ01vdmUsIGFjdGl2ZUxpc3RlbmVyKTtcbiAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKHRvdWNoRXZlbnRzVG91Y2guZW5kLCBzd2lwZXIuc2Nyb2xsYmFyLm9uRHJhZ0VuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICB9XG4gIH0sXG4gIGluaXQoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBpZiAoIXN3aXBlci5wYXJhbXMuc2Nyb2xsYmFyLmVsKSByZXR1cm47XG4gICAgY29uc3QgeyBzY3JvbGxiYXIsICRlbDogJHN3aXBlckVsIH0gPSBzd2lwZXI7XG4gICAgY29uc3QgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy5zY3JvbGxiYXI7XG5cbiAgICBsZXQgJGVsID0gJChwYXJhbXMuZWwpO1xuICAgIGlmIChzd2lwZXIucGFyYW1zLnVuaXF1ZU5hdkVsZW1lbnRzICYmIHR5cGVvZiBwYXJhbXMuZWwgPT09ICdzdHJpbmcnICYmICRlbC5sZW5ndGggPiAxICYmICRzd2lwZXJFbC5maW5kKHBhcmFtcy5lbCkubGVuZ3RoID09PSAxKSB7XG4gICAgICAkZWwgPSAkc3dpcGVyRWwuZmluZChwYXJhbXMuZWwpO1xuICAgIH1cblxuICAgIGxldCAkZHJhZ0VsID0gJGVsLmZpbmQoYC4ke3N3aXBlci5wYXJhbXMuc2Nyb2xsYmFyLmRyYWdDbGFzc31gKTtcbiAgICBpZiAoJGRyYWdFbC5sZW5ndGggPT09IDApIHtcbiAgICAgICRkcmFnRWwgPSAkKGA8ZGl2IGNsYXNzPVwiJHtzd2lwZXIucGFyYW1zLnNjcm9sbGJhci5kcmFnQ2xhc3N9XCI+PC9kaXY+YCk7XG4gICAgICAkZWwuYXBwZW5kKCRkcmFnRWwpO1xuICAgIH1cblxuICAgIFV0aWxzLmV4dGVuZChzY3JvbGxiYXIsIHtcbiAgICAgICRlbCxcbiAgICAgIGVsOiAkZWxbMF0sXG4gICAgICAkZHJhZ0VsLFxuICAgICAgZHJhZ0VsOiAkZHJhZ0VsWzBdLFxuICAgIH0pO1xuXG4gICAgaWYgKHBhcmFtcy5kcmFnZ2FibGUpIHtcbiAgICAgIHNjcm9sbGJhci5lbmFibGVEcmFnZ2FibGUoKTtcbiAgICB9XG4gIH0sXG4gIGRlc3Ryb3koKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBzd2lwZXIuc2Nyb2xsYmFyLmRpc2FibGVEcmFnZ2FibGUoKTtcbiAgfSxcbn07XG5cbnZhciBzY3JvbGxiYXIgPSB7XG4gIG5hbWU6ICdzY3JvbGxiYXInLFxuICBwYXJhbXM6IHtcbiAgICBzY3JvbGxiYXI6IHtcbiAgICAgIGVsOiBudWxsLFxuICAgICAgZHJhZ1NpemU6ICdhdXRvJyxcbiAgICAgIGhpZGU6IGZhbHNlLFxuICAgICAgZHJhZ2dhYmxlOiBmYWxzZSxcbiAgICAgIHNuYXBPblJlbGVhc2U6IHRydWUsXG4gICAgICBsb2NrQ2xhc3M6ICdzd2lwZXItc2Nyb2xsYmFyLWxvY2snLFxuICAgICAgZHJhZ0NsYXNzOiAnc3dpcGVyLXNjcm9sbGJhci1kcmFnJyxcbiAgICB9LFxuICB9LFxuICBjcmVhdGUoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBVdGlscy5leHRlbmQoc3dpcGVyLCB7XG4gICAgICBzY3JvbGxiYXI6IHtcbiAgICAgICAgaW5pdDogU2Nyb2xsYmFyLmluaXQuYmluZChzd2lwZXIpLFxuICAgICAgICBkZXN0cm95OiBTY3JvbGxiYXIuZGVzdHJveS5iaW5kKHN3aXBlciksXG4gICAgICAgIHVwZGF0ZVNpemU6IFNjcm9sbGJhci51cGRhdGVTaXplLmJpbmQoc3dpcGVyKSxcbiAgICAgICAgc2V0VHJhbnNsYXRlOiBTY3JvbGxiYXIuc2V0VHJhbnNsYXRlLmJpbmQoc3dpcGVyKSxcbiAgICAgICAgc2V0VHJhbnNpdGlvbjogU2Nyb2xsYmFyLnNldFRyYW5zaXRpb24uYmluZChzd2lwZXIpLFxuICAgICAgICBlbmFibGVEcmFnZ2FibGU6IFNjcm9sbGJhci5lbmFibGVEcmFnZ2FibGUuYmluZChzd2lwZXIpLFxuICAgICAgICBkaXNhYmxlRHJhZ2dhYmxlOiBTY3JvbGxiYXIuZGlzYWJsZURyYWdnYWJsZS5iaW5kKHN3aXBlciksXG4gICAgICAgIHNldERyYWdQb3NpdGlvbjogU2Nyb2xsYmFyLnNldERyYWdQb3NpdGlvbi5iaW5kKHN3aXBlciksXG4gICAgICAgIGdldFBvaW50ZXJQb3NpdGlvbjogU2Nyb2xsYmFyLmdldFBvaW50ZXJQb3NpdGlvbi5iaW5kKHN3aXBlciksXG4gICAgICAgIG9uRHJhZ1N0YXJ0OiBTY3JvbGxiYXIub25EcmFnU3RhcnQuYmluZChzd2lwZXIpLFxuICAgICAgICBvbkRyYWdNb3ZlOiBTY3JvbGxiYXIub25EcmFnTW92ZS5iaW5kKHN3aXBlciksXG4gICAgICAgIG9uRHJhZ0VuZDogU2Nyb2xsYmFyLm9uRHJhZ0VuZC5iaW5kKHN3aXBlciksXG4gICAgICAgIGlzVG91Y2hlZDogZmFsc2UsXG4gICAgICAgIHRpbWVvdXQ6IG51bGwsXG4gICAgICAgIGRyYWdUaW1lb3V0OiBudWxsLFxuICAgICAgfSxcbiAgICB9KTtcbiAgfSxcbiAgb246IHtcbiAgICBpbml0KCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIHN3aXBlci5zY3JvbGxiYXIuaW5pdCgpO1xuICAgICAgc3dpcGVyLnNjcm9sbGJhci51cGRhdGVTaXplKCk7XG4gICAgICBzd2lwZXIuc2Nyb2xsYmFyLnNldFRyYW5zbGF0ZSgpO1xuICAgIH0sXG4gICAgdXBkYXRlKCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIHN3aXBlci5zY3JvbGxiYXIudXBkYXRlU2l6ZSgpO1xuICAgIH0sXG4gICAgcmVzaXplKCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIHN3aXBlci5zY3JvbGxiYXIudXBkYXRlU2l6ZSgpO1xuICAgIH0sXG4gICAgb2JzZXJ2ZXJVcGRhdGUoKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgc3dpcGVyLnNjcm9sbGJhci51cGRhdGVTaXplKCk7XG4gICAgfSxcbiAgICBzZXRUcmFuc2xhdGUoKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgc3dpcGVyLnNjcm9sbGJhci5zZXRUcmFuc2xhdGUoKTtcbiAgICB9LFxuICAgIHNldFRyYW5zaXRpb24oZHVyYXRpb24pIHtcbiAgICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgICBzd2lwZXIuc2Nyb2xsYmFyLnNldFRyYW5zaXRpb24oZHVyYXRpb24pO1xuICAgIH0sXG4gICAgZGVzdHJveSgpIHtcbiAgICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgICBzd2lwZXIuc2Nyb2xsYmFyLmRlc3Ryb3koKTtcbiAgICB9LFxuICB9LFxufTtcblxuY29uc3QgWm9vbSA9IHtcbiAgLy8gQ2FsYyBTY2FsZSBGcm9tIE11bHRpLXRvdWNoZXNcbiAgZ2V0RGlzdGFuY2VCZXR3ZWVuVG91Y2hlcyhlKSB7XG4gICAgaWYgKGUudGFyZ2V0VG91Y2hlcy5sZW5ndGggPCAyKSByZXR1cm4gMTtcbiAgICBjb25zdCB4MSA9IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWDtcbiAgICBjb25zdCB5MSA9IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWTtcbiAgICBjb25zdCB4MiA9IGUudGFyZ2V0VG91Y2hlc1sxXS5wYWdlWDtcbiAgICBjb25zdCB5MiA9IGUudGFyZ2V0VG91Y2hlc1sxXS5wYWdlWTtcbiAgICBjb25zdCBkaXN0YW5jZSA9IE1hdGguc3FydCgoKHgyIC0geDEpICoqIDIpICsgKCh5MiAtIHkxKSAqKiAyKSk7XG4gICAgcmV0dXJuIGRpc3RhbmNlO1xuICB9LFxuICAvLyBFdmVudHNcbiAgb25HZXN0dXJlU3RhcnQoZSkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgY29uc3QgcGFyYW1zID0gc3dpcGVyLnBhcmFtcy56b29tO1xuICAgIGNvbnN0IHpvb20gPSBzd2lwZXIuem9vbTtcbiAgICBjb25zdCB7IGdlc3R1cmUgfSA9IHpvb207XG4gICAgem9vbS5mYWtlR2VzdHVyZVRvdWNoZWQgPSBmYWxzZTtcbiAgICB6b29tLmZha2VHZXN0dXJlTW92ZWQgPSBmYWxzZTtcbiAgICBpZiAoIVN1cHBvcnQuZ2VzdHVyZXMpIHtcbiAgICAgIGlmIChlLnR5cGUgIT09ICd0b3VjaHN0YXJ0JyB8fCAoZS50eXBlID09PSAndG91Y2hzdGFydCcgJiYgZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA8IDIpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHpvb20uZmFrZUdlc3R1cmVUb3VjaGVkID0gdHJ1ZTtcbiAgICAgIGdlc3R1cmUuc2NhbGVTdGFydCA9IFpvb20uZ2V0RGlzdGFuY2VCZXR3ZWVuVG91Y2hlcyhlKTtcbiAgICB9XG4gICAgaWYgKCFnZXN0dXJlLiRzbGlkZUVsIHx8ICFnZXN0dXJlLiRzbGlkZUVsLmxlbmd0aCkge1xuICAgICAgZ2VzdHVyZS4kc2xpZGVFbCA9ICQoZS50YXJnZXQpLmNsb3Nlc3QoYC4ke3N3aXBlci5wYXJhbXMuc2xpZGVDbGFzc31gKTtcbiAgICAgIGlmIChnZXN0dXJlLiRzbGlkZUVsLmxlbmd0aCA9PT0gMCkgZ2VzdHVyZS4kc2xpZGVFbCA9IHN3aXBlci5zbGlkZXMuZXEoc3dpcGVyLmFjdGl2ZUluZGV4KTtcbiAgICAgIGdlc3R1cmUuJGltYWdlRWwgPSBnZXN0dXJlLiRzbGlkZUVsLmZpbmQoJ2ltZywgc3ZnLCBjYW52YXMsIHBpY3R1cmUsIC5zd2lwZXItem9vbS10YXJnZXQnKTtcbiAgICAgIGdlc3R1cmUuJGltYWdlV3JhcEVsID0gZ2VzdHVyZS4kaW1hZ2VFbC5wYXJlbnQoYC4ke3BhcmFtcy5jb250YWluZXJDbGFzc31gKTtcbiAgICAgIGdlc3R1cmUubWF4UmF0aW8gPSBnZXN0dXJlLiRpbWFnZVdyYXBFbC5hdHRyKCdkYXRhLXN3aXBlci16b29tJykgfHwgcGFyYW1zLm1heFJhdGlvO1xuICAgICAgaWYgKGdlc3R1cmUuJGltYWdlV3JhcEVsLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBnZXN0dXJlLiRpbWFnZUVsID0gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChnZXN0dXJlLiRpbWFnZUVsKSB7XG4gICAgICBnZXN0dXJlLiRpbWFnZUVsLnRyYW5zaXRpb24oMCk7XG4gICAgfVxuICAgIHN3aXBlci56b29tLmlzU2NhbGluZyA9IHRydWU7XG4gIH0sXG4gIG9uR2VzdHVyZUNoYW5nZShlKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBjb25zdCBwYXJhbXMgPSBzd2lwZXIucGFyYW1zLnpvb207XG4gICAgY29uc3Qgem9vbSA9IHN3aXBlci56b29tO1xuICAgIGNvbnN0IHsgZ2VzdHVyZSB9ID0gem9vbTtcbiAgICBpZiAoIVN1cHBvcnQuZ2VzdHVyZXMpIHtcbiAgICAgIGlmIChlLnR5cGUgIT09ICd0b3VjaG1vdmUnIHx8IChlLnR5cGUgPT09ICd0b3VjaG1vdmUnICYmIGUudGFyZ2V0VG91Y2hlcy5sZW5ndGggPCAyKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB6b29tLmZha2VHZXN0dXJlTW92ZWQgPSB0cnVlO1xuICAgICAgZ2VzdHVyZS5zY2FsZU1vdmUgPSBab29tLmdldERpc3RhbmNlQmV0d2VlblRvdWNoZXMoZSk7XG4gICAgfVxuICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIGlmIChTdXBwb3J0Lmdlc3R1cmVzKSB7XG4gICAgICB6b29tLnNjYWxlID0gZS5zY2FsZSAqIHpvb20uY3VycmVudFNjYWxlO1xuICAgIH0gZWxzZSB7XG4gICAgICB6b29tLnNjYWxlID0gKGdlc3R1cmUuc2NhbGVNb3ZlIC8gZ2VzdHVyZS5zY2FsZVN0YXJ0KSAqIHpvb20uY3VycmVudFNjYWxlO1xuICAgIH1cbiAgICBpZiAoem9vbS5zY2FsZSA+IGdlc3R1cmUubWF4UmF0aW8pIHtcbiAgICAgIHpvb20uc2NhbGUgPSAoZ2VzdHVyZS5tYXhSYXRpbyAtIDEpICsgKCgoem9vbS5zY2FsZSAtIGdlc3R1cmUubWF4UmF0aW8pICsgMSkgKiogMC41KTtcbiAgICB9XG4gICAgaWYgKHpvb20uc2NhbGUgPCBwYXJhbXMubWluUmF0aW8pIHtcbiAgICAgIHpvb20uc2NhbGUgPSAocGFyYW1zLm1pblJhdGlvICsgMSkgLSAoKChwYXJhbXMubWluUmF0aW8gLSB6b29tLnNjYWxlKSArIDEpICoqIDAuNSk7XG4gICAgfVxuICAgIGdlc3R1cmUuJGltYWdlRWwudHJhbnNmb3JtKGB0cmFuc2xhdGUzZCgwLDAsMCkgc2NhbGUoJHt6b29tLnNjYWxlfSlgKTtcbiAgfSxcbiAgb25HZXN0dXJlRW5kKGUpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IHBhcmFtcyA9IHN3aXBlci5wYXJhbXMuem9vbTtcbiAgICBjb25zdCB6b29tID0gc3dpcGVyLnpvb207XG4gICAgY29uc3QgeyBnZXN0dXJlIH0gPSB6b29tO1xuICAgIGlmICghU3VwcG9ydC5nZXN0dXJlcykge1xuICAgICAgaWYgKCF6b29tLmZha2VHZXN0dXJlVG91Y2hlZCB8fCAhem9vbS5mYWtlR2VzdHVyZU1vdmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChlLnR5cGUgIT09ICd0b3VjaGVuZCcgfHwgKGUudHlwZSA9PT0gJ3RvdWNoZW5kJyAmJiBlLmNoYW5nZWRUb3VjaGVzLmxlbmd0aCA8IDIgJiYgIURldmljZS5hbmRyb2lkKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB6b29tLmZha2VHZXN0dXJlVG91Y2hlZCA9IGZhbHNlO1xuICAgICAgem9vbS5mYWtlR2VzdHVyZU1vdmVkID0gZmFsc2U7XG4gICAgfVxuICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIHpvb20uc2NhbGUgPSBNYXRoLm1heChNYXRoLm1pbih6b29tLnNjYWxlLCBnZXN0dXJlLm1heFJhdGlvKSwgcGFyYW1zLm1pblJhdGlvKTtcbiAgICBnZXN0dXJlLiRpbWFnZUVsLnRyYW5zaXRpb24oc3dpcGVyLnBhcmFtcy5zcGVlZCkudHJhbnNmb3JtKGB0cmFuc2xhdGUzZCgwLDAsMCkgc2NhbGUoJHt6b29tLnNjYWxlfSlgKTtcbiAgICB6b29tLmN1cnJlbnRTY2FsZSA9IHpvb20uc2NhbGU7XG4gICAgem9vbS5pc1NjYWxpbmcgPSBmYWxzZTtcbiAgICBpZiAoem9vbS5zY2FsZSA9PT0gMSkgZ2VzdHVyZS4kc2xpZGVFbCA9IHVuZGVmaW5lZDtcbiAgfSxcbiAgb25Ub3VjaFN0YXJ0KGUpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IHpvb20gPSBzd2lwZXIuem9vbTtcbiAgICBjb25zdCB7IGdlc3R1cmUsIGltYWdlIH0gPSB6b29tO1xuICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIGlmIChpbWFnZS5pc1RvdWNoZWQpIHJldHVybjtcbiAgICBpZiAoRGV2aWNlLmFuZHJvaWQgJiYgZS5jYW5jZWxhYmxlKSBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgaW1hZ2UuaXNUb3VjaGVkID0gdHJ1ZTtcbiAgICBpbWFnZS50b3VjaGVzU3RhcnQueCA9IGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnID8gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYIDogZS5wYWdlWDtcbiAgICBpbWFnZS50b3VjaGVzU3RhcnQueSA9IGUudHlwZSA9PT0gJ3RvdWNoc3RhcnQnID8gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZIDogZS5wYWdlWTtcbiAgfSxcbiAgb25Ub3VjaE1vdmUoZSkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgY29uc3Qgem9vbSA9IHN3aXBlci56b29tO1xuICAgIGNvbnN0IHsgZ2VzdHVyZSwgaW1hZ2UsIHZlbG9jaXR5IH0gPSB6b29tO1xuICAgIGlmICghZ2VzdHVyZS4kaW1hZ2VFbCB8fCBnZXN0dXJlLiRpbWFnZUVsLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgIHN3aXBlci5hbGxvd0NsaWNrID0gZmFsc2U7XG4gICAgaWYgKCFpbWFnZS5pc1RvdWNoZWQgfHwgIWdlc3R1cmUuJHNsaWRlRWwpIHJldHVybjtcblxuICAgIGlmICghaW1hZ2UuaXNNb3ZlZCkge1xuICAgICAgaW1hZ2Uud2lkdGggPSBnZXN0dXJlLiRpbWFnZUVsWzBdLm9mZnNldFdpZHRoO1xuICAgICAgaW1hZ2UuaGVpZ2h0ID0gZ2VzdHVyZS4kaW1hZ2VFbFswXS5vZmZzZXRIZWlnaHQ7XG4gICAgICBpbWFnZS5zdGFydFggPSBVdGlscy5nZXRUcmFuc2xhdGUoZ2VzdHVyZS4kaW1hZ2VXcmFwRWxbMF0sICd4JykgfHwgMDtcbiAgICAgIGltYWdlLnN0YXJ0WSA9IFV0aWxzLmdldFRyYW5zbGF0ZShnZXN0dXJlLiRpbWFnZVdyYXBFbFswXSwgJ3knKSB8fCAwO1xuICAgICAgZ2VzdHVyZS5zbGlkZVdpZHRoID0gZ2VzdHVyZS4kc2xpZGVFbFswXS5vZmZzZXRXaWR0aDtcbiAgICAgIGdlc3R1cmUuc2xpZGVIZWlnaHQgPSBnZXN0dXJlLiRzbGlkZUVsWzBdLm9mZnNldEhlaWdodDtcbiAgICAgIGdlc3R1cmUuJGltYWdlV3JhcEVsLnRyYW5zaXRpb24oMCk7XG4gICAgICBpZiAoc3dpcGVyLnJ0bCkge1xuICAgICAgICBpbWFnZS5zdGFydFggPSAtaW1hZ2Uuc3RhcnRYO1xuICAgICAgICBpbWFnZS5zdGFydFkgPSAtaW1hZ2Uuc3RhcnRZO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBEZWZpbmUgaWYgd2UgbmVlZCBpbWFnZSBkcmFnXG4gICAgY29uc3Qgc2NhbGVkV2lkdGggPSBpbWFnZS53aWR0aCAqIHpvb20uc2NhbGU7XG4gICAgY29uc3Qgc2NhbGVkSGVpZ2h0ID0gaW1hZ2UuaGVpZ2h0ICogem9vbS5zY2FsZTtcblxuICAgIGlmIChzY2FsZWRXaWR0aCA8IGdlc3R1cmUuc2xpZGVXaWR0aCAmJiBzY2FsZWRIZWlnaHQgPCBnZXN0dXJlLnNsaWRlSGVpZ2h0KSByZXR1cm47XG5cbiAgICBpbWFnZS5taW5YID0gTWF0aC5taW4oKChnZXN0dXJlLnNsaWRlV2lkdGggLyAyKSAtIChzY2FsZWRXaWR0aCAvIDIpKSwgMCk7XG4gICAgaW1hZ2UubWF4WCA9IC1pbWFnZS5taW5YO1xuICAgIGltYWdlLm1pblkgPSBNYXRoLm1pbigoKGdlc3R1cmUuc2xpZGVIZWlnaHQgLyAyKSAtIChzY2FsZWRIZWlnaHQgLyAyKSksIDApO1xuICAgIGltYWdlLm1heFkgPSAtaW1hZ2UubWluWTtcblxuICAgIGltYWdlLnRvdWNoZXNDdXJyZW50LnggPSBlLnR5cGUgPT09ICd0b3VjaG1vdmUnID8gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYIDogZS5wYWdlWDtcbiAgICBpbWFnZS50b3VjaGVzQ3VycmVudC55ID0gZS50eXBlID09PSAndG91Y2htb3ZlJyA/IGUudGFyZ2V0VG91Y2hlc1swXS5wYWdlWSA6IGUucGFnZVk7XG5cbiAgICBpZiAoIWltYWdlLmlzTW92ZWQgJiYgIXpvb20uaXNTY2FsaW5nKSB7XG4gICAgICBpZiAoXG4gICAgICAgIHN3aXBlci5pc0hvcml6b250YWwoKVxuICAgICAgICAmJiAoXG4gICAgICAgICAgKE1hdGguZmxvb3IoaW1hZ2UubWluWCkgPT09IE1hdGguZmxvb3IoaW1hZ2Uuc3RhcnRYKSAmJiBpbWFnZS50b3VjaGVzQ3VycmVudC54IDwgaW1hZ2UudG91Y2hlc1N0YXJ0LngpXG4gICAgICAgICAgfHwgKE1hdGguZmxvb3IoaW1hZ2UubWF4WCkgPT09IE1hdGguZmxvb3IoaW1hZ2Uuc3RhcnRYKSAmJiBpbWFnZS50b3VjaGVzQ3VycmVudC54ID4gaW1hZ2UudG91Y2hlc1N0YXJ0LngpXG4gICAgICAgIClcbiAgICAgICkge1xuICAgICAgICBpbWFnZS5pc1RvdWNoZWQgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBpZiAoXG4gICAgICAgICFzd2lwZXIuaXNIb3Jpem9udGFsKClcbiAgICAgICAgJiYgKFxuICAgICAgICAgIChNYXRoLmZsb29yKGltYWdlLm1pblkpID09PSBNYXRoLmZsb29yKGltYWdlLnN0YXJ0WSkgJiYgaW1hZ2UudG91Y2hlc0N1cnJlbnQueSA8IGltYWdlLnRvdWNoZXNTdGFydC55KVxuICAgICAgICAgIHx8IChNYXRoLmZsb29yKGltYWdlLm1heFkpID09PSBNYXRoLmZsb29yKGltYWdlLnN0YXJ0WSkgJiYgaW1hZ2UudG91Y2hlc0N1cnJlbnQueSA+IGltYWdlLnRvdWNoZXNTdGFydC55KVxuICAgICAgICApXG4gICAgICApIHtcbiAgICAgICAgaW1hZ2UuaXNUb3VjaGVkID0gZmFsc2U7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGUuY2FuY2VsYWJsZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgaW1hZ2UuaXNNb3ZlZCA9IHRydWU7XG4gICAgaW1hZ2UuY3VycmVudFggPSAoaW1hZ2UudG91Y2hlc0N1cnJlbnQueCAtIGltYWdlLnRvdWNoZXNTdGFydC54KSArIGltYWdlLnN0YXJ0WDtcbiAgICBpbWFnZS5jdXJyZW50WSA9IChpbWFnZS50b3VjaGVzQ3VycmVudC55IC0gaW1hZ2UudG91Y2hlc1N0YXJ0LnkpICsgaW1hZ2Uuc3RhcnRZO1xuXG4gICAgaWYgKGltYWdlLmN1cnJlbnRYIDwgaW1hZ2UubWluWCkge1xuICAgICAgaW1hZ2UuY3VycmVudFggPSAoaW1hZ2UubWluWCArIDEpIC0gKCgoaW1hZ2UubWluWCAtIGltYWdlLmN1cnJlbnRYKSArIDEpICoqIDAuOCk7XG4gICAgfVxuICAgIGlmIChpbWFnZS5jdXJyZW50WCA+IGltYWdlLm1heFgpIHtcbiAgICAgIGltYWdlLmN1cnJlbnRYID0gKGltYWdlLm1heFggLSAxKSArICgoKGltYWdlLmN1cnJlbnRYIC0gaW1hZ2UubWF4WCkgKyAxKSAqKiAwLjgpO1xuICAgIH1cblxuICAgIGlmIChpbWFnZS5jdXJyZW50WSA8IGltYWdlLm1pblkpIHtcbiAgICAgIGltYWdlLmN1cnJlbnRZID0gKGltYWdlLm1pblkgKyAxKSAtICgoKGltYWdlLm1pblkgLSBpbWFnZS5jdXJyZW50WSkgKyAxKSAqKiAwLjgpO1xuICAgIH1cbiAgICBpZiAoaW1hZ2UuY3VycmVudFkgPiBpbWFnZS5tYXhZKSB7XG4gICAgICBpbWFnZS5jdXJyZW50WSA9IChpbWFnZS5tYXhZIC0gMSkgKyAoKChpbWFnZS5jdXJyZW50WSAtIGltYWdlLm1heFkpICsgMSkgKiogMC44KTtcbiAgICB9XG5cbiAgICAvLyBWZWxvY2l0eVxuICAgIGlmICghdmVsb2NpdHkucHJldlBvc2l0aW9uWCkgdmVsb2NpdHkucHJldlBvc2l0aW9uWCA9IGltYWdlLnRvdWNoZXNDdXJyZW50Lng7XG4gICAgaWYgKCF2ZWxvY2l0eS5wcmV2UG9zaXRpb25ZKSB2ZWxvY2l0eS5wcmV2UG9zaXRpb25ZID0gaW1hZ2UudG91Y2hlc0N1cnJlbnQueTtcbiAgICBpZiAoIXZlbG9jaXR5LnByZXZUaW1lKSB2ZWxvY2l0eS5wcmV2VGltZSA9IERhdGUubm93KCk7XG4gICAgdmVsb2NpdHkueCA9IChpbWFnZS50b3VjaGVzQ3VycmVudC54IC0gdmVsb2NpdHkucHJldlBvc2l0aW9uWCkgLyAoRGF0ZS5ub3coKSAtIHZlbG9jaXR5LnByZXZUaW1lKSAvIDI7XG4gICAgdmVsb2NpdHkueSA9IChpbWFnZS50b3VjaGVzQ3VycmVudC55IC0gdmVsb2NpdHkucHJldlBvc2l0aW9uWSkgLyAoRGF0ZS5ub3coKSAtIHZlbG9jaXR5LnByZXZUaW1lKSAvIDI7XG4gICAgaWYgKE1hdGguYWJzKGltYWdlLnRvdWNoZXNDdXJyZW50LnggLSB2ZWxvY2l0eS5wcmV2UG9zaXRpb25YKSA8IDIpIHZlbG9jaXR5LnggPSAwO1xuICAgIGlmIChNYXRoLmFicyhpbWFnZS50b3VjaGVzQ3VycmVudC55IC0gdmVsb2NpdHkucHJldlBvc2l0aW9uWSkgPCAyKSB2ZWxvY2l0eS55ID0gMDtcbiAgICB2ZWxvY2l0eS5wcmV2UG9zaXRpb25YID0gaW1hZ2UudG91Y2hlc0N1cnJlbnQueDtcbiAgICB2ZWxvY2l0eS5wcmV2UG9zaXRpb25ZID0gaW1hZ2UudG91Y2hlc0N1cnJlbnQueTtcbiAgICB2ZWxvY2l0eS5wcmV2VGltZSA9IERhdGUubm93KCk7XG5cbiAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbC50cmFuc2Zvcm0oYHRyYW5zbGF0ZTNkKCR7aW1hZ2UuY3VycmVudFh9cHgsICR7aW1hZ2UuY3VycmVudFl9cHgsMClgKTtcbiAgfSxcbiAgb25Ub3VjaEVuZCgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IHpvb20gPSBzd2lwZXIuem9vbTtcbiAgICBjb25zdCB7IGdlc3R1cmUsIGltYWdlLCB2ZWxvY2l0eSB9ID0gem9vbTtcbiAgICBpZiAoIWdlc3R1cmUuJGltYWdlRWwgfHwgZ2VzdHVyZS4kaW1hZ2VFbC5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICBpZiAoIWltYWdlLmlzVG91Y2hlZCB8fCAhaW1hZ2UuaXNNb3ZlZCkge1xuICAgICAgaW1hZ2UuaXNUb3VjaGVkID0gZmFsc2U7XG4gICAgICBpbWFnZS5pc01vdmVkID0gZmFsc2U7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGltYWdlLmlzVG91Y2hlZCA9IGZhbHNlO1xuICAgIGltYWdlLmlzTW92ZWQgPSBmYWxzZTtcbiAgICBsZXQgbW9tZW50dW1EdXJhdGlvblggPSAzMDA7XG4gICAgbGV0IG1vbWVudHVtRHVyYXRpb25ZID0gMzAwO1xuICAgIGNvbnN0IG1vbWVudHVtRGlzdGFuY2VYID0gdmVsb2NpdHkueCAqIG1vbWVudHVtRHVyYXRpb25YO1xuICAgIGNvbnN0IG5ld1Bvc2l0aW9uWCA9IGltYWdlLmN1cnJlbnRYICsgbW9tZW50dW1EaXN0YW5jZVg7XG4gICAgY29uc3QgbW9tZW50dW1EaXN0YW5jZVkgPSB2ZWxvY2l0eS55ICogbW9tZW50dW1EdXJhdGlvblk7XG4gICAgY29uc3QgbmV3UG9zaXRpb25ZID0gaW1hZ2UuY3VycmVudFkgKyBtb21lbnR1bURpc3RhbmNlWTtcblxuICAgIC8vIEZpeCBkdXJhdGlvblxuICAgIGlmICh2ZWxvY2l0eS54ICE9PSAwKSBtb21lbnR1bUR1cmF0aW9uWCA9IE1hdGguYWJzKChuZXdQb3NpdGlvblggLSBpbWFnZS5jdXJyZW50WCkgLyB2ZWxvY2l0eS54KTtcbiAgICBpZiAodmVsb2NpdHkueSAhPT0gMCkgbW9tZW50dW1EdXJhdGlvblkgPSBNYXRoLmFicygobmV3UG9zaXRpb25ZIC0gaW1hZ2UuY3VycmVudFkpIC8gdmVsb2NpdHkueSk7XG4gICAgY29uc3QgbW9tZW50dW1EdXJhdGlvbiA9IE1hdGgubWF4KG1vbWVudHVtRHVyYXRpb25YLCBtb21lbnR1bUR1cmF0aW9uWSk7XG5cbiAgICBpbWFnZS5jdXJyZW50WCA9IG5ld1Bvc2l0aW9uWDtcbiAgICBpbWFnZS5jdXJyZW50WSA9IG5ld1Bvc2l0aW9uWTtcblxuICAgIC8vIERlZmluZSBpZiB3ZSBuZWVkIGltYWdlIGRyYWdcbiAgICBjb25zdCBzY2FsZWRXaWR0aCA9IGltYWdlLndpZHRoICogem9vbS5zY2FsZTtcbiAgICBjb25zdCBzY2FsZWRIZWlnaHQgPSBpbWFnZS5oZWlnaHQgKiB6b29tLnNjYWxlO1xuICAgIGltYWdlLm1pblggPSBNYXRoLm1pbigoKGdlc3R1cmUuc2xpZGVXaWR0aCAvIDIpIC0gKHNjYWxlZFdpZHRoIC8gMikpLCAwKTtcbiAgICBpbWFnZS5tYXhYID0gLWltYWdlLm1pblg7XG4gICAgaW1hZ2UubWluWSA9IE1hdGgubWluKCgoZ2VzdHVyZS5zbGlkZUhlaWdodCAvIDIpIC0gKHNjYWxlZEhlaWdodCAvIDIpKSwgMCk7XG4gICAgaW1hZ2UubWF4WSA9IC1pbWFnZS5taW5ZO1xuICAgIGltYWdlLmN1cnJlbnRYID0gTWF0aC5tYXgoTWF0aC5taW4oaW1hZ2UuY3VycmVudFgsIGltYWdlLm1heFgpLCBpbWFnZS5taW5YKTtcbiAgICBpbWFnZS5jdXJyZW50WSA9IE1hdGgubWF4KE1hdGgubWluKGltYWdlLmN1cnJlbnRZLCBpbWFnZS5tYXhZKSwgaW1hZ2UubWluWSk7XG5cbiAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbC50cmFuc2l0aW9uKG1vbWVudHVtRHVyYXRpb24pLnRyYW5zZm9ybShgdHJhbnNsYXRlM2QoJHtpbWFnZS5jdXJyZW50WH1weCwgJHtpbWFnZS5jdXJyZW50WX1weCwwKWApO1xuICB9LFxuICBvblRyYW5zaXRpb25FbmQoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBjb25zdCB6b29tID0gc3dpcGVyLnpvb207XG4gICAgY29uc3QgeyBnZXN0dXJlIH0gPSB6b29tO1xuICAgIGlmIChnZXN0dXJlLiRzbGlkZUVsICYmIHN3aXBlci5wcmV2aW91c0luZGV4ICE9PSBzd2lwZXIuYWN0aXZlSW5kZXgpIHtcbiAgICAgIGlmIChnZXN0dXJlLiRpbWFnZUVsKSB7XG4gICAgICAgIGdlc3R1cmUuJGltYWdlRWwudHJhbnNmb3JtKCd0cmFuc2xhdGUzZCgwLDAsMCkgc2NhbGUoMSknKTtcbiAgICAgIH1cbiAgICAgIGlmIChnZXN0dXJlLiRpbWFnZVdyYXBFbCkge1xuICAgICAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbC50cmFuc2Zvcm0oJ3RyYW5zbGF0ZTNkKDAsMCwwKScpO1xuICAgICAgfVxuXG4gICAgICB6b29tLnNjYWxlID0gMTtcbiAgICAgIHpvb20uY3VycmVudFNjYWxlID0gMTtcblxuICAgICAgZ2VzdHVyZS4kc2xpZGVFbCA9IHVuZGVmaW5lZDtcbiAgICAgIGdlc3R1cmUuJGltYWdlRWwgPSB1bmRlZmluZWQ7XG4gICAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbCA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0sXG4gIC8vIFRvZ2dsZSBab29tXG4gIHRvZ2dsZShlKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBjb25zdCB6b29tID0gc3dpcGVyLnpvb207XG5cbiAgICBpZiAoem9vbS5zY2FsZSAmJiB6b29tLnNjYWxlICE9PSAxKSB7XG4gICAgICAvLyBab29tIE91dFxuICAgICAgem9vbS5vdXQoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gWm9vbSBJblxuICAgICAgem9vbS5pbihlKTtcbiAgICB9XG4gIH0sXG4gIGluKGUpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuXG4gICAgY29uc3Qgem9vbSA9IHN3aXBlci56b29tO1xuICAgIGNvbnN0IHBhcmFtcyA9IHN3aXBlci5wYXJhbXMuem9vbTtcbiAgICBjb25zdCB7IGdlc3R1cmUsIGltYWdlIH0gPSB6b29tO1xuXG4gICAgaWYgKCFnZXN0dXJlLiRzbGlkZUVsKSB7XG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy52aXJ0dWFsICYmIHN3aXBlci5wYXJhbXMudmlydHVhbC5lbmFibGVkICYmIHN3aXBlci52aXJ0dWFsKSB7XG4gICAgICAgIGdlc3R1cmUuJHNsaWRlRWwgPSBzd2lwZXIuJHdyYXBwZXJFbC5jaGlsZHJlbihgLiR7c3dpcGVyLnBhcmFtcy5zbGlkZUFjdGl2ZUNsYXNzfWApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZ2VzdHVyZS4kc2xpZGVFbCA9IHN3aXBlci5zbGlkZXMuZXEoc3dpcGVyLmFjdGl2ZUluZGV4KTtcbiAgICAgIH1cbiAgICAgIGdlc3R1cmUuJGltYWdlRWwgPSBnZXN0dXJlLiRzbGlkZUVsLmZpbmQoJ2ltZywgc3ZnLCBjYW52YXMsIHBpY3R1cmUsIC5zd2lwZXItem9vbS10YXJnZXQnKTtcbiAgICAgIGdlc3R1cmUuJGltYWdlV3JhcEVsID0gZ2VzdHVyZS4kaW1hZ2VFbC5wYXJlbnQoYC4ke3BhcmFtcy5jb250YWluZXJDbGFzc31gKTtcbiAgICB9XG4gICAgaWYgKCFnZXN0dXJlLiRpbWFnZUVsIHx8IGdlc3R1cmUuJGltYWdlRWwubGVuZ3RoID09PSAwKSByZXR1cm47XG5cbiAgICBnZXN0dXJlLiRzbGlkZUVsLmFkZENsYXNzKGAke3BhcmFtcy56b29tZWRTbGlkZUNsYXNzfWApO1xuXG4gICAgbGV0IHRvdWNoWDtcbiAgICBsZXQgdG91Y2hZO1xuICAgIGxldCBvZmZzZXRYO1xuICAgIGxldCBvZmZzZXRZO1xuICAgIGxldCBkaWZmWDtcbiAgICBsZXQgZGlmZlk7XG4gICAgbGV0IHRyYW5zbGF0ZVg7XG4gICAgbGV0IHRyYW5zbGF0ZVk7XG4gICAgbGV0IGltYWdlV2lkdGg7XG4gICAgbGV0IGltYWdlSGVpZ2h0O1xuICAgIGxldCBzY2FsZWRXaWR0aDtcbiAgICBsZXQgc2NhbGVkSGVpZ2h0O1xuICAgIGxldCB0cmFuc2xhdGVNaW5YO1xuICAgIGxldCB0cmFuc2xhdGVNaW5ZO1xuICAgIGxldCB0cmFuc2xhdGVNYXhYO1xuICAgIGxldCB0cmFuc2xhdGVNYXhZO1xuICAgIGxldCBzbGlkZVdpZHRoO1xuICAgIGxldCBzbGlkZUhlaWdodDtcblxuICAgIGlmICh0eXBlb2YgaW1hZ2UudG91Y2hlc1N0YXJ0LnggPT09ICd1bmRlZmluZWQnICYmIGUpIHtcbiAgICAgIHRvdWNoWCA9IGUudHlwZSA9PT0gJ3RvdWNoZW5kJyA/IGUuY2hhbmdlZFRvdWNoZXNbMF0ucGFnZVggOiBlLnBhZ2VYO1xuICAgICAgdG91Y2hZID0gZS50eXBlID09PSAndG91Y2hlbmQnID8gZS5jaGFuZ2VkVG91Y2hlc1swXS5wYWdlWSA6IGUucGFnZVk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRvdWNoWCA9IGltYWdlLnRvdWNoZXNTdGFydC54O1xuICAgICAgdG91Y2hZID0gaW1hZ2UudG91Y2hlc1N0YXJ0Lnk7XG4gICAgfVxuXG4gICAgem9vbS5zY2FsZSA9IGdlc3R1cmUuJGltYWdlV3JhcEVsLmF0dHIoJ2RhdGEtc3dpcGVyLXpvb20nKSB8fCBwYXJhbXMubWF4UmF0aW87XG4gICAgem9vbS5jdXJyZW50U2NhbGUgPSBnZXN0dXJlLiRpbWFnZVdyYXBFbC5hdHRyKCdkYXRhLXN3aXBlci16b29tJykgfHwgcGFyYW1zLm1heFJhdGlvO1xuICAgIGlmIChlKSB7XG4gICAgICBzbGlkZVdpZHRoID0gZ2VzdHVyZS4kc2xpZGVFbFswXS5vZmZzZXRXaWR0aDtcbiAgICAgIHNsaWRlSGVpZ2h0ID0gZ2VzdHVyZS4kc2xpZGVFbFswXS5vZmZzZXRIZWlnaHQ7XG4gICAgICBvZmZzZXRYID0gZ2VzdHVyZS4kc2xpZGVFbC5vZmZzZXQoKS5sZWZ0O1xuICAgICAgb2Zmc2V0WSA9IGdlc3R1cmUuJHNsaWRlRWwub2Zmc2V0KCkudG9wO1xuICAgICAgZGlmZlggPSAob2Zmc2V0WCArIChzbGlkZVdpZHRoIC8gMikpIC0gdG91Y2hYO1xuICAgICAgZGlmZlkgPSAob2Zmc2V0WSArIChzbGlkZUhlaWdodCAvIDIpKSAtIHRvdWNoWTtcblxuICAgICAgaW1hZ2VXaWR0aCA9IGdlc3R1cmUuJGltYWdlRWxbMF0ub2Zmc2V0V2lkdGg7XG4gICAgICBpbWFnZUhlaWdodCA9IGdlc3R1cmUuJGltYWdlRWxbMF0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgc2NhbGVkV2lkdGggPSBpbWFnZVdpZHRoICogem9vbS5zY2FsZTtcbiAgICAgIHNjYWxlZEhlaWdodCA9IGltYWdlSGVpZ2h0ICogem9vbS5zY2FsZTtcblxuICAgICAgdHJhbnNsYXRlTWluWCA9IE1hdGgubWluKCgoc2xpZGVXaWR0aCAvIDIpIC0gKHNjYWxlZFdpZHRoIC8gMikpLCAwKTtcbiAgICAgIHRyYW5zbGF0ZU1pblkgPSBNYXRoLm1pbigoKHNsaWRlSGVpZ2h0IC8gMikgLSAoc2NhbGVkSGVpZ2h0IC8gMikpLCAwKTtcbiAgICAgIHRyYW5zbGF0ZU1heFggPSAtdHJhbnNsYXRlTWluWDtcbiAgICAgIHRyYW5zbGF0ZU1heFkgPSAtdHJhbnNsYXRlTWluWTtcblxuICAgICAgdHJhbnNsYXRlWCA9IGRpZmZYICogem9vbS5zY2FsZTtcbiAgICAgIHRyYW5zbGF0ZVkgPSBkaWZmWSAqIHpvb20uc2NhbGU7XG5cbiAgICAgIGlmICh0cmFuc2xhdGVYIDwgdHJhbnNsYXRlTWluWCkge1xuICAgICAgICB0cmFuc2xhdGVYID0gdHJhbnNsYXRlTWluWDtcbiAgICAgIH1cbiAgICAgIGlmICh0cmFuc2xhdGVYID4gdHJhbnNsYXRlTWF4WCkge1xuICAgICAgICB0cmFuc2xhdGVYID0gdHJhbnNsYXRlTWF4WDtcbiAgICAgIH1cblxuICAgICAgaWYgKHRyYW5zbGF0ZVkgPCB0cmFuc2xhdGVNaW5ZKSB7XG4gICAgICAgIHRyYW5zbGF0ZVkgPSB0cmFuc2xhdGVNaW5ZO1xuICAgICAgfVxuICAgICAgaWYgKHRyYW5zbGF0ZVkgPiB0cmFuc2xhdGVNYXhZKSB7XG4gICAgICAgIHRyYW5zbGF0ZVkgPSB0cmFuc2xhdGVNYXhZO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0cmFuc2xhdGVYID0gMDtcbiAgICAgIHRyYW5zbGF0ZVkgPSAwO1xuICAgIH1cbiAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbC50cmFuc2l0aW9uKDMwMCkudHJhbnNmb3JtKGB0cmFuc2xhdGUzZCgke3RyYW5zbGF0ZVh9cHgsICR7dHJhbnNsYXRlWX1weCwwKWApO1xuICAgIGdlc3R1cmUuJGltYWdlRWwudHJhbnNpdGlvbigzMDApLnRyYW5zZm9ybShgdHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlKCR7em9vbS5zY2FsZX0pYCk7XG4gIH0sXG4gIG91dCgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuXG4gICAgY29uc3Qgem9vbSA9IHN3aXBlci56b29tO1xuICAgIGNvbnN0IHBhcmFtcyA9IHN3aXBlci5wYXJhbXMuem9vbTtcbiAgICBjb25zdCB7IGdlc3R1cmUgfSA9IHpvb207XG5cbiAgICBpZiAoIWdlc3R1cmUuJHNsaWRlRWwpIHtcbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLnZpcnR1YWwgJiYgc3dpcGVyLnBhcmFtcy52aXJ0dWFsLmVuYWJsZWQgJiYgc3dpcGVyLnZpcnR1YWwpIHtcbiAgICAgICAgZ2VzdHVyZS4kc2xpZGVFbCA9IHN3aXBlci4kd3JhcHBlckVsLmNoaWxkcmVuKGAuJHtzd2lwZXIucGFyYW1zLnNsaWRlQWN0aXZlQ2xhc3N9YCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBnZXN0dXJlLiRzbGlkZUVsID0gc3dpcGVyLnNsaWRlcy5lcShzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgICAgfVxuICAgICAgZ2VzdHVyZS4kaW1hZ2VFbCA9IGdlc3R1cmUuJHNsaWRlRWwuZmluZCgnaW1nLCBzdmcsIGNhbnZhcywgcGljdHVyZSwgLnN3aXBlci16b29tLXRhcmdldCcpO1xuICAgICAgZ2VzdHVyZS4kaW1hZ2VXcmFwRWwgPSBnZXN0dXJlLiRpbWFnZUVsLnBhcmVudChgLiR7cGFyYW1zLmNvbnRhaW5lckNsYXNzfWApO1xuICAgIH1cbiAgICBpZiAoIWdlc3R1cmUuJGltYWdlRWwgfHwgZ2VzdHVyZS4kaW1hZ2VFbC5sZW5ndGggPT09IDApIHJldHVybjtcblxuICAgIHpvb20uc2NhbGUgPSAxO1xuICAgIHpvb20uY3VycmVudFNjYWxlID0gMTtcbiAgICBnZXN0dXJlLiRpbWFnZVdyYXBFbC50cmFuc2l0aW9uKDMwMCkudHJhbnNmb3JtKCd0cmFuc2xhdGUzZCgwLDAsMCknKTtcbiAgICBnZXN0dXJlLiRpbWFnZUVsLnRyYW5zaXRpb24oMzAwKS50cmFuc2Zvcm0oJ3RyYW5zbGF0ZTNkKDAsMCwwKSBzY2FsZSgxKScpO1xuICAgIGdlc3R1cmUuJHNsaWRlRWwucmVtb3ZlQ2xhc3MoYCR7cGFyYW1zLnpvb21lZFNsaWRlQ2xhc3N9YCk7XG4gICAgZ2VzdHVyZS4kc2xpZGVFbCA9IHVuZGVmaW5lZDtcbiAgfSxcbiAgLy8gQXR0YWNoL0RldGFjaCBFdmVudHNcbiAgZW5hYmxlKCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgY29uc3Qgem9vbSA9IHN3aXBlci56b29tO1xuICAgIGlmICh6b29tLmVuYWJsZWQpIHJldHVybjtcbiAgICB6b29tLmVuYWJsZWQgPSB0cnVlO1xuXG4gICAgY29uc3QgcGFzc2l2ZUxpc3RlbmVyID0gc3dpcGVyLnRvdWNoRXZlbnRzLnN0YXJ0ID09PSAndG91Y2hzdGFydCcgJiYgU3VwcG9ydC5wYXNzaXZlTGlzdGVuZXIgJiYgc3dpcGVyLnBhcmFtcy5wYXNzaXZlTGlzdGVuZXJzID8geyBwYXNzaXZlOiB0cnVlLCBjYXB0dXJlOiBmYWxzZSB9IDogZmFsc2U7XG4gICAgY29uc3QgYWN0aXZlTGlzdGVuZXJXaXRoQ2FwdHVyZSA9IFN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyID8geyBwYXNzaXZlOiBmYWxzZSwgY2FwdHVyZTogdHJ1ZSB9IDogdHJ1ZTtcblxuICAgIGNvbnN0IHNsaWRlU2VsZWN0b3IgPSBgLiR7c3dpcGVyLnBhcmFtcy5zbGlkZUNsYXNzfWA7XG5cbiAgICAvLyBTY2FsZSBpbWFnZVxuICAgIGlmIChTdXBwb3J0Lmdlc3R1cmVzKSB7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vbignZ2VzdHVyZXN0YXJ0Jywgc2xpZGVTZWxlY3Rvciwgem9vbS5vbkdlc3R1cmVTdGFydCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9uKCdnZXN0dXJlY2hhbmdlJywgc2xpZGVTZWxlY3Rvciwgem9vbS5vbkdlc3R1cmVDaGFuZ2UsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vbignZ2VzdHVyZWVuZCcsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgIH0gZWxzZSBpZiAoc3dpcGVyLnRvdWNoRXZlbnRzLnN0YXJ0ID09PSAndG91Y2hzdGFydCcpIHtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9uKHN3aXBlci50b3VjaEV2ZW50cy5zdGFydCwgc2xpZGVTZWxlY3Rvciwgem9vbS5vbkdlc3R1cmVTdGFydCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9uKHN3aXBlci50b3VjaEV2ZW50cy5tb3ZlLCBzbGlkZVNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZUNoYW5nZSwgYWN0aXZlTGlzdGVuZXJXaXRoQ2FwdHVyZSk7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vbihzd2lwZXIudG91Y2hFdmVudHMuZW5kLCBzbGlkZVNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZUVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIGlmIChzd2lwZXIudG91Y2hFdmVudHMuY2FuY2VsKSB7XG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9uKHN3aXBlci50b3VjaEV2ZW50cy5jYW5jZWwsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIE1vdmUgaW1hZ2VcbiAgICBzd2lwZXIuJHdyYXBwZXJFbC5vbihzd2lwZXIudG91Y2hFdmVudHMubW92ZSwgYC4ke3N3aXBlci5wYXJhbXMuem9vbS5jb250YWluZXJDbGFzc31gLCB6b29tLm9uVG91Y2hNb3ZlLCBhY3RpdmVMaXN0ZW5lcldpdGhDYXB0dXJlKTtcbiAgfSxcbiAgZGlzYWJsZSgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IHpvb20gPSBzd2lwZXIuem9vbTtcbiAgICBpZiAoIXpvb20uZW5hYmxlZCkgcmV0dXJuO1xuXG4gICAgc3dpcGVyLnpvb20uZW5hYmxlZCA9IGZhbHNlO1xuXG4gICAgY29uc3QgcGFzc2l2ZUxpc3RlbmVyID0gc3dpcGVyLnRvdWNoRXZlbnRzLnN0YXJ0ID09PSAndG91Y2hzdGFydCcgJiYgU3VwcG9ydC5wYXNzaXZlTGlzdGVuZXIgJiYgc3dpcGVyLnBhcmFtcy5wYXNzaXZlTGlzdGVuZXJzID8geyBwYXNzaXZlOiB0cnVlLCBjYXB0dXJlOiBmYWxzZSB9IDogZmFsc2U7XG4gICAgY29uc3QgYWN0aXZlTGlzdGVuZXJXaXRoQ2FwdHVyZSA9IFN1cHBvcnQucGFzc2l2ZUxpc3RlbmVyID8geyBwYXNzaXZlOiBmYWxzZSwgY2FwdHVyZTogdHJ1ZSB9IDogdHJ1ZTtcblxuICAgIGNvbnN0IHNsaWRlU2VsZWN0b3IgPSBgLiR7c3dpcGVyLnBhcmFtcy5zbGlkZUNsYXNzfWA7XG5cbiAgICAvLyBTY2FsZSBpbWFnZVxuICAgIGlmIChTdXBwb3J0Lmdlc3R1cmVzKSB7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vZmYoJ2dlc3R1cmVzdGFydCcsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlU3RhcnQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vZmYoJ2dlc3R1cmVjaGFuZ2UnLCBzbGlkZVNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZUNoYW5nZSwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9mZignZ2VzdHVyZWVuZCcsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlRW5kLCBwYXNzaXZlTGlzdGVuZXIpO1xuICAgIH0gZWxzZSBpZiAoc3dpcGVyLnRvdWNoRXZlbnRzLnN0YXJ0ID09PSAndG91Y2hzdGFydCcpIHtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9mZihzd2lwZXIudG91Y2hFdmVudHMuc3RhcnQsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlU3RhcnQsIHBhc3NpdmVMaXN0ZW5lcik7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbC5vZmYoc3dpcGVyLnRvdWNoRXZlbnRzLm1vdmUsIHNsaWRlU2VsZWN0b3IsIHpvb20ub25HZXN0dXJlQ2hhbmdlLCBhY3RpdmVMaXN0ZW5lcldpdGhDYXB0dXJlKTtcbiAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9mZihzd2lwZXIudG91Y2hFdmVudHMuZW5kLCBzbGlkZVNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZUVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIGlmIChzd2lwZXIudG91Y2hFdmVudHMuY2FuY2VsKSB7XG4gICAgICAgIHN3aXBlci4kd3JhcHBlckVsLm9mZihzd2lwZXIudG91Y2hFdmVudHMuY2FuY2VsLCBzbGlkZVNlbGVjdG9yLCB6b29tLm9uR2VzdHVyZUVuZCwgcGFzc2l2ZUxpc3RlbmVyKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBNb3ZlIGltYWdlXG4gICAgc3dpcGVyLiR3cmFwcGVyRWwub2ZmKHN3aXBlci50b3VjaEV2ZW50cy5tb3ZlLCBgLiR7c3dpcGVyLnBhcmFtcy56b29tLmNvbnRhaW5lckNsYXNzfWAsIHpvb20ub25Ub3VjaE1vdmUsIGFjdGl2ZUxpc3RlbmVyV2l0aENhcHR1cmUpO1xuICB9LFxufTtcblxudmFyIHpvb20gPSB7XG4gIG5hbWU6ICd6b29tJyxcbiAgcGFyYW1zOiB7XG4gICAgem9vbToge1xuICAgICAgZW5hYmxlZDogZmFsc2UsXG4gICAgICBtYXhSYXRpbzogMyxcbiAgICAgIG1pblJhdGlvOiAxLFxuICAgICAgdG9nZ2xlOiB0cnVlLFxuICAgICAgY29udGFpbmVyQ2xhc3M6ICdzd2lwZXItem9vbS1jb250YWluZXInLFxuICAgICAgem9vbWVkU2xpZGVDbGFzczogJ3N3aXBlci1zbGlkZS16b29tZWQnLFxuICAgIH0sXG4gIH0sXG4gIGNyZWF0ZSgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0IHpvb20gPSB7XG4gICAgICBlbmFibGVkOiBmYWxzZSxcbiAgICAgIHNjYWxlOiAxLFxuICAgICAgY3VycmVudFNjYWxlOiAxLFxuICAgICAgaXNTY2FsaW5nOiBmYWxzZSxcbiAgICAgIGdlc3R1cmU6IHtcbiAgICAgICAgJHNsaWRlRWw6IHVuZGVmaW5lZCxcbiAgICAgICAgc2xpZGVXaWR0aDogdW5kZWZpbmVkLFxuICAgICAgICBzbGlkZUhlaWdodDogdW5kZWZpbmVkLFxuICAgICAgICAkaW1hZ2VFbDogdW5kZWZpbmVkLFxuICAgICAgICAkaW1hZ2VXcmFwRWw6IHVuZGVmaW5lZCxcbiAgICAgICAgbWF4UmF0aW86IDMsXG4gICAgICB9LFxuICAgICAgaW1hZ2U6IHtcbiAgICAgICAgaXNUb3VjaGVkOiB1bmRlZmluZWQsXG4gICAgICAgIGlzTW92ZWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgY3VycmVudFg6IHVuZGVmaW5lZCxcbiAgICAgICAgY3VycmVudFk6IHVuZGVmaW5lZCxcbiAgICAgICAgbWluWDogdW5kZWZpbmVkLFxuICAgICAgICBtaW5ZOiB1bmRlZmluZWQsXG4gICAgICAgIG1heFg6IHVuZGVmaW5lZCxcbiAgICAgICAgbWF4WTogdW5kZWZpbmVkLFxuICAgICAgICB3aWR0aDogdW5kZWZpbmVkLFxuICAgICAgICBoZWlnaHQ6IHVuZGVmaW5lZCxcbiAgICAgICAgc3RhcnRYOiB1bmRlZmluZWQsXG4gICAgICAgIHN0YXJ0WTogdW5kZWZpbmVkLFxuICAgICAgICB0b3VjaGVzU3RhcnQ6IHt9LFxuICAgICAgICB0b3VjaGVzQ3VycmVudDoge30sXG4gICAgICB9LFxuICAgICAgdmVsb2NpdHk6IHtcbiAgICAgICAgeDogdW5kZWZpbmVkLFxuICAgICAgICB5OiB1bmRlZmluZWQsXG4gICAgICAgIHByZXZQb3NpdGlvblg6IHVuZGVmaW5lZCxcbiAgICAgICAgcHJldlBvc2l0aW9uWTogdW5kZWZpbmVkLFxuICAgICAgICBwcmV2VGltZTogdW5kZWZpbmVkLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgKCdvbkdlc3R1cmVTdGFydCBvbkdlc3R1cmVDaGFuZ2Ugb25HZXN0dXJlRW5kIG9uVG91Y2hTdGFydCBvblRvdWNoTW92ZSBvblRvdWNoRW5kIG9uVHJhbnNpdGlvbkVuZCB0b2dnbGUgZW5hYmxlIGRpc2FibGUgaW4gb3V0Jykuc3BsaXQoJyAnKS5mb3JFYWNoKChtZXRob2ROYW1lKSA9PiB7XG4gICAgICB6b29tW21ldGhvZE5hbWVdID0gWm9vbVttZXRob2ROYW1lXS5iaW5kKHN3aXBlcik7XG4gICAgfSk7XG4gICAgVXRpbHMuZXh0ZW5kKHN3aXBlciwge1xuICAgICAgem9vbSxcbiAgICB9KTtcblxuICAgIGxldCBzY2FsZSA9IDE7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHN3aXBlci56b29tLCAnc2NhbGUnLCB7XG4gICAgICBnZXQoKSB7XG4gICAgICAgIHJldHVybiBzY2FsZTtcbiAgICAgIH0sXG4gICAgICBzZXQodmFsdWUpIHtcbiAgICAgICAgaWYgKHNjYWxlICE9PSB2YWx1ZSkge1xuICAgICAgICAgIGNvbnN0IGltYWdlRWwgPSBzd2lwZXIuem9vbS5nZXN0dXJlLiRpbWFnZUVsID8gc3dpcGVyLnpvb20uZ2VzdHVyZS4kaW1hZ2VFbFswXSA6IHVuZGVmaW5lZDtcbiAgICAgICAgICBjb25zdCBzbGlkZUVsID0gc3dpcGVyLnpvb20uZ2VzdHVyZS4kc2xpZGVFbCA/IHN3aXBlci56b29tLmdlc3R1cmUuJHNsaWRlRWxbMF0gOiB1bmRlZmluZWQ7XG4gICAgICAgICAgc3dpcGVyLmVtaXQoJ3pvb21DaGFuZ2UnLCB2YWx1ZSwgaW1hZ2VFbCwgc2xpZGVFbCk7XG4gICAgICAgIH1cbiAgICAgICAgc2NhbGUgPSB2YWx1ZTtcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0sXG4gIG9uOiB7XG4gICAgaW5pdCgpIHtcbiAgICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy56b29tLmVuYWJsZWQpIHtcbiAgICAgICAgc3dpcGVyLnpvb20uZW5hYmxlKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBkZXN0cm95KCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIHN3aXBlci56b29tLmRpc2FibGUoKTtcbiAgICB9LFxuICAgIHRvdWNoU3RhcnQoZSkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmICghc3dpcGVyLnpvb20uZW5hYmxlZCkgcmV0dXJuO1xuICAgICAgc3dpcGVyLnpvb20ub25Ub3VjaFN0YXJ0KGUpO1xuICAgIH0sXG4gICAgdG91Y2hFbmQoZSkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmICghc3dpcGVyLnpvb20uZW5hYmxlZCkgcmV0dXJuO1xuICAgICAgc3dpcGVyLnpvb20ub25Ub3VjaEVuZChlKTtcbiAgICB9LFxuICAgIGRvdWJsZVRhcChlKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKHN3aXBlci5wYXJhbXMuem9vbS5lbmFibGVkICYmIHN3aXBlci56b29tLmVuYWJsZWQgJiYgc3dpcGVyLnBhcmFtcy56b29tLnRvZ2dsZSkge1xuICAgICAgICBzd2lwZXIuem9vbS50b2dnbGUoZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICB0cmFuc2l0aW9uRW5kKCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmIChzd2lwZXIuem9vbS5lbmFibGVkICYmIHN3aXBlci5wYXJhbXMuem9vbS5lbmFibGVkKSB7XG4gICAgICAgIHN3aXBlci56b29tLm9uVHJhbnNpdGlvbkVuZCgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2xpZGVDaGFuZ2UoKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKHN3aXBlci56b29tLmVuYWJsZWQgJiYgc3dpcGVyLnBhcmFtcy56b29tLmVuYWJsZWQgJiYgc3dpcGVyLnBhcmFtcy5jc3NNb2RlKSB7XG4gICAgICAgIHN3aXBlci56b29tLm9uVHJhbnNpdGlvbkVuZCgpO1xuICAgICAgfVxuICAgIH0sXG4gIH0sXG59O1xuXG4vKiBlc2xpbnQgbm8tdW5kZXJzY29yZS1kYW5nbGU6IFwib2ZmXCIgKi9cblxuY29uc3QgQXV0b3BsYXkgPSB7XG4gIHJ1bigpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGNvbnN0ICRhY3RpdmVTbGlkZUVsID0gc3dpcGVyLnNsaWRlcy5lcShzd2lwZXIuYWN0aXZlSW5kZXgpO1xuICAgIGxldCBkZWxheSA9IHN3aXBlci5wYXJhbXMuYXV0b3BsYXkuZGVsYXk7XG4gICAgaWYgKCRhY3RpdmVTbGlkZUVsLmF0dHIoJ2RhdGEtc3dpcGVyLWF1dG9wbGF5JykpIHtcbiAgICAgIGRlbGF5ID0gJGFjdGl2ZVNsaWRlRWwuYXR0cignZGF0YS1zd2lwZXItYXV0b3BsYXknKSB8fCBzd2lwZXIucGFyYW1zLmF1dG9wbGF5LmRlbGF5O1xuICAgIH1cbiAgICBjbGVhclRpbWVvdXQoc3dpcGVyLmF1dG9wbGF5LnRpbWVvdXQpO1xuICAgIHN3aXBlci5hdXRvcGxheS50aW1lb3V0ID0gVXRpbHMubmV4dFRpY2soKCkgPT4ge1xuICAgICAgaWYgKHN3aXBlci5wYXJhbXMuYXV0b3BsYXkucmV2ZXJzZURpcmVjdGlvbikge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5sb29wKSB7XG4gICAgICAgICAgc3dpcGVyLmxvb3BGaXgoKTtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVQcmV2KHN3aXBlci5wYXJhbXMuc3BlZWQsIHRydWUsIHRydWUpO1xuICAgICAgICAgIHN3aXBlci5lbWl0KCdhdXRvcGxheScpO1xuICAgICAgICB9IGVsc2UgaWYgKCFzd2lwZXIuaXNCZWdpbm5pbmcpIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVQcmV2KHN3aXBlci5wYXJhbXMuc3BlZWQsIHRydWUsIHRydWUpO1xuICAgICAgICAgIHN3aXBlci5lbWl0KCdhdXRvcGxheScpO1xuICAgICAgICB9IGVsc2UgaWYgKCFzd2lwZXIucGFyYW1zLmF1dG9wbGF5LnN0b3BPbkxhc3RTbGlkZSkge1xuICAgICAgICAgIHN3aXBlci5zbGlkZVRvKHN3aXBlci5zbGlkZXMubGVuZ3RoIC0gMSwgc3dpcGVyLnBhcmFtcy5zcGVlZCwgdHJ1ZSwgdHJ1ZSk7XG4gICAgICAgICAgc3dpcGVyLmVtaXQoJ2F1dG9wbGF5Jyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3dpcGVyLmF1dG9wbGF5LnN0b3AoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChzd2lwZXIucGFyYW1zLmxvb3ApIHtcbiAgICAgICAgc3dpcGVyLmxvb3BGaXgoKTtcbiAgICAgICAgc3dpcGVyLnNsaWRlTmV4dChzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ2F1dG9wbGF5Jyk7XG4gICAgICB9IGVsc2UgaWYgKCFzd2lwZXIuaXNFbmQpIHtcbiAgICAgICAgc3dpcGVyLnNsaWRlTmV4dChzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ2F1dG9wbGF5Jyk7XG4gICAgICB9IGVsc2UgaWYgKCFzd2lwZXIucGFyYW1zLmF1dG9wbGF5LnN0b3BPbkxhc3RTbGlkZSkge1xuICAgICAgICBzd2lwZXIuc2xpZGVUbygwLCBzd2lwZXIucGFyYW1zLnNwZWVkLCB0cnVlLCB0cnVlKTtcbiAgICAgICAgc3dpcGVyLmVtaXQoJ2F1dG9wbGF5Jyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzd2lwZXIuYXV0b3BsYXkuc3RvcCgpO1xuICAgICAgfVxuICAgICAgaWYgKHN3aXBlci5wYXJhbXMuY3NzTW9kZSAmJiBzd2lwZXIuYXV0b3BsYXkucnVubmluZykgc3dpcGVyLmF1dG9wbGF5LnJ1bigpO1xuICAgIH0sIGRlbGF5KTtcbiAgfSxcbiAgc3RhcnQoKSB7XG4gICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICBpZiAodHlwZW9mIHN3aXBlci5hdXRvcGxheS50aW1lb3V0ICE9PSAndW5kZWZpbmVkJykgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChzd2lwZXIuYXV0b3BsYXkucnVubmluZykgcmV0dXJuIGZhbHNlO1xuICAgIHN3aXBlci5hdXRvcGxheS5ydW5uaW5nID0gdHJ1ZTtcbiAgICBzd2lwZXIuZW1pdCgnYXV0b3BsYXlTdGFydCcpO1xuICAgIHN3aXBlci5hdXRvcGxheS5ydW4oKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcbiAgc3RvcCgpIHtcbiAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgIGlmICghc3dpcGVyLmF1dG9wbGF5LnJ1bm5pbmcpIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIHN3aXBlci5hdXRvcGxheS50aW1lb3V0ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIGZhbHNlO1xuXG4gICAgaWYgKHN3aXBlci5hdXRvcGxheS50aW1lb3V0KSB7XG4gICAgICBjbGVhclRpbWVvdXQoc3dpcGVyLmF1dG9wbGF5LnRpbWVvdXQpO1xuICAgICAgc3dpcGVyLmF1dG9wbGF5LnRpbWVvdXQgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHN3aXBlci5hdXRvcGxheS5ydW5uaW5nID0gZmFsc2U7XG4gICAgc3dpcGVyLmVtaXQoJ2F1dG9wbGF5U3RvcCcpO1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuICBwYXVzZShzcGVlZCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgaWYgKCFzd2lwZXIuYXV0b3BsYXkucnVubmluZykgcmV0dXJuO1xuICAgIGlmIChzd2lwZXIuYXV0b3BsYXkucGF1c2VkKSByZXR1cm47XG4gICAgaWYgKHN3aXBlci5hdXRvcGxheS50aW1lb3V0KSBjbGVhclRpbWVvdXQoc3dpcGVyLmF1dG9wbGF5LnRpbWVvdXQpO1xuICAgIHN3aXBlci5hdXRvcGxheS5wYXVzZWQgPSB0cnVlO1xuICAgIGlmIChzcGVlZCA9PT0gMCB8fCAhc3dpcGVyLnBhcmFtcy5hdXRvcGxheS53YWl0Rm9yVHJhbnNpdGlvbikge1xuICAgICAgc3dpcGVyLmF1dG9wbGF5LnBhdXNlZCA9IGZhbHNlO1xuICAgICAgc3dpcGVyLmF1dG9wbGF5LnJ1bigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgc3dpcGVyLmF1dG9wbGF5Lm9uVHJhbnNpdGlvbkVuZCk7XG4gICAgICBzd2lwZXIuJHdyYXBwZXJFbFswXS5hZGRFdmVudExpc3RlbmVyKCd3ZWJraXRUcmFuc2l0aW9uRW5kJywgc3dpcGVyLmF1dG9wbGF5Lm9uVHJhbnNpdGlvbkVuZCk7XG4gICAgfVxuICB9LFxufTtcblxudmFyIGF1dG9wbGF5ID0ge1xuICBuYW1lOiAnYXV0b3BsYXknLFxuICBwYXJhbXM6IHtcbiAgICBhdXRvcGxheToge1xuICAgICAgZW5hYmxlZDogZmFsc2UsXG4gICAgICBkZWxheTogMzAwMCxcbiAgICAgIHdhaXRGb3JUcmFuc2l0aW9uOiB0cnVlLFxuICAgICAgZGlzYWJsZU9uSW50ZXJhY3Rpb246IHRydWUsXG4gICAgICBzdG9wT25MYXN0U2xpZGU6IGZhbHNlLFxuICAgICAgcmV2ZXJzZURpcmVjdGlvbjogZmFsc2UsXG4gICAgfSxcbiAgfSxcbiAgY3JlYXRlKCkge1xuICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgVXRpbHMuZXh0ZW5kKHN3aXBlciwge1xuICAgICAgYXV0b3BsYXk6IHtcbiAgICAgICAgcnVubmluZzogZmFsc2UsXG4gICAgICAgIHBhdXNlZDogZmFsc2UsXG4gICAgICAgIHJ1bjogQXV0b3BsYXkucnVuLmJpbmQoc3dpcGVyKSxcbiAgICAgICAgc3RhcnQ6IEF1dG9wbGF5LnN0YXJ0LmJpbmQoc3dpcGVyKSxcbiAgICAgICAgc3RvcDogQXV0b3BsYXkuc3RvcC5iaW5kKHN3aXBlciksXG4gICAgICAgIHBhdXNlOiBBdXRvcGxheS5wYXVzZS5iaW5kKHN3aXBlciksXG4gICAgICAgIG9uVmlzaWJpbGl0eUNoYW5nZSgpIHtcbiAgICAgICAgICBpZiAoZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlID09PSAnaGlkZGVuJyAmJiBzd2lwZXIuYXV0b3BsYXkucnVubmluZykge1xuICAgICAgICAgICAgc3dpcGVyLmF1dG9wbGF5LnBhdXNlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICd2aXNpYmxlJyAmJiBzd2lwZXIuYXV0b3BsYXkucGF1c2VkKSB7XG4gICAgICAgICAgICBzd2lwZXIuYXV0b3BsYXkucnVuKCk7XG4gICAgICAgICAgICBzd2lwZXIuYXV0b3BsYXkucGF1c2VkID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBvblRyYW5zaXRpb25FbmQoZSkge1xuICAgICAgICAgIGlmICghc3dpcGVyIHx8IHN3aXBlci5kZXN0cm95ZWQgfHwgIXN3aXBlci4kd3JhcHBlckVsKSByZXR1cm47XG4gICAgICAgICAgaWYgKGUudGFyZ2V0ICE9PSB0aGlzKSByZXR1cm47XG4gICAgICAgICAgc3dpcGVyLiR3cmFwcGVyRWxbMF0ucmVtb3ZlRXZlbnRMaXN0ZW5lcigndHJhbnNpdGlvbmVuZCcsIHN3aXBlci5hdXRvcGxheS5vblRyYW5zaXRpb25FbmQpO1xuICAgICAgICAgIHN3aXBlci4kd3JhcHBlckVsWzBdLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3dlYmtpdFRyYW5zaXRpb25FbmQnLCBzd2lwZXIuYXV0b3BsYXkub25UcmFuc2l0aW9uRW5kKTtcbiAgICAgICAgICBzd2lwZXIuYXV0b3BsYXkucGF1c2VkID0gZmFsc2U7XG4gICAgICAgICAgaWYgKCFzd2lwZXIuYXV0b3BsYXkucnVubmluZykge1xuICAgICAgICAgICAgc3dpcGVyLmF1dG9wbGF5LnN0b3AoKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3dpcGVyLmF1dG9wbGF5LnJ1bigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0sXG4gIG9uOiB7XG4gICAgaW5pdCgpIHtcbiAgICAgIGNvbnN0IHN3aXBlciA9IHRoaXM7XG4gICAgICBpZiAoc3dpcGVyLnBhcmFtcy5hdXRvcGxheS5lbmFibGVkKSB7XG4gICAgICAgIHN3aXBlci5hdXRvcGxheS5zdGFydCgpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgc3dpcGVyLmF1dG9wbGF5Lm9uVmlzaWJpbGl0eUNoYW5nZSk7XG4gICAgICB9XG4gICAgfSxcbiAgICBiZWZvcmVUcmFuc2l0aW9uU3RhcnQoc3BlZWQsIGludGVybmFsKSB7XG4gICAgICBjb25zdCBzd2lwZXIgPSB0aGlzO1xuICAgICAgaWYgKHN3aXBlci5hdXRvcGxheS5ydW5uaW5nKSB7XG4gICAgICAgIGlmIChpbnRlcm5hbCB8fCAhc3dpcGVyLnBhcmFtcy5hdXRvcGxheS5kaXNhYmxlT25JbnRlcmFjdGlvbikge1xuICAgICAgICAgIHN3aXBlci5hdXRvcGxheS5wYXVzZShzcGVlZCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3dpcGVyLmF1dG9wbGF5LnN0b3AoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgc2xpZGVyRmlyc3RNb3ZlKCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmIChzd2lwZXIuYXV0b3BsYXkucnVubmluZykge1xuICAgICAgICBpZiAoc3dpcGVyLnBhcmFtcy5hdXRvcGxheS5kaXNhYmxlT25JbnRlcmFjdGlvbikge1xuICAgICAgICAgIHN3aXBlci5hdXRvcGxheS5zdG9wKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3dpcGVyLmF1dG9wbGF5LnBhdXNlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHRvdWNoRW5kKCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmIChzd2lwZXIucGFyYW1zLmNzc01vZGUgJiYgc3dpcGVyLmF1dG9wbGF5LnBhdXNlZCAmJiAhc3dpcGVyLnBhcmFtcy5hdXRvcGxheS5kaXNhYmxlT25JbnRlcmFjdGlvbikge1xuICAgICAgICBzd2lwZXIuYXV0b3BsYXkucnVuKCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBkZXN0cm95KCkge1xuICAgICAgY29uc3Qgc3dpcGVyID0gdGhpcztcbiAgICAgIGlmIChzd2lwZXIuYXV0b3BsYXkucnVubmluZykge1xuICAgICAgICBzd2lwZXIuYXV0b3BsYXkuc3RvcCgpO1xuICAgICAgfVxuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIHN3aXBlci5hdXRvcGxheS5vblZpc2liaWxpdHlDaGFuZ2UpO1xuICAgIH0sXG4gIH0sXG59O1xuXG4vLyBTd2lwZXIgQ2xhc3NcblxuY29uc3QgY29tcG9uZW50cyA9IFtcbiAgRGV2aWNlJDEsXG4gIFN1cHBvcnQkMSxcbiAgQnJvd3NlciQxLFxuICBSZXNpemUsXG4gIE9ic2VydmVyJDEsXG5dO1xuXG5pZiAodHlwZW9mIFN3aXBlci51c2UgPT09ICd1bmRlZmluZWQnKSB7XG4gIFN3aXBlci51c2UgPSBTd2lwZXIuQ2xhc3MudXNlO1xuICBTd2lwZXIuaW5zdGFsbE1vZHVsZSA9IFN3aXBlci5DbGFzcy5pbnN0YWxsTW9kdWxlO1xufVxuXG5Td2lwZXIudXNlKGNvbXBvbmVudHMpO1xuXG5Td2lwZXIudXNlKFtwYWdpbmF0aW9uLCBzY3JvbGxiYXIsIGF1dG9wbGF5LCBrZXlib2FyZCwgem9vbV0pO1xuXG5leHBvcnQgeyBTd2lwZXIgfTtcbiJdLCJuYW1lcyI6WyJpc09iamVjdCIsIm9iaiIsImNvbnN0cnVjdG9yIiwiT2JqZWN0IiwiZXh0ZW5kIiwidGFyZ2V0Iiwic3JjIiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJsZW5ndGgiLCJkb2MiLCJkb2N1bWVudCIsInNzckRvY3VtZW50IiwiYm9keSIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWN0aXZlRWxlbWVudCIsImJsdXIiLCJub2RlTmFtZSIsInF1ZXJ5U2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZ2V0RWxlbWVudEJ5SWQiLCJjcmVhdGVFdmVudCIsImluaXRFdmVudCIsImNyZWF0ZUVsZW1lbnQiLCJjaGlsZHJlbiIsImNoaWxkTm9kZXMiLCJzdHlsZSIsInNldEF0dHJpYnV0ZSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiY3JlYXRlRWxlbWVudE5TIiwiaW1wb3J0Tm9kZSIsImxvY2F0aW9uIiwiaGFzaCIsImhvc3QiLCJob3N0bmFtZSIsImhyZWYiLCJvcmlnaW4iLCJwYXRobmFtZSIsInByb3RvY29sIiwic2VhcmNoIiwid2luIiwid2luZG93IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiaGlzdG9yeSIsInJlcGxhY2VTdGF0ZSIsInB1c2hTdGF0ZSIsImdvIiwiYmFjayIsIkN1c3RvbUV2ZW50IiwidGhpcyIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiSW1hZ2UiLCJEYXRlIiwic2NyZWVuIiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsIm1hdGNoTWVkaWEiLCJEb203IiwiYXJyIiwiaSIsIiQiLCJzZWxlY3RvciIsImNvbnRleHQiLCJlbHMiLCJ0ZW1wUGFyZW50IiwiaHRtbCIsInRyaW0iLCJpbmRleE9mIiwidG9DcmVhdGUiLCJpbm5lckhUTUwiLCJwdXNoIiwibWF0Y2giLCJzcGxpdCIsIm5vZGVUeXBlIiwidW5pcXVlIiwidW5pcXVlQXJyYXkiLCJmbiIsInByb3RvdHlwZSIsIkNsYXNzIiwiTWV0aG9kcyIsImFkZENsYXNzIiwiY2xhc3NOYW1lIiwiY2xhc3NlcyIsImoiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmVDbGFzcyIsInJlbW92ZSIsImhhc0NsYXNzIiwiY29udGFpbnMiLCJ0b2dnbGVDbGFzcyIsInRvZ2dsZSIsImF0dHIiLCJhdHRycyIsInZhbHVlIiwiYXJndW1lbnRzIiwiZ2V0QXR0cmlidXRlIiwiYXR0ck5hbWUiLCJyZW1vdmVBdHRyIiwicmVtb3ZlQXR0cmlidXRlIiwiZGF0YSIsImVsIiwiZG9tN0VsZW1lbnREYXRhU3RvcmFnZSIsImRhdGFLZXkiLCJ0cmFuc2Zvcm0iLCJlbFN0eWxlIiwid2Via2l0VHJhbnNmb3JtIiwidHJhbnNpdGlvbiIsImR1cmF0aW9uIiwid2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwib24iLCJhcmdzIiwiZXZlbnRUeXBlIiwidGFyZ2V0U2VsZWN0b3IiLCJsaXN0ZW5lciIsImNhcHR1cmUiLCJoYW5kbGVMaXZlRXZlbnQiLCJlIiwiZXZlbnREYXRhIiwiZG9tN0V2ZW50RGF0YSIsInVuc2hpZnQiLCJpcyIsImFwcGx5IiwicGFyZW50cyIsImsiLCJoYW5kbGVFdmVudCIsInVuZGVmaW5lZCIsImV2ZW50cyIsImV2ZW50IiwiZG9tN0xpdmVMaXN0ZW5lcnMiLCJwcm94eUxpc3RlbmVyIiwiZG9tN0xpc3RlbmVycyIsIm9mZiIsImhhbmRsZXJzIiwiaGFuZGxlciIsImRvbTdwcm94eSIsInNwbGljZSIsInRyaWdnZXIiLCJldnQiLCJkZXRhaWwiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsImZpbHRlciIsImRhdGFJbmRleCIsImRpc3BhdGNoRXZlbnQiLCJ0cmFuc2l0aW9uRW5kIiwiY2FsbGJhY2siLCJkb20iLCJmaXJlQ2FsbEJhY2siLCJjYWxsIiwib3V0ZXJXaWR0aCIsImluY2x1ZGVNYXJnaW5zIiwic3R5bGVzIiwib2Zmc2V0V2lkdGgiLCJwYXJzZUZsb2F0Iiwib3V0ZXJIZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCJvZmZzZXQiLCJib3giLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjbGllbnRUb3AiLCJjbGllbnRMZWZ0Iiwic2Nyb2xsVG9wIiwic2Nyb2xsWSIsInNjcm9sbExlZnQiLCJzY3JvbGxYIiwidG9wIiwibGVmdCIsImNzcyIsInByb3BzIiwicHJvcCIsImVhY2giLCJ0ZXh0IiwidGV4dENvbnRlbnQiLCJjb21wYXJlV2l0aCIsIm1hdGNoZXMiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImluZGV4IiwiY2hpbGQiLCJwcmV2aW91c1NpYmxpbmciLCJlcSIsInJldHVybkluZGV4IiwiYXBwZW5kIiwibmV3Q2hpbGQiLCJ0ZW1wRGl2IiwiZmlyc3RDaGlsZCIsImFwcGVuZENoaWxkIiwicHJlcGVuZCIsImluc2VydEJlZm9yZSIsIm5leHQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJuZXh0QWxsIiwibmV4dEVscyIsInByZXYiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwicHJldkFsbCIsInByZXZFbHMiLCJwYXJlbnQiLCJwYXJlbnROb2RlIiwiY2xvc2VzdCIsImZpbmQiLCJmb3VuZEVsZW1lbnRzIiwiZm91bmQiLCJtYXRjaGVkSXRlbXMiLCJyZW1vdmVDaGlsZCIsInRvQWRkIiwibWV0aG9kTmFtZSIsIlV0aWxzIiwiZGVsZXRlUHJvcHMiLCJvYmplY3QiLCJuZXh0VGljayIsImRlbGF5Iiwibm93IiwiZ2V0VHJhbnNsYXRlIiwibWF0cml4IiwiY3VyVHJhbnNmb3JtIiwidHJhbnNmb3JtTWF0cml4IiwiYXhpcyIsImN1clN0eWxlIiwiV2ViS2l0Q1NTTWF0cml4IiwibWFwIiwiYSIsInJlcGxhY2UiLCJqb2luIiwiTW96VHJhbnNmb3JtIiwiT1RyYW5zZm9ybSIsIk1zVHJhbnNmb3JtIiwibXNUcmFuc2Zvcm0iLCJ0b1N0cmluZyIsIm00MSIsIm00MiIsInBhcnNlVXJsUXVlcnkiLCJ1cmwiLCJwYXJhbXMiLCJwYXJhbSIsInF1ZXJ5IiwidXJsVG9QYXJzZSIsInBhcmFtc1BhcnQiLCJkZWNvZGVVUklDb21wb25lbnQiLCJvIiwidG8iLCJub0V4dGVuZCIsIm5leHRTb3VyY2UiLCJrZXlzQXJyYXkiLCJuZXh0SW5kZXgiLCJsZW4iLCJuZXh0S2V5IiwiZGVzYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJTdXBwb3J0IiwidG91Y2giLCJEb2N1bWVudFRvdWNoIiwicG9pbnRlckV2ZW50cyIsIlBvaW50ZXJFdmVudCIsIm1heFRvdWNoUG9pbnRzIiwib2JzZXJ2ZXIiLCJwYXNzaXZlTGlzdGVuZXIiLCJzdXBwb3J0c1Bhc3NpdmUiLCJvcHRzIiwiZGVmaW5lUHJvcGVydHkiLCJnZXQiLCJnZXN0dXJlcyIsIlN3aXBlckNsYXNzIiwic2VsZiIsImV2ZW50c0xpc3RlbmVycyIsImV2ZW50TmFtZSIsInByaW9yaXR5IiwibWV0aG9kIiwib25jZUhhbmRsZXIiLCJmN3Byb3h5IiwiZXZlbnRIYW5kbGVyIiwiQXJyYXkiLCJpc0FycmF5Iiwic2xpY2UiLCJldmVudHNBcnJheSIsImluc3RhbmNlUGFyYW1zIiwiaW5zdGFuY2UiLCJtb2R1bGVzIiwibW9kdWxlTmFtZSIsIm1vZHVsZSIsIm1vZHVsZXNQYXJhbXMiLCJtb2R1bGVQYXJhbXMiLCJtb2R1bGVQcm9wTmFtZSIsIm1vZHVsZVByb3AiLCJiaW5kIiwibW9kdWxlRXZlbnROYW1lIiwiY3JlYXRlIiwiY29tcG9uZW50cyIsInVzZSIsIm5hbWUiLCJwcm90byIsInN0YXRpYyIsImluc3RhbGwiLCJtIiwiaW5zdGFsbE1vZHVsZSIsInVwZGF0ZSIsInVwZGF0ZVNpemUiLCJ3aWR0aCIsImhlaWdodCIsInN3aXBlciIsIiRlbCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiaXNIb3Jpem9udGFsIiwiaXNWZXJ0aWNhbCIsInBhcnNlSW50Iiwic2l6ZSIsInVwZGF0ZVNsaWRlcyIsIiR3cmFwcGVyRWwiLCJzd2lwZXJTaXplIiwicnRsIiwicnRsVHJhbnNsYXRlIiwid3JvbmdSVEwiLCJpc1ZpcnR1YWwiLCJ2aXJ0dWFsIiwiZW5hYmxlZCIsInByZXZpb3VzU2xpZGVzTGVuZ3RoIiwic2xpZGVzIiwic2xpZGVDbGFzcyIsInNsaWRlc0xlbmd0aCIsInNuYXBHcmlkIiwic2xpZGVzR3JpZCIsInNsaWRlc1NpemVzR3JpZCIsInNsaWRlc0Zvck1hcmdpbiIsInNsaWRlSW5kZXgiLCJjc3NNb2RlIiwib2Zmc2V0QmVmb3JlIiwic2xpZGVzT2Zmc2V0QmVmb3JlIiwib2Zmc2V0QWZ0ZXIiLCJzbGlkZXNPZmZzZXRBZnRlciIsInByZXZpb3VzU25hcEdyaWRMZW5ndGgiLCJwcmV2aW91c1NsaWRlc0dyaWRMZW5ndGgiLCJzcGFjZUJldHdlZW4iLCJzbGlkZVBvc2l0aW9uIiwicHJldlNsaWRlU2l6ZSIsInNsaWRlc051bWJlckV2ZW5Ub1Jvd3MiLCJzbGlkZVNpemUiLCJ2aXJ0dWFsU2l6ZSIsIm1hcmdpbkxlZnQiLCJtYXJnaW5Ub3AiLCJtYXJnaW5SaWdodCIsIm1hcmdpbkJvdHRvbSIsInNsaWRlc1BlckNvbHVtbiIsIk1hdGgiLCJmbG9vciIsImNlaWwiLCJzbGlkZXNQZXJWaWV3Iiwic2xpZGVzUGVyQ29sdW1uRmlsbCIsIm1heCIsIm5ld1NsaWRlc0dyaWQiLCJzbGlkZXNQZXJSb3ciLCJudW1GdWxsQ29sdW1ucyIsInNsaWRlIiwibmV3U2xpZGVPcmRlckluZGV4IiwiY29sdW1uIiwicm93Iiwic2xpZGVzUGVyR3JvdXAiLCJncm91cEluZGV4Iiwic2xpZGVJbmRleEluR3JvdXAiLCJjb2x1bW5zSW5Hcm91cCIsIm1pbiIsIm9yZGVyIiwic2xpZGVTdHlsZXMiLCJjdXJyZW50VHJhbnNmb3JtIiwiY3VycmVudFdlYktpdFRyYW5zZm9ybSIsInJvdW5kTGVuZ3RocyIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwiYm94U2l6aW5nIiwicGFkZGluZ1RvcCIsInBhZGRpbmdCb3R0b20iLCJzd2lwZXJTbGlkZVNpemUiLCJjZW50ZXJlZFNsaWRlcyIsImFicyIsInNsaWRlc1Blckdyb3VwU2tpcCIsImVmZmVjdCIsInNldFdyYXBwZXJTaXplIiwic2xpZGVzR3JpZEl0ZW0iLCJjZW50ZXJlZFNsaWRlc0JvdW5kcyIsImFsbFNsaWRlc1NpemUiLCJzbGlkZVNpemVWYWx1ZSIsIm1heFNuYXAiLCJzbmFwIiwiY2VudGVySW5zdWZmaWNpZW50U2xpZGVzIiwiYWxsU2xpZGVzT2Zmc2V0Iiwic25hcEluZGV4IiwiZW1pdCIsIndhdGNoT3ZlcmZsb3ciLCJjaGVja092ZXJmbG93Iiwid2F0Y2hTbGlkZXNQcm9ncmVzcyIsIndhdGNoU2xpZGVzVmlzaWJpbGl0eSIsInVwZGF0ZVNsaWRlc09mZnNldCIsInVwZGF0ZUF1dG9IZWlnaHQiLCJzcGVlZCIsImFjdGl2ZVNsaWRlcyIsIm5ld0hlaWdodCIsInNldFRyYW5zaXRpb24iLCJ2aXNpYmxlU2xpZGVzIiwiYWN0aXZlSW5kZXgiLCJzd2lwZXJTbGlkZU9mZnNldCIsIm9mZnNldExlZnQiLCJvZmZzZXRUb3AiLCJ1cGRhdGVTbGlkZXNQcm9ncmVzcyIsInRyYW5zbGF0ZSIsIm9mZnNldENlbnRlciIsInNsaWRlVmlzaWJsZUNsYXNzIiwidmlzaWJsZVNsaWRlc0luZGV4ZXMiLCJzbGlkZVByb2dyZXNzIiwibWluVHJhbnNsYXRlIiwiYXV0b0hlaWdodCIsInNsaWRlQmVmb3JlIiwic2xpZGVBZnRlciIsImlzVmlzaWJsZSIsInByb2dyZXNzIiwidXBkYXRlUHJvZ3Jlc3MiLCJtdWx0aXBsaWVyIiwidHJhbnNsYXRlc0RpZmYiLCJtYXhUcmFuc2xhdGUiLCJpc0JlZ2lubmluZyIsImlzRW5kIiwid2FzQmVnaW5uaW5nIiwid2FzRW5kIiwidXBkYXRlU2xpZGVzQ2xhc3NlcyIsImFjdGl2ZVNsaWRlIiwicmVhbEluZGV4Iiwic2xpZGVBY3RpdmVDbGFzcyIsInNsaWRlTmV4dENsYXNzIiwic2xpZGVQcmV2Q2xhc3MiLCJzbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzIiwic2xpZGVEdXBsaWNhdGVOZXh0Q2xhc3MiLCJzbGlkZUR1cGxpY2F0ZVByZXZDbGFzcyIsImxvb3AiLCJzbGlkZUR1cGxpY2F0ZUNsYXNzIiwibmV4dFNsaWRlIiwicHJldlNsaWRlIiwidXBkYXRlQWN0aXZlSW5kZXgiLCJuZXdBY3RpdmVJbmRleCIsInByZXZpb3VzSW5kZXgiLCJwcmV2aW91c1JlYWxJbmRleCIsInByZXZpb3VzU25hcEluZGV4Iiwibm9ybWFsaXplU2xpZGVJbmRleCIsInNraXAiLCJpbml0aWFsaXplZCIsInJ1bkNhbGxiYWNrc09uSW5pdCIsInVwZGF0ZUNsaWNrZWRTbGlkZSIsInNsaWRlRm91bmQiLCJjbGlja2VkU2xpZGUiLCJjbGlja2VkSW5kZXgiLCJzbGlkZVRvQ2xpY2tlZFNsaWRlIiwidmlydHVhbFRyYW5zbGF0ZSIsImN1cnJlbnRUcmFuc2xhdGUiLCJzZXRUcmFuc2xhdGUiLCJieUNvbnRyb2xsZXIiLCJ3cmFwcGVyRWwiLCJ4IiwieSIsInByZXZpb3VzVHJhbnNsYXRlIiwidHJhbnNsYXRlVG8iLCJydW5DYWxsYmFja3MiLCJ0cmFuc2xhdGVCb3VuZHMiLCJpbnRlcm5hbCIsImFuaW1hdGluZyIsInByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbiIsIm5ld1RyYW5zbGF0ZSIsImlzSCIsInNjcm9sbFRvIiwib25UcmFuc2xhdGVUb1dyYXBwZXJUcmFuc2l0aW9uRW5kIiwiZGVzdHJveWVkIiwidHJhbnNpdGlvbiQxIiwidHJhbnNpdGlvblN0YXJ0IiwiZGlyZWN0aW9uIiwiZGlyIiwic2xpZGVUbyIsImluaXRpYWxTbGlkZSIsImFsbG93U2xpZGVOZXh0IiwiYWxsb3dTbGlkZVByZXYiLCJ0Iiwic2Nyb2xsV2lkdGgiLCJvblNsaWRlVG9XcmFwcGVyVHJhbnNpdGlvbkVuZCIsInNsaWRlVG9Mb29wIiwibmV3SW5kZXgiLCJsb29wZWRTbGlkZXMiLCJzbGlkZU5leHQiLCJpbmNyZW1lbnQiLCJsb29wRml4IiwiX2NsaWVudExlZnQiLCJzbGlkZVByZXYiLCJub3JtYWxpemUiLCJ2YWwiLCJub3JtYWxpemVkVHJhbnNsYXRlIiwibm9ybWFsaXplZFNuYXBHcmlkIiwicHJldkluZGV4IiwicHJldlNuYXAiLCJzbGlkZVJlc2V0Iiwic2xpZGVUb0Nsb3Nlc3QiLCJ0aHJlc2hvbGQiLCJjdXJyZW50U25hcCIsIm5leHRTbmFwIiwic2xpZGVzUGVyVmlld0R5bmFtaWMiLCJzbGlkZVRvSW5kZXgiLCJsb29wQ3JlYXRlIiwibG9vcEZpbGxHcm91cFdpdGhCbGFuayIsImJsYW5rU2xpZGVzTnVtIiwiYmxhbmtOb2RlIiwic2xpZGVCbGFua0NsYXNzIiwibG9vcEFkZGl0aW9uYWxTbGlkZXMiLCJwcmVwZW5kU2xpZGVzIiwiYXBwZW5kU2xpZGVzIiwiY2xvbmVOb2RlIiwiZGlmZiIsImxvb3BEZXN0cm95IiwiZ3JhYkN1cnNvciIsInNldEdyYWJDdXJzb3IiLCJtb3ZpbmciLCJzaW11bGF0ZVRvdWNoIiwiaXNMb2NrZWQiLCJjdXJzb3IiLCJ1bnNldEdyYWJDdXJzb3IiLCJtYW5pcHVsYXRpb24iLCJhcHBlbmRTbGlkZSIsInByZXBlbmRTbGlkZSIsImFkZFNsaWRlIiwiYWN0aXZlSW5kZXhCdWZmZXIiLCJiYXNlTGVuZ3RoIiwic2xpZGVzQnVmZmVyIiwiY3VycmVudFNsaWRlIiwicmVtb3ZlU2xpZGUiLCJzbGlkZXNJbmRleGVzIiwiaW5kZXhUb1JlbW92ZSIsInJlbW92ZUFsbFNsaWRlcyIsIkRldmljZSIsInBsYXRmb3JtIiwidWEiLCJkZXZpY2UiLCJpb3MiLCJhbmRyb2lkIiwiYW5kcm9pZENocm9tZSIsImRlc2t0b3AiLCJpcGhvbmUiLCJpcG9kIiwiaXBhZCIsImVkZ2UiLCJpZSIsImZpcmVmb3giLCJtYWNvcyIsIndpbmRvd3MiLCJjb3Jkb3ZhIiwicGhvbmVnYXAiLCJlbGVjdHJvbiIsInNjcmVlbldpZHRoIiwic2NyZWVuSGVpZ2h0IiwidG9Mb3dlckNhc2UiLCJvcyIsIm9zVmVyc2lvbiIsIndlYlZpZXciLCJzdGFuZGFsb25lIiwid2VidmlldyIsInBpeGVsUmF0aW8iLCJkZXZpY2VQaXhlbFJhdGlvIiwib25Ub3VjaFN0YXJ0IiwidG91Y2hFdmVudHNEYXRhIiwidG91Y2hlcyIsIm9yaWdpbmFsRXZlbnQiLCIkdGFyZ2V0RWwiLCJ0b3VjaEV2ZW50c1RhcmdldCIsImlzVG91Y2hFdmVudCIsInR5cGUiLCJ3aGljaCIsImJ1dHRvbiIsImlzVG91Y2hlZCIsImlzTW92ZWQiLCJub1N3aXBpbmciLCJub1N3aXBpbmdTZWxlY3RvciIsIm5vU3dpcGluZ0NsYXNzIiwiYWxsb3dDbGljayIsInN3aXBlSGFuZGxlciIsImN1cnJlbnRYIiwidGFyZ2V0VG91Y2hlcyIsInBhZ2VYIiwiY3VycmVudFkiLCJwYWdlWSIsInN0YXJ0WCIsInN0YXJ0WSIsImVkZ2VTd2lwZURldGVjdGlvbiIsImlPU0VkZ2VTd2lwZURldGVjdGlvbiIsImVkZ2VTd2lwZVRocmVzaG9sZCIsImlPU0VkZ2VTd2lwZVRocmVzaG9sZCIsImFsbG93VG91Y2hDYWxsYmFja3MiLCJpc1Njcm9sbGluZyIsInN0YXJ0TW92aW5nIiwidG91Y2hTdGFydFRpbWUiLCJzd2lwZURpcmVjdGlvbiIsImFsbG93VGhyZXNob2xkTW92ZSIsInByZXZlbnREZWZhdWx0IiwiZm9ybUVsZW1lbnRzIiwic2hvdWxkUHJldmVudERlZmF1bHQiLCJhbGxvd1RvdWNoTW92ZSIsInRvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdCIsInRvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0Iiwib25Ub3VjaE1vdmUiLCJ0YXJnZXRUb3VjaCIsImNoYW5nZWRUb3VjaGVzIiwicHJldmVudGVkQnlOZXN0ZWRTd2lwZXIiLCJ0b3VjaFJlbGVhc2VPbkVkZ2VzIiwiZGlmZlgiLCJkaWZmWSIsInNxcnQiLCJ0b3VjaEFuZ2xlIiwiYXRhbjIiLCJQSSIsInRvdWNoTW92ZVN0b3BQcm9wYWdhdGlvbiIsIm5lc3RlZCIsInN0b3BQcm9wYWdhdGlvbiIsInN0YXJ0VHJhbnNsYXRlIiwiYWxsb3dNb21lbnR1bUJvdW5jZSIsInRvdWNoUmF0aW8iLCJkaXNhYmxlUGFyZW50U3dpcGVyIiwicmVzaXN0YW5jZVJhdGlvIiwicmVzaXN0YW5jZSIsImZvbGxvd0ZpbmdlciIsImZyZWVNb2RlIiwidmVsb2NpdGllcyIsInBvc2l0aW9uIiwidGltZSIsIm9uVG91Y2hFbmQiLCJjdXJyZW50UG9zIiwidG91Y2hFbmRUaW1lIiwidGltZURpZmYiLCJsYXN0Q2xpY2tUaW1lIiwiZnJlZU1vZGVNb21lbnR1bSIsImxhc3RNb3ZlRXZlbnQiLCJwb3AiLCJ2ZWxvY2l0eUV2ZW50IiwiZGlzdGFuY2UiLCJ2ZWxvY2l0eSIsImZyZWVNb2RlTWluaW11bVZlbG9jaXR5IiwiZnJlZU1vZGVNb21lbnR1bVZlbG9jaXR5UmF0aW8iLCJtb21lbnR1bUR1cmF0aW9uIiwiZnJlZU1vZGVNb21lbnR1bVJhdGlvIiwibW9tZW50dW1EaXN0YW5jZSIsIm5ld1Bvc2l0aW9uIiwiYWZ0ZXJCb3VuY2VQb3NpdGlvbiIsIm5lZWRzTG9vcEZpeCIsImRvQm91bmNlIiwiYm91bmNlQW1vdW50IiwiZnJlZU1vZGVNb21lbnR1bUJvdW5jZVJhdGlvIiwiZnJlZU1vZGVNb21lbnR1bUJvdW5jZSIsImZyZWVNb2RlU3RpY2t5Iiwib25jZSIsIm1vdmVEaXN0YW5jZSIsImN1cnJlbnRTbGlkZVNpemUiLCJsb25nU3dpcGVzTXMiLCJzdG9wSW5kZXgiLCJncm91cFNpemUiLCJyYXRpbyIsImxvbmdTd2lwZXMiLCJsb25nU3dpcGVzUmF0aW8iLCJzaG9ydFN3aXBlcyIsIm5hdmlnYXRpb24iLCJuZXh0RWwiLCJwcmV2RWwiLCJvblJlc2l6ZSIsImJyZWFrcG9pbnRzIiwic2V0QnJlYWtwb2ludCIsImF1dG9wbGF5IiwicnVubmluZyIsInBhdXNlZCIsInJ1biIsIm9uQ2xpY2siLCJwcmV2ZW50Q2xpY2tzIiwicHJldmVudENsaWNrc1Byb3BhZ2F0aW9uIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwib25TY3JvbGwiLCJkdW1teUV2ZW50QXR0YWNoZWQiLCJkdW1teUV2ZW50TGlzdGVuZXIiLCJkZWZhdWx0cyIsImluaXQiLCJ1cGRhdGVPbldpbmRvd1Jlc2l6ZSIsInVuaXF1ZU5hdkVsZW1lbnRzIiwicHJlbG9hZEltYWdlcyIsInVwZGF0ZU9uSW1hZ2VzUmVhZHkiLCJwYXNzaXZlTGlzdGVuZXJzIiwiY29udGFpbmVyTW9kaWZpZXJDbGFzcyIsIndyYXBwZXJDbGFzcyIsInByb3RvdHlwZXMiLCJhdHRhY2hFdmVudHMiLCJ0b3VjaEV2ZW50cyIsInN0YXJ0IiwibW92ZSIsImVuZCIsInBhc3NpdmUiLCJjYW5jZWwiLCJkZXRhY2hFdmVudHMiLCJicmVha3BvaW50IiwiZ2V0QnJlYWtwb2ludCIsImN1cnJlbnRCcmVha3BvaW50IiwiYnJlYWtwb2ludE9ubHlQYXJhbXMiLCJwYXJhbVZhbHVlIiwiYnJlYWtwb2ludFBhcmFtcyIsIm9yaWdpbmFsUGFyYW1zIiwid2FzTXVsdGlSb3ciLCJpc011bHRpUm93IiwiZGlyZWN0aW9uQ2hhbmdlZCIsIm5lZWRzUmVMb29wIiwiY2hhbmdlRGlyZWN0aW9uIiwicG9pbnRzIiwicG9pbnQiLCJtaW5SYXRpbyIsInN1YnN0ciIsImlubmVySGVpZ2h0Iiwic29ydCIsImIiLCJpbm5lcldpZHRoIiwid2FzTG9ja2VkIiwibGFzdFNsaWRlUG9zaXRpb24iLCJhZGRDbGFzc2VzIiwiY2xhc3NOYW1lcyIsInN1ZmZpeGVzIiwic3VmZml4IiwicmVtb3ZlQ2xhc3NlcyIsImltYWdlcyIsImxvYWRJbWFnZSIsImltYWdlRWwiLCJzcmNzZXQiLCJzaXplcyIsImNoZWNrRm9yQ29tcGxldGUiLCJpbWFnZSIsIm9uUmVhZHkiLCJjb21wbGV0ZSIsIm9ubG9hZCIsIm9uZXJyb3IiLCJpbWFnZXNMb2FkZWQiLCJpbWFnZXNUb0xvYWQiLCJjdXJyZW50U3JjIiwiZXh0ZW5kZWREZWZhdWx0cyIsIlN3aXBlciIsInByb3RvdHlwZUdyb3VwIiwicHJvdG9NZXRob2QiLCJtb2R1bGVQYXJhbU5hbWUiLCJzd2lwZXJQYXJhbXMiLCJ1c2VNb2R1bGVzUGFyYW1zIiwicGFzc2VkUGFyYW1zIiwic3dpcGVycyIsImNvbnRhaW5lckVsIiwibmV3UGFyYW1zIiwic2hhZG93Um9vdCIsIm9wdGlvbnMiLCJ0b3VjaEV2ZW50c1RvdWNoIiwidG91Y2hFdmVudHNEZXNrdG9wIiwiY2xpY2tUaW1lb3V0IiwidXNlTW9kdWxlcyIsInNwdiIsImJyZWFrTG9vcCIsInRyYW5zbGF0ZVZhbHVlIiwibmV3RGlyZWN0aW9uIiwibmVlZFVwZGF0ZSIsImN1cnJlbnREaXJlY3Rpb24iLCJzbGlkZUVsIiwiZGVsZXRlSW5zdGFuY2UiLCJjbGVhblN0eWxlcyIsIm5ld0RlZmF1bHRzIiwiRGV2aWNlJDEiLCJTdXBwb3J0JDEiLCJzdXBwb3J0IiwiQnJvd3NlciIsImlzRWRnZSIsImlzU2FmYXJpIiwiaXNVaVdlYlZpZXciLCJ0ZXN0IiwiQnJvd3NlciQxIiwiYnJvd3NlciIsIlJlc2l6ZSIsInJlc2l6ZSIsInJlc2l6ZUhhbmRsZXIiLCJvcmllbnRhdGlvbkNoYW5nZUhhbmRsZXIiLCJkZXN0cm95IiwiT2JzZXJ2ZXIiLCJmdW5jIiwiTXV0YXRpb25PYnNlcnZlciIsIldlYmtpdE11dGF0aW9uT2JzZXJ2ZXIiLCJhdHRhY2giLCJPYnNlcnZlckZ1bmMiLCJtdXRhdGlvbnMiLCJvYnNlcnZlclVwZGF0ZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm9ic2VydmUiLCJhdHRyaWJ1dGVzIiwiY2hpbGRMaXN0IiwiY2hhcmFjdGVyRGF0YSIsIm9ic2VydmVycyIsIm9ic2VydmVQYXJlbnRzIiwiY29udGFpbmVyUGFyZW50cyIsIm9ic2VydmVTbGlkZUNoaWxkcmVuIiwiZGlzY29ubmVjdCIsIk9ic2VydmVyJDEiLCJLZXlib2FyZCIsImhhbmRsZSIsImtjIiwia2V5Q29kZSIsImNoYXJDb2RlIiwic2hpZnRLZXkiLCJhbHRLZXkiLCJjdHJsS2V5IiwibWV0YUtleSIsImtleWJvYXJkIiwib25seUluVmlld3BvcnQiLCJpblZpZXciLCJ3aW5kb3dXaWR0aCIsIndpbmRvd0hlaWdodCIsInN3aXBlck9mZnNldCIsInN3aXBlckNvb3JkIiwicmV0dXJuVmFsdWUiLCJlbmFibGUiLCJkaXNhYmxlIiwiTW91c2V3aGVlbCIsImxhc3RTY3JvbGxUaW1lIiwibGFzdEV2ZW50QmVmb3JlU25hcCIsInJlY2VudFdoZWVsRXZlbnRzIiwiaXNTdXBwb3J0ZWQiLCJlbGVtZW50IiwiaW1wbGVtZW50YXRpb24iLCJoYXNGZWF0dXJlIiwiaXNFdmVudFN1cHBvcnRlZCIsInNYIiwic1kiLCJwWCIsInBZIiwid2hlZWxEZWx0YSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YVgiLCJIT1JJWk9OVEFMX0FYSVMiLCJkZWx0YVkiLCJkZWx0YVgiLCJkZWx0YU1vZGUiLCJzcGluWCIsInNwaW5ZIiwicGl4ZWxYIiwicGl4ZWxZIiwiaGFuZGxlTW91c2VFbnRlciIsIm1vdXNlRW50ZXJlZCIsImhhbmRsZU1vdXNlTGVhdmUiLCJtb3VzZXdoZWVsIiwiZXZlbnRzVGFyZ2VkIiwicmVsZWFzZU9uRWRnZXMiLCJkZWx0YSIsInJ0bEZhY3RvciIsImZvcmNlVG9BeGlzIiwiaW52ZXJ0IiwibmV3RXZlbnQiLCJzaWduIiwiaWdub3JlV2hlZWxFdmVudHMiLCJzZW5zaXRpdml0eSIsInRpbWVvdXQiLCJzaGlmdCIsInByZXZFdmVudCIsImZpcnN0RXZlbnQiLCJzbmFwVG9UaHJlc2hvbGQiLCJhdXRvcGxheURpc2FibGVPbkludGVyYWN0aW9uIiwic3RvcCIsInJhdyIsImFuaW1hdGVTbGlkZXIiLCJyZWxlYXNlU2Nyb2xsIiwiZ2V0VGltZSIsIlBhZ2luYXRpb24iLCJwYWdpbmF0aW9uIiwiY3VycmVudCIsInRvdGFsIiwicGFnaW5hdGlvblR5cGUiLCJidWxsZXRzIiwiZmlyc3RJbmRleCIsImxhc3RJbmRleCIsIm1pZEluZGV4IiwiZHluYW1pY0J1bGxldHMiLCJidWxsZXRTaXplIiwiZHluYW1pY01haW5CdWxsZXRzIiwiZHluYW1pY0J1bGxldEluZGV4IiwiYnVsbGV0QWN0aXZlQ2xhc3MiLCJidWxsZXQiLCIkYnVsbGV0IiwiYnVsbGV0SW5kZXgiLCIkZmlyc3REaXNwbGF5ZWRCdWxsZXQiLCIkbGFzdERpc3BsYXllZEJ1bGxldCIsImR5bmFtaWNCdWxsZXRzTGVuZ3RoIiwiYnVsbGV0c09mZnNldCIsIm9mZnNldFByb3AiLCJjdXJyZW50Q2xhc3MiLCJmb3JtYXRGcmFjdGlvbkN1cnJlbnQiLCJ0b3RhbENsYXNzIiwiZm9ybWF0RnJhY3Rpb25Ub3RhbCIsInByb2dyZXNzYmFyRGlyZWN0aW9uIiwicHJvZ3Jlc3NiYXJPcHBvc2l0ZSIsInNjYWxlIiwic2NhbGVYIiwic2NhbGVZIiwicHJvZ3Jlc3NiYXJGaWxsQ2xhc3MiLCJyZW5kZXJDdXN0b20iLCJsb2NrQ2xhc3MiLCJyZW5kZXIiLCJwYWdpbmF0aW9uSFRNTCIsIm51bWJlck9mQnVsbGV0cyIsInJlbmRlckJ1bGxldCIsImJ1bGxldENsYXNzIiwiYnVsbGV0RWxlbWVudCIsInJlbmRlckZyYWN0aW9uIiwicmVuZGVyUHJvZ3Jlc3NiYXIiLCJjbGlja2FibGUiLCJjbGlja2FibGVDbGFzcyIsIm1vZGlmaWVyQ2xhc3MiLCJwcm9ncmVzc2Jhck9wcG9zaXRlQ2xhc3MiLCJoaWRkZW5DbGFzcyIsImhpZGVPbkNsaWNrIiwibnVtYmVyIiwiYWN0aXZlSW5kZXhDaGFuZ2UiLCJzbmFwSW5kZXhDaGFuZ2UiLCJzbGlkZXNMZW5ndGhDaGFuZ2UiLCJzbmFwR3JpZExlbmd0aENoYW5nZSIsImNsaWNrIiwiU2Nyb2xsYmFyIiwic2Nyb2xsYmFyIiwiZHJhZ1NpemUiLCJ0cmFja1NpemUiLCIkZHJhZ0VsIiwibmV3U2l6ZSIsIm5ld1BvcyIsImhpZGUiLCJvcGFjaXR5IiwiZGl2aWRlciIsIm1vdmVEaXZpZGVyIiwiZGlzcGxheSIsImdldFBvaW50ZXJQb3NpdGlvbiIsImNsaWVudFgiLCJjbGllbnRZIiwic2V0RHJhZ1Bvc2l0aW9uIiwicG9zaXRpb25SYXRpbyIsImRyYWdTdGFydFBvcyIsIm9uRHJhZ1N0YXJ0IiwiZHJhZ1RpbWVvdXQiLCJvbkRyYWdNb3ZlIiwib25EcmFnRW5kIiwic25hcE9uUmVsZWFzZSIsImVuYWJsZURyYWdnYWJsZSIsImFjdGl2ZUxpc3RlbmVyIiwiZGlzYWJsZURyYWdnYWJsZSIsIiRzd2lwZXJFbCIsImRyYWdDbGFzcyIsImRyYWdFbCIsImRyYWdnYWJsZSIsIlpvb20iLCJnZXREaXN0YW5jZUJldHdlZW5Ub3VjaGVzIiwieDEiLCJ5MSIsIngyIiwieTIiLCJvbkdlc3R1cmVTdGFydCIsInpvb20iLCJnZXN0dXJlIiwiZmFrZUdlc3R1cmVUb3VjaGVkIiwiZmFrZUdlc3R1cmVNb3ZlZCIsInNjYWxlU3RhcnQiLCIkc2xpZGVFbCIsIiRpbWFnZUVsIiwiJGltYWdlV3JhcEVsIiwiY29udGFpbmVyQ2xhc3MiLCJtYXhSYXRpbyIsImlzU2NhbGluZyIsIm9uR2VzdHVyZUNoYW5nZSIsInNjYWxlTW92ZSIsImN1cnJlbnRTY2FsZSIsIm9uR2VzdHVyZUVuZCIsInRvdWNoZXNTdGFydCIsInNsaWRlV2lkdGgiLCJzbGlkZUhlaWdodCIsInNjYWxlZFdpZHRoIiwic2NhbGVkSGVpZ2h0IiwibWluWCIsIm1heFgiLCJtaW5ZIiwibWF4WSIsInRvdWNoZXNDdXJyZW50IiwicHJldlBvc2l0aW9uWCIsInByZXZQb3NpdGlvblkiLCJwcmV2VGltZSIsIm1vbWVudHVtRHVyYXRpb25YIiwibW9tZW50dW1EdXJhdGlvblkiLCJtb21lbnR1bURpc3RhbmNlWCIsIm5ld1Bvc2l0aW9uWCIsIm1vbWVudHVtRGlzdGFuY2VZIiwibmV3UG9zaXRpb25ZIiwib25UcmFuc2l0aW9uRW5kIiwib3V0IiwiaW4iLCJ0b3VjaFgiLCJ0b3VjaFkiLCJ0cmFuc2xhdGVYIiwidHJhbnNsYXRlWSIsImltYWdlV2lkdGgiLCJpbWFnZUhlaWdodCIsInRyYW5zbGF0ZU1pblgiLCJ0cmFuc2xhdGVNaW5ZIiwidHJhbnNsYXRlTWF4WCIsInRyYW5zbGF0ZU1heFkiLCJ6b29tZWRTbGlkZUNsYXNzIiwiYWN0aXZlTGlzdGVuZXJXaXRoQ2FwdHVyZSIsInNsaWRlU2VsZWN0b3IiLCJzZXQiLCJ0b3VjaFN0YXJ0IiwidG91Y2hFbmQiLCJkb3VibGVUYXAiLCJzbGlkZUNoYW5nZSIsIkF1dG9wbGF5IiwiJGFjdGl2ZVNsaWRlRWwiLCJyZXZlcnNlRGlyZWN0aW9uIiwic3RvcE9uTGFzdFNsaWRlIiwicGF1c2UiLCJ3YWl0Rm9yVHJhbnNpdGlvbiIsImRpc2FibGVPbkludGVyYWN0aW9uIiwib25WaXNpYmlsaXR5Q2hhbmdlIiwidmlzaWJpbGl0eVN0YXRlIiwiYmVmb3JlVHJhbnNpdGlvblN0YXJ0Iiwic2xpZGVyRmlyc3RNb3ZlIl0sInNvdXJjZVJvb3QiOiIifQ==